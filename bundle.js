/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var t={152:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});var r=n(352),s=n.n(r)()((function(t){return t[1]}));s.push([t.id,'/* Copyright 2016 Google Inc. All Rights Reserved.\r\n\r\nLicensed under the Apache License, Version 2.0 (the "License");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an "AS IS" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n==============================================================================*/\r\n\r\n/* General Type */\r\n\r\nbody {\r\n    font-family: "Helvetica", "Arial", sans-serif;\r\n    background-color: #f7f7f7;\r\n  }\r\n  \r\n  h1 {\r\n    font-size: 34px;\r\n  }\r\n  \r\n  header h1 {\r\n    line-height: 1.45em;\r\n    font-weight: 300;\r\n    color: rgba(255, 255, 255, 0.7);\r\n  }\r\n  \r\n  h1 b {\r\n    font-weight: 400;\r\n    color: rgba(255, 255, 255, 1);\r\n  }\r\n  \r\n  h2 {\r\n    margin: 5px 0;\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  h3 {\r\n    margin: 10px 0;\r\n  }\r\n  \r\n  p a {\r\n    color: #0D658C;\r\n  }\r\n  \r\n  /* Layout */\r\n  \r\n  body {\r\n    margin: 0;\r\n  }\r\n  \r\n  [contenteditable="true"]:focus {\r\n    outline: none;\r\n  }\r\n\r\n  .l--body {\r\n    width: 550px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  \r\n  .l--page {\r\n    width: 944px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  \r\n  @media (min-width: 1180px) {\r\n    .l--page {\r\n      width: 1100px;\r\n    }\r\n  }\r\n  \r\n  @media (min-width: 1400px) {\r\n    .l--page {\r\n      width: 1220px;\r\n    }\r\n  }\r\n  \r\n  /* Buttons */\r\n  \r\n  #main-part .mdl-button {\r\n    background-color: rgba(158,158,158,.1);\r\n    width: 28px;\r\n    height: 28px;\r\n    min-width: 28px;\r\n  }\r\n  \r\n  #main-part .mdl-button:hover {\r\n    background-color: rgba(158,158,158,.3);\r\n  }\r\n  \r\n  #main-part .mdl-button:focus:not(:active) {\r\n      background-color: rgba(158,158,158,.4);\r\n  }\r\n  \r\n  #main-part .mdl-button:active {\r\n      background-color: rgba(158,158,158,.5);\r\n  }\r\n  \r\n  #main-part .mdl-button .material-icons {\r\n    font-size: 20px;\r\n    color: rgba(0, 0, 0, 0.7);\r\n  }\r\n  \r\n  \r\n  .button {\r\n    cursor: pointer;\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    align-items: center;\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n    width: 24px;\r\n    height: 24px;\r\n    font-size: 18px;\r\n    border-radius: 50%;\r\n    margin: 0 1px;\r\n    background-color: rgba(0,0,0,0.05);\r\n    outline: none;\r\n    border: none;\r\n    padding: 0;\r\n    color: #666;\r\n    transition: background-color 0.3s, color 0.3s;\r\n  }\r\n  \r\n  .button:hover {\r\n    background-color: rgba(0,0,0,0.1);\r\n  \r\n  }\r\n  \r\n  .button:active {\r\n    background-color: rgba(0,0,0,0.15);\r\n    color: #333;\r\n  }\r\n  \r\n  .button i {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .hide-button {\r\n    cursor: pointer;\r\n    padding: 6px 4px 8px 4px;\r\n    border-left: 1px solid #2c2c2c;\r\n    border-bottom: 1px solid #2c2c2c;\r\n    position: fixed;\r\n    right: 0px;\r\n    background: #1a1a1a;\r\n    color: #eee;\r\n    font: 11px \'Lucida Grande\', sans-serif;\r\n    display: table;\r\n  }\r\n  \r\n  /* Header */\r\n  \r\n  .github-link {\r\n    width: 60px;\r\n    height: 60px;\r\n    position: absolute;\r\n    display: block;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 1000;\r\n  }\r\n  \r\n  .github-link .bg {\r\n    fill: #fff;\r\n    fill-opacity: 0.2;\r\n  }\r\n  \r\n  .github-link:hover .bg {\r\n    fill-opacity: 0.3;\r\n  }\r\n  \r\n  .github-link .icon {\r\n    fill: #fff;\r\n    fill-opacity: 0.6;\r\n  }\r\n  \r\n  .github-link:hover .icon {\r\n    fill-opacity: 0.7;\r\n  }\r\n  \r\n  header {\r\n    border-bottom: solid 1px rgba(0,0,0,0.4);\r\n    background-color: #183D4E;\r\n    color: white;\r\n    overflow: hidden;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n    position: relative;\r\n  }\r\n  \r\n  header h1 {\r\n    font-size: 30px;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n  \r\n  header h1 .optional {\r\n    display: none;\r\n  }\r\n  \r\n  @media (min-width: 1064px) {\r\n    header h1 .optional {\r\n      display: inline;\r\n    }\r\n  }\r\n  \r\n  @media (min-height: 700px) {\r\n    header h1 {\r\n      margin-top: 40px;\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n  \r\n  @media (min-height: 800px) {\r\n    header h1 {\r\n      font-size: 34px;\r\n      margin-top: 60px;\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n  \r\n  /* Top Controls */\r\n  \r\n  #top-controls {\r\n    border-bottom: 1px solid #ddd;\r\n    padding: 18px 0;\r\n    box-shadow: 0 1px 4px rgba(0,0,0,0.08);\r\n    background: white;\r\n  }\r\n  \r\n  @media (min-height: 700px) {\r\n    #top-controls {\r\n      padding: 2px 0;\r\n    }\r\n  }\r\n  \r\n  #top-controls .container {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  #top-controls .timeline-controls {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 20px;\r\n    width: 140px;\r\n  }\r\n  \r\n  \r\n  #top-controls .control {\r\n    flex-grow: 1;\r\n    max-width: 180px;\r\n    min-width: 110px;\r\n    margin-left: 30px;\r\n    margin-top: 6px;\r\n  }\r\n  \r\n\r\n  #top-controls .control label {\r\n    color: rgba(14, 12, 12, 0.884);\r\n    font-size: 13px;\r\n    display: block;\r\n    margin-bottom: 6px;\r\n    font-weight: 300;\r\n    white-space: nowrap;\r\n  }\r\n  #top-controls .control input {\r\n    font-size: 14px;\r\n    margin: 0;\r\n  }\r\n\r\n  #top-controls .control .value {\r\n    font-size: 24px;\r\n    margin: 0;\r\n    font-weight: 300;\r\n  }\r\n  \r\n  #top-controls .control .select {\r\n    position: relative;\r\n  }\r\n  \r\n  #top-controls .control select {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n    display: block;\r\n    background: none;\r\n    border: none;\r\n    border-radius: 0;\r\n    padding: 6px 0;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    border-bottom: solid 1px #ccc;\r\n    color: #333;\r\n    outline: none;\r\n  }\r\n  \r\n  #top-controls .control select:focus {\r\n    border-bottom-color: #183D4E;\r\n  }\r\n  \r\n  #top-controls .control .select::after {\r\n    class: "material-icons";\r\n    content: "arrow_drop_down";\r\n    color: #999;\r\n    font-family: \'Material Icons\';\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    font-size: 18px;\r\n    line-height: 1;\r\n    letter-spacing: normal;\r\n    text-transform: none;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    word-wrap: normal;\r\n    direction: ltr;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 6px;\r\n    pointer-events: none;\r\n  }\r\n  \r\n  .ui-clusterCount {\r\n    align-items: left !important;\r\n  } \r\n  /* Hover card */\r\n  #hovercard {\r\n    display: none;\r\n    position: absolute;\r\n    padding: 5px;\r\n    border: 1px solid #aaa;\r\n    z-index: 1000;\r\n    background: #fff;\r\n    cursor: default;\r\n    border-radius: 5px;\r\n    left: 240px;\r\n    width: 150px;\r\n    top: -20px;\r\n  }\r\n  \r\n  #hovercard input {\r\n    width: 60px;\r\n  }\r\n  \r\n  /* Main Part*/\r\n  \r\n  #main-part {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    margin-top: 30px;\r\n    margin-bottom: 100px;\r\n    padding-top: 2px;\r\n    position: relative;\r\n  }\r\n  \r\n  @media (min-height: 700px) {\r\n    #main-part {\r\n      margin-top: 50px;\r\n    }\r\n  }\r\n  \r\n  #main-part h4 {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    position: relative;\r\n    padding-bottom: 8px;\r\n    margin: 0;\r\n    line-height: 1.4em;\r\n  }\r\n  \r\n  #main-part p,\r\n  #main-part .column .label,\r\n  #main-part .column label {\r\n    font-weight: 300;\r\n    line-height: 1.38em;\r\n    margin: 0;\r\n    color: #777;\r\n    font-size: 13px;\r\n  }\r\n  \r\n  .more {\r\n    position: absolute;\r\n    left: 50%;\r\n  }\r\n  \r\n  .more button {\r\n    position: absolute;\r\n    left: -28px;\r\n    top: -28px;\r\n    background: white;\r\n  }\r\n  \r\n  .more button:hover,\r\n  .more button:active,\r\n  .more button:focus,\r\n  .more button:focus:not(:active) {\r\n    background: white;\r\n  }\r\n  \r\n  svg text {\r\n    dominant-baseline: middle;\r\n  }\r\n  \r\n  canvas {\r\n    display: block;\r\n  }\r\n  \r\n  .link {\r\n    fill: none;\r\n    stroke: #aaa;\r\n    stroke-width: 1;\r\n  }\r\n  \r\n  g.column rect {\r\n    stroke: none;\r\n  }\r\n  \r\n  #heatmap {\r\n    position: relative;\r\n    float: left;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  #heatmap .tick line {\r\n    stroke: #ddd;\r\n  }\r\n  \r\n  #heatmap .tick text {\r\n    fill: #bbb;\r\n    dominant-baseline: auto;\r\n  }\r\n  \r\n  #heatmap .tick:nth-child(7) text {\r\n    fill: #333;\r\n  }\r\n  \r\n  #heatmap .tick:nth-child(7) line {\r\n    stroke: #999;\r\n  }\r\n  \r\n  /* Data column */\r\n  \r\n  .vcenter {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .data.column {\r\n    width: 10%;\r\n  }\r\n  \r\n  .data.column .dataset-list {\r\n    margin: 20px 0 10px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .data.column .dataset {\r\n    position: relative;\r\n    float: left;\r\n    width: 34px;\r\n    height: 34px;\r\n    margin: 0 14px 14px 0;\r\n  }\r\n  \r\n  .data.column .dataset:nth-of-type(2n) {\r\n    margin-right: 0;\r\n  }\r\n  \r\n  .data.column .data-thumbnail {\r\n    cursor: pointer;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 0.2;\r\n    border: 2px solid rgba(0,0,0,0.1);\r\n    border-radius: 3px;\r\n  }\r\n  \r\n  /*.data.column .dataset:first-of-type {\r\n    margin-top: 8px;\r\n  }\r\n  \r\n  .data.column .dataset:last-of-type {\r\n    margin-bottom: 20px;\r\n  }*/\r\n  \r\n  .data.column .data-thumbnail:hover {\r\n    border: 2px solid #999;\r\n  }\r\n  \r\n  .data.column .data-thumbnail.selected {\r\n    border: 2px solid black;\r\n    opacity: 1;\r\n    box-shadow: 0 1px 5px rgba(0,0,0,0.2);\r\n    background-color: white;\r\n  }\r\n  \r\n  #main-part .data.column .dataset .label {\r\n    position: absolute;\r\n    left: 48px;\r\n    top: calc(50% - 9px);\r\n    display: none;\r\n  }\r\n  \r\n  #main-part .data.column p.slider {\r\n    margin: 0 -25px 20px;\r\n  }\r\n  \r\n  #top-controls .basic-button {\r\n    font-family: \'Roboto\', \'Helvetica\', \'Arial\', sans-serif;\r\n    margin: 20px 0 10px 0;\r\n    height: auto;\r\n    width: 100%;\r\n    display: block;\r\n    color: rgb(255, 255, 255);\r\n    border: none;\r\n    background: rgb(30, 76, 98);\r\n    border-radius: 3px;\r\n    padding: 5px;\r\n    font-size: 14px;\r\n    text-transform: uppercase;\r\n    font-weight: 500;\r\n    outline: none;\r\n    transition: background 0.3s linear;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  /* Features column */\r\n  \r\n  .features.column {\r\n    width: 10%;\r\n    position: relative;\r\n  }\r\n  \r\n  .features.column .plus-minus-neurons {\r\n    position: absolute;\r\n    text-align: center;\r\n    line-height: 28px;\r\n    top: -58px;\r\n    width: 65px;\r\n    height: 44px;\r\n    font-size: 12px;\r\n    z-index: 100;\r\n  }\r\n  \r\n  .plus-minus-neurons .mdl-button:first-of-type {\r\n    margin-right: 5px;\r\n  }\r\n  \r\n  .features.column .callout {\r\n    position: absolute;\r\n    width: 95px;\r\n    font-style: italic;\r\n  }\r\n  \r\n  .features.column .callout svg {\r\n    position: absolute;\r\n    left: -15px;\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n  \r\n  .features.column .callout svg path {\r\n    fill: none;\r\n    stroke: black;\r\n    stroke-opacity: 0.4;\r\n  }\r\n  \r\n  .features.column .callout svg defs path {\r\n    fill: black;\r\n    stroke: none;\r\n    fill-opacity: 0.4;\r\n  }\r\n  \r\n  #main-part .features.column .callout .label {\r\n    position: absolute;\r\n    top: 24px;\r\n    left: 3px;\r\n    font-size: 11px;\r\n  }\r\n  \r\n  /* Network (inside features column) */\r\n  \r\n  #network {\r\n    position: absolute;\r\n    top: 110px;\r\n    left: 0;\r\n    z-index: 100;\r\n  }\r\n  \r\n  #network svg .main-label {\r\n    font-size: 13px;\r\n    fill: #333;\r\n    font-weight: 300;\r\n  }\r\n  \r\n  .axis line {\r\n    fill: none;\r\n    stroke: #777;\r\n    shape-rendering: crispEdges;\r\n  }\r\n  \r\n  .axis text {\r\n    fill: #777;\r\n    font-size: 10px;\r\n  }\r\n  \r\n  .axis path {\r\n    display: none;\r\n  }\r\n  \r\n  #network svg .active .main-label {\r\n    fill: #333\r\n  }\r\n  \r\n  #network svg #markerArrow {\r\n    fill: black;\r\n    stroke: black;\r\n    stroke-opacity: 0.2;\r\n  }\r\n  \r\n  #network .node {\r\n    cursor: default;\r\n  }\r\n  \r\n  #network .node rect {\r\n    fill: white;\r\n    stroke-width: 0;\r\n  }\r\n  \r\n  #network .node.inactive {\r\n    opacity: 0.5;\r\n  }\r\n  \r\n  #network .node.hovered {\r\n    opacity: 1.0;\r\n  }\r\n  \r\n  @-webkit-keyframes flowing {\r\n    from { stroke-dashoffset: 0; } to { stroke-dashoffset: -10; }\r\n  }\r\n  \r\n  #network .core .link {\r\n    stroke-dasharray: 9 1;\r\n    stroke-dashoffset: 1;\r\n    /*-webkit-animation: 0.5s linear 0s infinite flowing;*/\r\n  }\r\n  \r\n  /** Invisible thick links used for showing weight values on mouse hover. */\r\n  #network .core .link-hover {\r\n    stroke-width: 8;\r\n    stroke: black;\r\n    fill: none;\r\n    opacity: 0;\r\n  }\r\n  \r\n  #network .canvas canvas {\r\n    position: absolute;\r\n    top: -2px;\r\n    left: -2px;\r\n    border: 2px solid black;\r\n    border-radius: 3px;\r\n    box-shadow: 0 2px 5px rgba(0,0,0,0.2);\r\n  }\r\n  \r\n  #network .canvas.inactive canvas {\r\n    box-shadow: inherit;\r\n  }\r\n  \r\n  #network .canvas.inactive canvas {\r\n    opacity: 0.4;\r\n    border: 0;\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n  \r\n  #network .canvas.hovered canvas {\r\n    opacity: 1.0;\r\n    border: 2px solid #666;\r\n    top: -2px;\r\n    left: -2px;\r\n  }\r\n  \r\n  /* Hidden layers column */\r\n  \r\n  .hidden-layers.column {\r\n    width: 30%;\r\n  }\r\n  \r\n  #main-part .hidden-layers h4 {\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n    margin-top: -5px;\r\n  }\r\n  \r\n  .hidden-layers #layers-label {\r\n    width: 125px;\r\n    display: inline-block;\r\n  }\r\n  \r\n  .hidden-layers #num-layers {\r\n    margin: 0 10px;\r\n    width: 10px;\r\n    display: inline-block;\r\n  }\r\n  \r\n  .hidden-layers h4 .mdl-button {\r\n    margin-right: 5px;\r\n  }\r\n  \r\n  .bracket {\r\n    margin-top: 5px;\r\n    border: solid 1px rgba(0, 0, 0, 0.2);\r\n    border-bottom: 0;\r\n    height: 4px;\r\n  }\r\n  \r\n  .bracket.reverse {\r\n    border-bottom: solid 1px rgba(0, 0, 0, 0.2);\r\n    border-top: 0;\r\n    margin-top: 0;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  /* Output column */\r\n  \r\n  .output.column {\r\n    width: 30%;\r\n    padding-left: 40px;\r\n  }\r\n  \r\n  .metrics {\r\n    position: relative;\r\n    font-weight: 300;\r\n    font-size: 13px;;\r\n    height: 60px;\r\n    margin-left: -8px;\r\n  }\r\n  \r\n  #linechart {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 50%;\r\n    height: 55px;\r\n  }\r\n  .metrics .train {\r\n    color: #777;\r\n  }\r\n  \r\n  #loss-test {\r\n    color: black;\r\n  }\r\n  \r\n  .output .output-stats .value {\r\n    color: rgba(0, 0, 0, 0.6);\r\n    /*font-size: 20px;*/\r\n    font-weight: 300;\r\n    display: inline;\r\n  \r\n  }\r\n  \r\n  g.train circle {\r\n    stroke: white;\r\n    stroke-width: 1;\r\n    stroke-opacity: 0.8;\r\n    fill-opacity: 0.9;\r\n  }\r\n  \r\n   g.test circle {\r\n    stroke-width: 1;\r\n    stroke: black;\r\n    stroke-opacity: 0.6;\r\n    fill-opacity: 0.9;\r\n  }\r\n  \r\n  #main-part .output .mdl-checkbox__label.label {\r\n    line-height: 1.7em;\r\n  }\r\n  \r\n  /* Article */\r\n  \r\n  article {\r\n    background: white;\r\n    padding: 80px 0;\r\n    box-shadow: 0 0px 4px rgba(0, 0, 0, 0.1);\r\n    /*border-top: 1px solid rgba(0, 0, 0, 0.08);*/\r\n  }\r\n  \r\n  article h2, article h3 {\r\n    margin: 60px 0 20px 0;\r\n    font-size: 22px;\r\n    font-weight: 500;\r\n    line-height: 1.45em;\r\n    color: rgba(0, 0, 0, 0.7);\r\n  }\r\n  \r\n  article h3 {\r\n    margin: 40px 0 20px 0;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  article :first-child h2 {\r\n    margin-top: 0;\r\n  }\r\n  \r\n  article p {\r\n    font-weight: 400;\r\n    font-size: 17px;\r\n    line-height: 1.6;\r\n    color: rgba(0, 0, 0, 0.7);\r\n  \r\n  }\r\n  \r\n  /* Footer */\r\n  \r\n  footer {\r\n    border-top: solid 1px #eee;\r\n    color: rgb(47, 126, 157);\r\n    font-weight: 300;\r\n    padding: 40px 0;\r\n    height: 30px;\r\n  }\r\n  \r\n  footer svg {\r\n    margin-top: 2px;\r\n    float: left;\r\n    width: 110px;\r\n    height: 18px;\r\n    fill: #aaa;\r\n  }\r\n  \r\n  footer .links {\r\n    float: right;\r\n    font-size: 13px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    margin-left: 20px;\r\n  }\r\n  \r\n  footer .links a {\r\n    margin-right: 15px;\r\n    text-decoration: none;\r\n    color: #999;\r\n  }\r\n  \r\n  footer .links a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  .hide-controls {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .hide-controls label.mdl-checkbox {\r\n    width: 145px;\r\n    height: 30px;\r\n  }\r\n  \r\n  .hide-controls .mdl-checkbox__label {\r\n    font-size: 13px;\r\n  }\r\n  \r\n  /* Material Overrides */\r\n  \r\n  /* Buttons */\r\n  \r\n  .mdl-button--fab.mdl-button--colored,\r\n  .mdl-button--fab.mdl-button--colored:hover,\r\n  .mdl-button--fab.mdl-button--colored:active,\r\n  .mdl-button--fab.mdl-button--colored:focus,\r\n  .mdl-button--fab.mdl-button--colored:focus:not(:active) {\r\n      background: #183D4E;\r\n  }\r\n  \r\n  /* Checkbox */\r\n  \r\n  .mdl-checkbox__box-outline {\r\n    border-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  .mdl-checkbox.is-checked .mdl-checkbox__tick-outline {\r\n    background-color: #183D4E;\r\n  }\r\n  \r\n  .mdl-checkbox.is-checked .mdl-checkbox__tick-outline {\r\n    background-color: #183D4E;\r\n  }\r\n  \r\n  .mdl-checkbox.is-checked .mdl-checkbox__box-outline {\r\n    border-color: #183D4E;\r\n  }\r\n  \r\n  .mdl-checkbox__ripple-container .mdl-ripple {\r\n    background-color: #183D4E;\r\n  }\r\n  \r\n  /* Slider */\r\n  \r\n  #main-part .mdl-slider.is-upgraded {\r\n    color: #183D4E;\r\n  }\r\n  \r\n  #main-part .mdl-slider__background-lower {\r\n    background-color: #183D4E;\r\n  }\r\n  \r\n  #main-part .mdl-slider.is-upgraded::-webkit-slider-thumb {\r\n    background-color: #183D4E;\r\n  }\r\n  \r\n  #main-part .mdl-slider.is-upgraded::-moz-range-thumb {\r\n    background-color: #183D4E;\r\n  }\r\n  \r\n  #main-part .mdl-slider.is-upgraded::-ms-thumb {\r\n    background-color: #183D4E;\r\n  }\r\n  \r\n  #main-part .mdl-slider.is-upgraded.is-lowest-value::-webkit-slider-thumb {\r\n    border-color: #183D4E;\r\n  }\r\n  \r\n  #main-part .mdl-slider.is-upgraded.is-lowest-value::-moz-range-thumb {\r\n    border-color: #183D4E;\r\n  }\r\n  /* Keep grey focus circle for non-start values */\r\n  #main-part .mdl-slider.is-upgraded:focus:not(:active)::-webkit-slider-thumb {\r\n    box-shadow: 0 0 0 10px rgba(0,0,0, 0.12);\r\n  }\r\n  \r\n  .chart-header {\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  .mdl-data-table {\r\n    position: relative;\r\n    border-collapse: collapse;\r\n    white-space: nowrap;\r\n    background-color: #fff\r\n  }\r\n  .mdl-data-table thead {\r\n    padding-bottom: 3px\r\n  }\r\n  .mdl-data-table tbody tr {\r\n    position: relative;\r\n    height: 48px;\r\n    transition-duration: .28s;\r\n    transition-timing-function: cubic-bezier(.4, 0, .2, 1);\r\n    transition-property: background-color;\r\n  }\r\n  .mdl-data-table tbody tr:hover {\r\n    background-color: #eee\r\n  }\r\n  .mdl-data-table td {\r\n    position: relative;\r\n    height: 48px;\r\n    border: 1px solid rgba(0, 0, 0, .12);\r\n    padding: 12px 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid rgba(0, 0, 0, .12); */\r\n    text-align: center;\r\n    border-collapse: collapse;\r\n  }\r\n  .mdl-data-table th {\r\n    border: 1px solid rgba(0, 0, 0, .12);\r\n    position: relative;\r\n    vertical-align: bottom;\r\n    text-overflow: ellipsis;\r\n    font-weight: 700;\r\n    line-height: 24px;\r\n    letter-spacing: 0;\r\n    height: 48px;\r\n    font-size: 12px;\r\n    color: rgba(0, 0, 0, .54);\r\n    box-sizing: border-box;\r\n    padding: 12px 14px;\r\n    text-align: center\r\n  }\r\n\r\n  .txt_epsilon, .txt_neighborPoints {\r\n    outline: none;\r\n  }',""]);const i=s},617:(t,e,n)=>{var r=n(125),s=n(476),i=n(179),a=n(295),o=n(461),l=n(42),u=n(678);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},125:function(t,e,n){var r;!function(t,s,i){function a(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},42:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},476:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},461:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},295:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},179:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},678:(t,e,n)=>{var r;!function(s,i){var a,o=this,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=b(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,y(s)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),y(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,y(s)]}}():t,3),r),p=new f(r),x=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(i.random=t,e):t})(x,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function b(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return y(e)}function y(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,b(i.random(),s),t.exports){t.exports=p;try{a=n(906)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},996:(t,e,n)=>{var r=n(38),s=n(174),i=n(963),a=n(190),o=n(970),l=n(793),u=n(988);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},38:function(t,e,n){var r;!function(t,s,i){function a(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},793:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},174:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},970:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},190:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},963:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},988:(t,e,n)=>{var r;!function(s,i){var a,o=this,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=b(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,y(s)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),y(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,y(s)]}}():t,3),r),p=new f(r),x=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(i.random=t,e):t})(x,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function b(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return y(e)}function y(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,b(i.random(),s),t.exports){t.exports=p;try{a=n(906)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},352:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var s={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(s[a]=!0)}for(var o=0;o<t.length;o++){var l=[].concat(t[o]);r&&s[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),e.push(l))}},e}},915:t=>{function e(t,e,n,r){this.dataset=[],this.epsilon=1,this.minPts=2,this.distance=this._euclideanDistance,this.clusters=[],this.noise=[],this._visited=[],this._assigned=[],this._datasetLength=0,this._init(t,e,n,r)}e.prototype.run=function(t,e,n,r){this._init(t,e,n,r);for(var s=0;s<this._datasetLength;s++)if(1!==this._visited[s]){this._visited[s]=1;var i=this._regionQuery(s);if(i.length<this.minPts)this.noise.push(s);else{var a=this.clusters.length;this.clusters.push([]),this._addToCluster(s,a),this._expandCluster(a,i)}}return this.clusters},e.prototype._init=function(t,e,n,r){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this.noise=[],this._datasetLength=t.length,this._visited=new Array(this._datasetLength),this._assigned=new Array(this._datasetLength)}e&&(this.epsilon=e),n&&(this.minPts=n),r&&(this.distance=r)},e.prototype._expandCluster=function(t,e){for(var n=0;n<e.length;n++){var r=e[n];if(1!==this._visited[r]){this._visited[r]=1;var s=this._regionQuery(r);s.length>=this.minPts&&(e=this._mergeArrays(e,s))}1!==this._assigned[r]&&this._addToCluster(r,t)}},e.prototype._addToCluster=function(t,e){this.clusters[e].push(t),this._assigned[t]=1},e.prototype._regionQuery=function(t){for(var e=[],n=0;n<this._datasetLength;n++)this.distance(this.dataset[t],this.dataset[n])<this.epsilon&&e.push(n);return e},e.prototype._mergeArrays=function(t,e){for(var n=e.length,r=0;r<n;r++){var s=e[r];t.indexOf(s)<0&&t.push(s)}return t},e.prototype._euclideanDistance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;)n+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(n)},t.exports&&(t.exports=e)},822:t=>{function e(t,e,n){this.k=3,this.dataset=[],this.assignments=[],this.centroids=[],this.init(t,e,n)}e.prototype.init=function(t,e,n){this.assignments=[],this.centroids=[],void 0!==t&&(this.dataset=t),void 0!==e&&(this.k=e),void 0!==n&&(this.distance=n)},e.prototype.run=function(t,e){this.init(t,e);for(var n=this.dataset.length,r=0;r<this.k;r++)this.centroids[r]=this.randomCentroid();for(var s=!0;s;){s=this.assign();for(var i=0;i<this.k;i++){for(var a=new Array(c),o=0,l=0;l<c;l++)a[l]=0;for(var u=0;u<n;u++){var c=this.dataset[u].length;if(i===this.assignments[u]){for(l=0;l<c;l++)a[l]+=this.dataset[u][l];o++}}if(o>0){for(l=0;l<c;l++)a[l]/=o;this.centroids[i]=a}else this.centroids[i]=this.randomCentroid(),s=!0}}return this.getClusters()},e.prototype.randomCentroid=function(){var t,e,n=this.dataset.length-1;do{e=Math.round(Math.random()*n),t=this.dataset[e]}while(this.centroids.indexOf(t)>=0);return t},e.prototype.assign=function(){for(var t,e=!1,n=this.dataset.length,r=0;r<n;r++)(t=this.argmin(this.dataset[r],this.centroids,this.distance))!=this.assignments[r]&&(this.assignments[r]=t,e=!0);return e},e.prototype.getClusters=function(){for(var t,e=new Array(this.k),n=0;n<this.assignments.length;n++)void 0===e[t=this.assignments[n]]&&(e[t]=[]),e[t].push(n);return e},e.prototype.argmin=function(t,e,n){for(var r,s=Number.MAX_VALUE,i=0,a=e.length,o=0;o<a;o++)(r=n(t,e[o]))<s&&(s=r,i=o);return i},e.prototype.distance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;){var s=t[r]-e[r];n+=s*s}return Math.sqrt(n)},t.exports&&(t.exports=e)},304:(t,e,n)=>{if(t.exports)var r=n(80);function s(t,e,n,r){this.epsilon=1,this.minPts=1,this.distance=this._euclideanDistance,this._reachability=[],this._processed=[],this._coreDistance=0,this._orderedList=[],this._init(t,e,n,r)}s.prototype.run=function(t,e,n,s){this._init(t,e,n,s);for(var i=0,a=this.dataset.length;i<a;i++)if(1!==this._processed[i]){this._processed[i]=1,this.clusters.push([i]);var o=this.clusters.length-1;this._orderedList.push(i);var l=new r(null,null,"asc"),u=this._regionQuery(i);void 0!==this._distanceToCore(i)&&(this._updateQueue(i,u,l),this._expandCluster(o,l))}return this.clusters},s.prototype.getReachabilityPlot=function(){for(var t=[],e=0,n=this._orderedList.length;e<n;e++){var r=this._orderedList[e],s=this._reachability[r];t.push([r,s])}return t},s.prototype._init=function(t,e,n,r){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this._reachability=new Array(this.dataset.length),this._processed=new Array(this.dataset.length),this._coreDistance=0,this._orderedList=[]}e&&(this.epsilon=e),n&&(this.minPts=n),r&&(this.distance=r)},s.prototype._updateQueue=function(t,e,n){var r=this;this._coreDistance=this._distanceToCore(t),e.forEach((function(e){if(void 0===r._processed[e]){var s=r.distance(r.dataset[t],r.dataset[e]),i=Math.max(r._coreDistance,s);void 0===r._reachability[e]?(r._reachability[e]=i,n.insert(e,i)):i<r._reachability[e]&&(r._reachability[e]=i,n.remove(e),n.insert(e,i))}}))},s.prototype._expandCluster=function(t,e){for(var n=e.getElements(),r=0,s=n.length;r<s;r++){var i=n[r];if(void 0===this._processed[i]){var a=this._regionQuery(i);this._processed[i]=1,this.clusters[t].push(i),this._orderedList.push(i),void 0!==this._distanceToCore(i)&&(this._updateQueue(i,a,e),this._expandCluster(t,e))}}},s.prototype._distanceToCore=function(t){for(var e=this.epsilon,n=0;n<e;n++)if(this._regionQuery(t,n).length>=this.minPts)return n},s.prototype._regionQuery=function(t,e){e=e||this.epsilon;for(var n=[],r=0,s=this.dataset.length;r<s;r++)this.distance(this.dataset[t],this.dataset[r])<e&&n.push(r);return n},s.prototype._euclideanDistance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;)n+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(n)},t.exports&&(t.exports=s)},80:t=>{function e(t,e,n){this._queue=[],this._priorities=[],this._sorting="desc",this._init(t,e,n)}e.prototype.insert=function(t,e){for(var n=this._queue.length,r=n;r--;){var s=this._priorities[r];"desc"===this._sorting?e>s&&(n=r):e<s&&(n=r)}this._insertAt(t,e,n)},e.prototype.remove=function(t){for(var e=this._queue.length;e--;)if(t===this._queue[e]){this._queue.splice(e,1),this._priorities.splice(e,1);break}},e.prototype.forEach=function(t){this._queue.forEach(t)},e.prototype.getElements=function(){return this._queue},e.prototype.getElementPriority=function(t){return this._priorities[t]},e.prototype.getPriorities=function(){return this._priorities},e.prototype.getElementsWithPriorities=function(){for(var t=[],e=0,n=this._queue.length;e<n;e++)t.push([this._queue[e],this._priorities[e]]);return t},e.prototype._init=function(t,e,n){if(t&&e){if(this._queue=[],this._priorities=[],t.length!==e.length)throw new Error("Arrays must have the same length");for(var r=0;r<t.length;r++)this.insert(t[r],e[r])}n&&(this._sorting=n)},e.prototype._insertAt=function(t,e,n){this._queue.length===n?(this._queue.push(t),this._priorities.push(e)):(this._queue.splice(n,0,t),this._priorities.splice(n,0,e))},t.exports&&(t.exports=e)},492:(t,e,n)=>{t.exports&&(t.exports={DBSCAN:n(915),KMEANS:n(822),OPTICS:n(304),PriorityQueue:n(80)})},343:(t,e,n)=>{"use strict";var r=n(90),s=r.ValidatorResult,i=r.SchemaError,a={ignoreProperties:{id:!0,default:!0,description:!0,title:!0,additionalItems:!0,then:!0,else:!0,$schema:!0,$ref:!0,extends:!0}},o=a.validators={};function l(t,e,n,r,s){var i=e.throwError,a=e.throwAll;e.throwError=!1,e.throwAll=!1;var o=this.validateSchema(t,s,e,n);return e.throwError=i,e.throwAll=a,!o.valid&&r instanceof Function&&r(o),o.valid}function u(t,e){if(Object.hasOwnProperty.call(t,e))return t[e];if(e in t)for(;t=Object.getPrototypeOf(t);)if(Object.propertyIsEnumerable.call(t,e))return t[e]}function c(t,e,n,r,s,i){if(this.types.object(t)&&(!e.properties||void 0===e.properties[s]))if(!1===e.additionalProperties)i.addError({name:"additionalProperties",argument:s,message:"is not allowed to have the additional property "+JSON.stringify(s)});else{var a=e.additionalProperties||{};"function"==typeof n.preValidateProperty&&n.preValidateProperty(t,s,a,n,r);var o=this.validateSchema(t[s],a,n,r.makeChild(a,s));o.instance!==i.instance[s]&&(i.instance[s]=o.instance),i.importErrors(o)}}o.type=function(t,e,n,r){if(void 0===t)return null;var i=new s(t,e,n,r),a=Array.isArray(e.type)?e.type:[e.type];if(!a.some(this.testType.bind(this,t,e,n,r))){var o=a.map((function(t){if(t){var e=t.$id||t.id;return e?"<"+e+">":t+""}}));i.addError({name:"type",argument:o,message:"is not of a type(s) "+o})}return i},o.anyOf=function(t,e,n,r){if(void 0===t)return null;var a=new s(t,e,n,r),o=new s(t,e,n,r);if(!Array.isArray(e.anyOf))throw new i("anyOf must be an array");if(!e.anyOf.some(l.bind(this,t,n,r,(function(t){o.importErrors(t)})))){var u=e.anyOf.map((function(t,e){var n=t.$id||t.id;return n?"<"+n+">":t.title&&JSON.stringify(t.title)||t.$ref&&"<"+t.$ref+">"||"[subschema "+e+"]"}));n.nestedErrors&&a.importErrors(o),a.addError({name:"anyOf",argument:u,message:"is not any of "+u.join(",")})}return a},o.allOf=function(t,e,n,r){if(void 0===t)return null;if(!Array.isArray(e.allOf))throw new i("allOf must be an array");var a=new s(t,e,n,r),o=this;return e.allOf.forEach((function(e,s){var i=o.validateSchema(t,e,n,r);if(!i.valid){var l=e.$id||e.id||e.title&&JSON.stringify(e.title)||e.$ref&&"<"+e.$ref+">"||"[subschema "+s+"]";a.addError({name:"allOf",argument:{id:l,length:i.errors.length,valid:i},message:"does not match allOf schema "+l+" with "+i.errors.length+" error[s]:"}),a.importErrors(i)}})),a},o.oneOf=function(t,e,n,r){if(void 0===t)return null;if(!Array.isArray(e.oneOf))throw new i("oneOf must be an array");var a=new s(t,e,n,r),o=new s(t,e,n,r),u=e.oneOf.filter(l.bind(this,t,n,r,(function(t){o.importErrors(t)}))).length,c=e.oneOf.map((function(t,e){return t.$id||t.id||t.title&&JSON.stringify(t.title)||t.$ref&&"<"+t.$ref+">"||"[subschema "+e+"]"}));return 1!==u&&(n.nestedErrors&&a.importErrors(o),a.addError({name:"oneOf",argument:c,message:"is not exactly one from "+c.join(",")})),a},o.if=function(t,e,n,i){if(void 0===t)return null;if(!r.isSchema(e.if))throw new Error('Expected "if" keyword to be a schema');var a,o=l.call(this,t,n,i,null,e.if),u=new s(t,e,n,i);if(o){if(void 0===e.then)return;if(!r.isSchema(e.then))throw new Error('Expected "then" keyword to be a schema');a=this.validateSchema(t,e.then,n,i.makeChild(e.then)),u.importErrors(a)}else{if(void 0===e.else)return;if(!r.isSchema(e.else))throw new Error('Expected "else" keyword to be a schema');a=this.validateSchema(t,e.else,n,i.makeChild(e.else)),u.importErrors(a)}return u},o.propertyNames=function(t,e,n,a){if(this.types.object(t)){var o=new s(t,e,n,a),l=void 0!==e.propertyNames?e.propertyNames:{};if(!r.isSchema(l))throw new i('Expected "propertyNames" to be a schema (object or boolean)');for(var c in t)if(void 0!==u(t,c)){var h=this.validateSchema(c,l,n,a.makeChild(l));o.importErrors(h)}return o}},o.properties=function(t,e,n,r){if(this.types.object(t)){var a=new s(t,e,n,r),o=e.properties||{};for(var l in o){var c=o[l];if(void 0!==c){if(null===c)throw new i('Unexpected null, expected schema in "properties"');"function"==typeof n.preValidateProperty&&n.preValidateProperty(t,l,c,n,r);var h=u(t,l),d=this.validateSchema(h,c,n,r.makeChild(c,l));d.instance!==a.instance[l]&&(a.instance[l]=d.instance),a.importErrors(d)}}return a}},o.patternProperties=function(t,e,n,r){if(this.types.object(t)){var a=new s(t,e,n,r),o=e.patternProperties||{};for(var l in t){var u=!0;for(var h in o){var d=o[h];if(void 0!==d){if(null===d)throw new i('Unexpected null, expected schema in "patternProperties"');try{var p=new RegExp(h,"u")}catch(t){p=new RegExp(h)}if(p.test(l)){u=!1,"function"==typeof n.preValidateProperty&&n.preValidateProperty(t,l,d,n,r);var f=this.validateSchema(t[l],d,n,r.makeChild(d,l));f.instance!==a.instance[l]&&(a.instance[l]=f.instance),a.importErrors(f)}}}u&&c.call(this,t,e,n,r,l,a)}return a}},o.additionalProperties=function(t,e,n,r){if(this.types.object(t)){if(e.patternProperties)return null;var i=new s(t,e,n,r);for(var a in t)c.call(this,t,e,n,r,a,i);return i}},o.minProperties=function(t,e,n,r){if(this.types.object(t)){var i=new s(t,e,n,r);return Object.keys(t).length>=e.minProperties||i.addError({name:"minProperties",argument:e.minProperties,message:"does not meet minimum property length of "+e.minProperties}),i}},o.maxProperties=function(t,e,n,r){if(this.types.object(t)){var i=new s(t,e,n,r);return Object.keys(t).length<=e.maxProperties||i.addError({name:"maxProperties",argument:e.maxProperties,message:"does not meet maximum property length of "+e.maxProperties}),i}},o.items=function(t,e,n,r){var i=this;if(this.types.array(t)&&e.items){var a=new s(t,e,n,r);return t.every((function(t,s){var o=Array.isArray(e.items)?e.items[s]||e.additionalItems:e.items;if(void 0===o)return!0;if(!1===o)return a.addError({name:"items",message:"additionalItems not permitted"}),!1;var l=i.validateSchema(t,o,n,r.makeChild(o,s));return l.instance!==a.instance[s]&&(a.instance[s]=l.instance),a.importErrors(l),!0})),a}},o.minimum=function(t,e,n,r){if(this.types.number(t)){var i=new s(t,e,n,r);return e.exclusiveMinimum&&!0===e.exclusiveMinimum?t>e.minimum||i.addError({name:"minimum",argument:e.minimum,message:"must be greater than "+e.minimum}):t>=e.minimum||i.addError({name:"minimum",argument:e.minimum,message:"must be greater than or equal to "+e.minimum}),i}},o.maximum=function(t,e,n,r){if(this.types.number(t)){var i=new s(t,e,n,r);return e.exclusiveMaximum&&!0===e.exclusiveMaximum?t<e.maximum||i.addError({name:"maximum",argument:e.maximum,message:"must be less than "+e.maximum}):t<=e.maximum||i.addError({name:"maximum",argument:e.maximum,message:"must be less than or equal to "+e.maximum}),i}},o.exclusiveMinimum=function(t,e,n,r){if("boolean"!=typeof e.exclusiveMaximum&&this.types.number(t)){var i=new s(t,e,n,r);return t>e.exclusiveMinimum||i.addError({name:"exclusiveMinimum",argument:e.exclusiveMinimum,message:"must be strictly greater than "+e.exclusiveMinimum}),i}},o.exclusiveMaximum=function(t,e,n,r){if("boolean"!=typeof e.exclusiveMaximum&&this.types.number(t)){var i=new s(t,e,n,r);return t<e.exclusiveMaximum||i.addError({name:"exclusiveMaximum",argument:e.exclusiveMaximum,message:"must be strictly less than "+e.exclusiveMaximum}),i}};var h=function(t,e,n,a,o,l){if(this.types.number(t)){var u=e[o];if(0==u)throw new i(o+" cannot be zero");var c=new s(t,e,n,a),h=r.getDecimalPlaces(t),d=r.getDecimalPlaces(u),p=Math.max(h,d),f=Math.pow(10,p);return Math.round(t*f)%Math.round(u*f)!=0&&c.addError({name:o,argument:u,message:l+JSON.stringify(u)}),c}};function d(t,e,n){var s,i=n.length;for(s=e+1;s<i;s++)if(r.deepCompareStrict(t,n[s]))return!1;return!0}o.multipleOf=function(t,e,n,r){return h.call(this,t,e,n,r,"multipleOf","is not a multiple of (divisible by) ")},o.divisibleBy=function(t,e,n,r){return h.call(this,t,e,n,r,"divisibleBy","is not divisible by (multiple of) ")},o.required=function(t,e,n,r){var i=new s(t,e,n,r);return void 0===t&&!0===e.required?i.addError({name:"required",message:"is required"}):this.types.object(t)&&Array.isArray(e.required)&&e.required.forEach((function(e){void 0===u(t,e)&&i.addError({name:"required",argument:e,message:"requires property "+JSON.stringify(e)})})),i},o.pattern=function(t,e,n,r){if(this.types.string(t)){var i=new s(t,e,n,r),a=e.pattern;try{var o=new RegExp(a,"u")}catch(t){o=new RegExp(a)}return t.match(o)||i.addError({name:"pattern",argument:e.pattern,message:"does not match pattern "+JSON.stringify(e.pattern.toString())}),i}},o.format=function(t,e,n,i){if(void 0!==t){var a=new s(t,e,n,i);return a.disableFormat||r.isFormat(t,e.format,this)||a.addError({name:"format",argument:e.format,message:"does not conform to the "+JSON.stringify(e.format)+" format"}),a}},o.minLength=function(t,e,n,r){if(this.types.string(t)){var i=new s(t,e,n,r),a=t.match(/[\uDC00-\uDFFF]/g);return t.length-(a?a.length:0)>=e.minLength||i.addError({name:"minLength",argument:e.minLength,message:"does not meet minimum length of "+e.minLength}),i}},o.maxLength=function(t,e,n,r){if(this.types.string(t)){var i=new s(t,e,n,r),a=t.match(/[\uDC00-\uDFFF]/g);return t.length-(a?a.length:0)<=e.maxLength||i.addError({name:"maxLength",argument:e.maxLength,message:"does not meet maximum length of "+e.maxLength}),i}},o.minItems=function(t,e,n,r){if(this.types.array(t)){var i=new s(t,e,n,r);return t.length>=e.minItems||i.addError({name:"minItems",argument:e.minItems,message:"does not meet minimum length of "+e.minItems}),i}},o.maxItems=function(t,e,n,r){if(this.types.array(t)){var i=new s(t,e,n,r);return t.length<=e.maxItems||i.addError({name:"maxItems",argument:e.maxItems,message:"does not meet maximum length of "+e.maxItems}),i}},o.uniqueItems=function(t,e,n,r){if(!0===e.uniqueItems&&this.types.array(t)){var i=new s(t,e,n,r);return t.every(d)||i.addError({name:"uniqueItems",message:"contains duplicate item"}),i}},o.dependencies=function(t,e,n,r){if(this.types.object(t)){var i=new s(t,e,n,r);for(var a in e.dependencies)if(void 0!==t[a]){var o=e.dependencies[a],l=r.makeChild(o,a);if("string"==typeof o&&(o=[o]),Array.isArray(o))o.forEach((function(e){void 0===t[e]&&i.addError({name:"dependencies",argument:l.propertyPath,message:"property "+e+" not found, required by "+l.propertyPath})}));else{var u=this.validateSchema(t,o,n,l);i.instance!==u.instance&&(i.instance=u.instance),u&&u.errors.length&&(i.addError({name:"dependencies",argument:l.propertyPath,message:"does not meet dependency required by "+l.propertyPath}),i.importErrors(u))}}return i}},o.enum=function(t,e,n,a){if(void 0===t)return null;if(!Array.isArray(e.enum))throw new i("enum expects an array",e);var o=new s(t,e,n,a);return e.enum.some(r.deepCompareStrict.bind(null,t))||o.addError({name:"enum",argument:e.enum,message:"is not one of enum values: "+e.enum.map(String).join(",")}),o},o.const=function(t,e,n,i){if(void 0===t)return null;var a=new s(t,e,n,i);return r.deepCompareStrict(e.const,t)||a.addError({name:"const",argument:e.const,message:"does not exactly match expected constant: "+e.const}),a},o.not=o.disallow=function(t,e,n,r){var i=this;if(void 0===t)return null;var a=new s(t,e,n,r),o=e.not||e.disallow;return o?(Array.isArray(o)||(o=[o]),o.forEach((function(s){if(i.testType(t,e,n,r,s)){var o=s&&(s.$id||s.id)||s;a.addError({name:"not",argument:o,message:"is of prohibited type "+o})}})),a):null},t.exports=a},90:(t,e,n)=>{"use strict";var r=n(44),s=e.ValidationError=function(t,e,n,r,s,i){if(Array.isArray(r)?(this.path=r,this.property=r.reduce((function(t,e){return t+h(e)}),"instance")):void 0!==r&&(this.property=r),t&&(this.message=t),n){var a=n.$id||n.id;this.schema=a||n}void 0!==e&&(this.instance=e),this.name=s,this.argument=i,this.stack=this.toString()};s.prototype.toString=function(){return this.property+" "+this.message};var i=e.ValidatorResult=function(t,e,n,r){this.instance=t,this.schema=e,this.options=n,this.path=r.path,this.propertyPath=r.propertyPath,this.errors=[],this.throwError=n&&n.throwError,this.throwFirst=n&&n.throwFirst,this.throwAll=n&&n.throwAll,this.disableFormat=n&&!0===n.disableFormat};function a(t,e){return e+": "+t.toString()+"\n"}function o(t){Error.captureStackTrace&&Error.captureStackTrace(this,o),this.instance=t.instance,this.schema=t.schema,this.options=t.options,this.errors=t.errors}i.prototype.addError=function(t){var e;if("string"==typeof t)e=new s(t,this.instance,this.schema,this.path);else{if(!t)throw new Error("Missing error detail");if(!t.message)throw new Error("Missing error message");if(!t.name)throw new Error("Missing validator type");e=new s(t.message,this.instance,this.schema,this.path,t.name,t.argument)}if(this.errors.push(e),this.throwFirst)throw new o(this);if(this.throwError)throw e;return e},i.prototype.importErrors=function(t){"string"==typeof t||t&&t.validatorType?this.addError(t):t&&t.errors&&Array.prototype.push.apply(this.errors,t.errors)},i.prototype.toString=function(t){return this.errors.map(a).join("")},Object.defineProperty(i.prototype,"valid",{get:function(){return!this.errors.length}}),t.exports.ValidatorResultError=o,o.prototype=new Error,o.prototype.constructor=o,o.prototype.name="Validation Error";var l=e.SchemaError=function t(e,n){this.message=e,this.schema=n,Error.call(this,e),Error.captureStackTrace(this,t)};l.prototype=Object.create(Error.prototype,{constructor:{value:l,enumerable:!1},name:{value:"SchemaError",enumerable:!1}});var u=e.SchemaContext=function(t,e,n,r,s){this.schema=t,this.options=e,Array.isArray(n)?(this.path=n,this.propertyPath=n.reduce((function(t,e){return t+h(e)}),"instance")):this.propertyPath=n,this.base=r,this.schemas=s};u.prototype.resolve=function(t){return r.resolve(this.base,t)},u.prototype.makeChild=function(t,e){var n=void 0===e?this.path:this.path.concat([e]),s=t.$id||t.id,i=r.resolve(this.base,s||""),a=new u(t,this.options,n,i,Object.create(this.schemas));return s&&!a.schemas[i]&&(a.schemas[i]=t),a};var c=e.FORMAT_REGEXPS={"date-time":/^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\.\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,date:/^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,time:/^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,email:/^(?:[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+\.)*[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!\.)){0,61}[a-zA-Z0-9]?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\[(?:(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\]))$/,"ip-address":/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,ipv6:/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,uri:/^[a-zA-Z][a-zA-Z0-9+-.]*:[^\s]*$/,"uri-reference":/^(((([A-Za-z][+\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\-.0-9A-Za-z]*:)?\/((%[0-9A-Fa-f]{2}|\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\[(([Vv][0-9A-Fa-f]+\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\])?)(:\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\[(([Vv][0-9A-Fa-f]+\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\])?)(:\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\-.0-9A-Za-z]*:)?\/((%[0-9A-Fa-f]{2}|\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\[(([Vv][0-9A-Fa-f]+\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\])?)(:\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\d*)?|(\[(([Vv][0-9A-Fa-f]+\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\])?:\d*|\[(([Vv][0-9A-Fa-f]+\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\])?)?|[A-Za-z][+\-.0-9A-Za-z]*:?)?$/,color:/^(#?([0-9A-Fa-f]{3}){1,2}\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\(\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*\))|(rgb\(\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*\)))$/,hostname:/^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\.?$/,"host-name":/^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\.?$/,alpha:/^[a-zA-Z]+$/,alphanumeric:/^[a-zA-Z0-9]+$/,"utc-millisec":function(t){return"string"==typeof t&&parseFloat(t)===parseInt(t,10)&&!isNaN(t)},regex:function(t){var e=!0;try{new RegExp(t)}catch(t){e=!1}return e},style:/\s*(.+?):\s*([^;]+);?/,phone:/^\+(?:[0-9] ?){6,14}[0-9]$/};c.regexp=c.regex,c.pattern=c.regex,c.ipv4=c["ip-address"],e.isFormat=function(t,e,n){if("string"==typeof t&&void 0!==c[e]){if(c[e]instanceof RegExp)return c[e].test(t);if("function"==typeof c[e])return c[e](t)}else if(n&&n.customFormats&&"function"==typeof n.customFormats[e])return n.customFormats[e](t);return!0};var h=e.makeSuffix=function(t){return(t=t.toString()).match(/[.\s\[\]]/)||t.match(/^[\d]/)?t.match(/^\d+$/)?"["+t+"]":"["+JSON.stringify(t)+"]":"."+t};function d(t,e,n,r){"object"==typeof n?e[r]=m(t[r],n):-1===t.indexOf(n)&&e.push(n)}function p(t,e,n){e[n]=t[n]}function f(t,e,n,r){"object"==typeof e[r]&&e[r]&&t[r]?n[r]=m(t[r],e[r]):n[r]=e[r]}function m(t,e){var n=Array.isArray(e),r=n&&[]||{};return n?(t=t||[],r=r.concat(t),e.forEach(d.bind(null,t,r))):(t&&"object"==typeof t&&Object.keys(t).forEach(p.bind(null,t,r)),Object.keys(e).forEach(f.bind(null,t,e,r))),r}function g(t){return"/"+encodeURIComponent(t).replace(/~/g,"%7E")}e.deepCompareStrict=function t(e,n){if(typeof e!=typeof n)return!1;if(Array.isArray(e))return!!Array.isArray(n)&&e.length===n.length&&e.every((function(r,s){return t(e[s],n[s])}));if("object"==typeof e){if(!e||!n)return e===n;var r=Object.keys(e),s=Object.keys(n);return r.length===s.length&&r.every((function(r){return t(e[r],n[r])}))}return e===n},t.exports.deepMerge=m,e.objectGetPath=function(t,e){for(var n,r=e.split("/").slice(1);"string"==typeof(n=r.shift());){var s=decodeURIComponent(n.replace(/~0/,"~").replace(/~1/g,"/"));if(!(s in t))return;t=t[s]}return t},e.encodePath=function(t){return t.map(g).join("")},e.getDecimalPlaces=function(t){var e=0;if(isNaN(t))return e;"number"!=typeof t&&(t=Number(t));var n=t.toString().split("e");if(2===n.length){if("-"!==n[1][0])return e;e=Number(n[1].slice(1))}var r=n[0].split(".");return 2===r.length&&(e+=r[1].length),e},e.isSchema=function(t){return"object"==typeof t&&t||"boolean"==typeof t}},530:(t,e,n)=>{"use strict";n(71);n(90).ValidatorResult,n(90).ValidatorResultError,n(90).ValidationError,n(90).SchemaError,n(971),n(971).R},971:(t,e,n)=>{"use strict";var r=n(44),s=n(90);function i(t,e){this.id=t,this.ref=e}t.exports.R=function(t,e){function n(t,e){if(e&&"object"==typeof e)if(e.$ref){var i=r.resolve(t,e.$ref);u[i]=u[i]?u[i]+1:0}else{var c=e.$id||e.id,h=c?r.resolve(t,c):t;if(h){if(h.indexOf("#")<0&&(h+="#"),l[h]){if(!s.deepCompareStrict(l[h],e))throw new Error("Schema <"+h+"> already exists with different definition");return l[h]}l[h]=e,"#"==h[h.length-1]&&(l[h.substring(0,h.length-1)]=e)}a(h+"/items",Array.isArray(e.items)?e.items:[e.items]),a(h+"/extends",Array.isArray(e.extends)?e.extends:[e.extends]),n(h+"/additionalItems",e.additionalItems),o(h+"/properties",e.properties),n(h+"/additionalProperties",e.additionalProperties),o(h+"/definitions",e.definitions),o(h+"/patternProperties",e.patternProperties),o(h+"/dependencies",e.dependencies),a(h+"/disallow",e.disallow),a(h+"/allOf",e.allOf),a(h+"/anyOf",e.anyOf),a(h+"/oneOf",e.oneOf),n(h+"/not",e.not)}}function a(t,e){if(Array.isArray(e))for(var r=0;r<e.length;r++)n(t+"/"+r,e[r])}function o(t,e){if(e&&"object"==typeof e)for(var r in e)n(t+"/"+r,e[r])}var l={},u={};return n(t,e),new i(l,u)}},71:(t,e,n)=>{"use strict";var r=n(44),s=n(343),i=n(90),a=n(971).R,o=i.ValidatorResult,l=i.ValidatorResultError,u=i.SchemaError,c=i.SchemaContext,h=function t(){this.customFormats=Object.create(t.prototype.customFormats),this.schemas={},this.unresolvedRefs=[],this.types=Object.create(p),this.attributes=Object.create(s.validators)};function d(t){var e="string"==typeof t?t:t.$ref;return"string"==typeof e&&e}h.prototype.customFormats={},h.prototype.schemas=null,h.prototype.types=null,h.prototype.attributes=null,h.prototype.unresolvedRefs=null,h.prototype.addSchema=function(t,e){var n=this;if(!t)return null;var r=a(e||"/",t),s=e||t.$id||t.id;for(var i in r.id)this.schemas[i]=r.id[i];for(var i in r.ref)this.unresolvedRefs.push(i);return this.unresolvedRefs=this.unresolvedRefs.filter((function(t){return void 0===n.schemas[t]})),this.schemas[s]},h.prototype.addSubSchemaArray=function(t,e){if(Array.isArray(e))for(var n=0;n<e.length;n++)this.addSubSchema(t,e[n])},h.prototype.addSubSchemaObject=function(t,e){if(e&&"object"==typeof e)for(var n in e)this.addSubSchema(t,e[n])},h.prototype.setSchemas=function(t){this.schemas=t},h.prototype.getSchema=function(t){return this.schemas[t]},h.prototype.validate=function(t,e,n,s){if("boolean"!=typeof e&&"object"!=typeof e||null===e)throw new u("Expected `schema` to be an object or boolean");n||(n={});var i,h=e.$id||e.id,d=r.resolve(n.base||"/",h||"");if(!s){(s=new c(e,n,[],d,Object.create(this.schemas))).schemas[d]||(s.schemas[d]=e);var p=a(d,e);for(var f in p.id){var m=p.id[f];s.schemas[f]=m}}if(n.required&&void 0===t)return(i=new o(t,e,n,s)).addError("is required, but is undefined"),i;if(!(i=this.validateSchema(t,e,n,s)))throw new Error("Result undefined");if(n.throwAll&&i.errors.length)throw new l(i);return i},h.prototype.validateSchema=function(t,e,n,r){var a=new o(t,e,n,r);if("boolean"==typeof e)!0===e?e={}:!1===e&&(e={type:[]});else if(!e)throw new Error("schema is undefined");if(e.extends)if(Array.isArray(e.extends)){var l={schema:e,ctx:r};e.extends.forEach(this.schemaTraverser.bind(this,l)),e=l.schema,l.schema=null,l.ctx=null,l=null}else e=i.deepMerge(e,this.superResolve(e.extends,r));var h=d(e);if(h){var p=this.resolve(e,h,r),f=new c(p.subschema,n,r.path,p.switchSchema,r.schemas);return this.validateSchema(t,p.subschema,n,f)}var m=n&&n.skipAttributes||[];for(var g in e)if(!s.ignoreProperties[g]&&m.indexOf(g)<0){var b=null,y=this.attributes[g];if(y)b=y.call(this,t,e,n,r);else if(!1===n.allowUnknownAttributes)throw new u("Unsupported attribute: "+g,e);b&&a.importErrors(b)}if("function"==typeof n.rewrite){var x=n.rewrite.call(this,t,e,n,r);a.instance=x}return a},h.prototype.schemaTraverser=function(t,e){t.schema=i.deepMerge(t.schema,this.superResolve(e,t.ctx))},h.prototype.superResolve=function(t,e){var n=d(t);return n?this.resolve(t,n,e).subschema:t},h.prototype.resolve=function(t,e,n){if(e=n.resolve(e),n.schemas[e])return{subschema:n.schemas[e],switchSchema:e};var s=r.parse(e),a=s&&s.hash,o=a&&a.length&&e.substr(0,e.length-a.length);if(!o||!n.schemas[o])throw new u("no such schema <"+e+">",t);var l=i.objectGetPath(n.schemas[o],a.substr(1));if(void 0===l)throw new u("no such schema "+a+" located in <"+o+">",t);return{subschema:l,switchSchema:e}},h.prototype.testType=function(t,e,n,r,s){if(void 0!==s){if(null===s)throw new u('Unexpected null in "type" keyword');if("function"==typeof this.types[s])return this.types[s].call(this,t);if(s&&"object"==typeof s){var i=this.validateSchema(t,s,n,r);return void 0===i||!(i&&i.errors.length)}return!0}};var p=h.prototype.types={};p.string=function(t){return"string"==typeof t},p.number=function(t){return"number"==typeof t&&isFinite(t)},p.integer=function(t){return"number"==typeof t&&t%1==0},p.boolean=function(t){return"boolean"==typeof t},p.array=function(t){return Array.isArray(t)},p.null=function(t){return null===t},p.date=function(t){return t instanceof Date},p.any=function(t){return!0},p.object=function(t){return t&&"object"==typeof t&&!Array.isArray(t)&&!(t instanceof Date)},t.exports=h},63:t=>{"use strict";function e(t,e){return Object.prototype.hasOwnProperty.call(t,e)}t.exports=function(t,n,r,s){n=n||"&",r=r||"=";var i={};if("string"!=typeof t||0===t.length)return i;var a=/\+/g;t=t.split(n);var o=1e3;s&&"number"==typeof s.maxKeys&&(o=s.maxKeys);var l=t.length;o>0&&l>o&&(l=o);for(var u=0;u<l;++u){var c,h,d,p,f=t[u].replace(a,"%20"),m=f.indexOf(r);m>=0?(c=f.substr(0,m),h=f.substr(m+1)):(c=f,h=""),d=decodeURIComponent(c),p=decodeURIComponent(h),e(i,d)?Array.isArray(i[d])?i[d].push(p):i[d]=[i[d],p]:i[d]=p}return i}},957:t=>{"use strict";var e=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}};t.exports=function(t,n,r,s){return n=n||"&",r=r||"=",null===t&&(t=void 0),"object"==typeof t?Object.keys(t).map((function(s){var i=encodeURIComponent(e(s))+r;return Array.isArray(t[s])?t[s].map((function(t){return i+encodeURIComponent(e(t))})).join(n):i+encodeURIComponent(e(t[s]))})).join(n):s?encodeURIComponent(e(s))+r+encodeURIComponent(e(t)):""}},582:(t,e,n)=>{"use strict";e.decode=e.parse=n(63),e.encode=e.stringify=n(957)},474:(t,e,n)=>{var r=n(898),s=n(776),i=n(920),a=n(707),o=n(655),l=n(668),u=n(64);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},898:function(t,e,n){var r;!function(t,s,i){function a(t){var e,n=this,r=(e=4022871197,function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},668:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},776:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},655:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},707:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},920:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},64:function(t,e,n){var r;!function(s,i,a){var o,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=b(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,y(i)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(l):(t=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(t)),y(t)}catch(t){var e=s.navigator,n=e&&e.plugins;return[+new Date,s,n,s.screen,y(i)]}}():t,3),r),p=new f(r),x=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),i),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(a.random=t,e):t})(x,d,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function b(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return y(e)}function y(t){return String.fromCharCode.apply(0,t)}if(b(a.random(),i),t.exports){t.exports=p;try{o=n(906)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}("undefined"!=typeof self?self:this,[],Math)},701:(t,e,n)=>{"use strict";var r,s=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),i=[];function a(t){for(var e=-1,n=0;n<i.length;n++)if(i[n].identifier===t){e=n;break}return e}function o(t,e){for(var n={},r=[],s=0;s<t.length;s++){var o=t[s],l=e.base?o[0]+e.base:o[0],u=n[l]||0,c="".concat(l," ").concat(u);n[l]=u+1;var h=a(c),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==h?(i[h].references++,i[h].updater(d)):i.push({identifier:c,updater:m(d,e),references:1}),r.push(c)}return r}function l(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=s(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var u,c=(u=[],function(t,e){return u[t]=e,u.filter(Boolean).join("\n")});function h(t,e,n,r){var s=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=c(e,s);else{var i=document.createTextNode(s),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function d(t,e,n){var r=n.css,s=n.media,i=n.sourceMap;if(s?t.setAttribute("media",s):t.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var p=null,f=0;function m(t,e){var n,r,s;if(e.singleton){var i=f++;n=p||(p=l(e)),r=h.bind(null,n,i,!1),s=h.bind(null,n,i,!0)}else n=l(e),r=d.bind(null,n,e),s=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else s()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=o(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var s=a(n[r]);i[s].references--}for(var l=o(t,e),u=0;u<n.length;u++){var c=a(n[u]);0===i[c].references&&(i[c].updater(),i.splice(c,1))}n=l}}}},928:function(t,e,n){var r;t=n.nmd(t),function(s){e&&e.nodeType,t&&t.nodeType;var i="object"==typeof n.g&&n.g;i.global!==i&&i.window!==i&&i.self;var a,o=2147483647,l=36,u=/^xn--/,c=/[^\x20-\x7E]/,h=/[\x2E\u3002\uFF0E\uFF61]/g,d={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},p=Math.floor,f=String.fromCharCode;function m(t){throw RangeError(d[t])}function g(t,e){for(var n=t.length,r=[];n--;)r[n]=e(t[n]);return r}function b(t,e){var n=t.split("@"),r="";return n.length>1&&(r=n[0]+"@",t=n[1]),r+g((t=t.replace(h,".")).split("."),e).join(".")}function y(t){for(var e,n,r=[],s=0,i=t.length;s<i;)(e=t.charCodeAt(s++))>=55296&&e<=56319&&s<i?56320==(64512&(n=t.charCodeAt(s++)))?r.push(((1023&e)<<10)+(1023&n)+65536):(r.push(e),s--):r.push(e);return r}function x(t){return g(t,(function(t){var e="";return t>65535&&(e+=f((t-=65536)>>>10&1023|55296),t=56320|1023&t),e+f(t)})).join("")}function w(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function v(t,e,n){var r=0;for(t=n?p(t/700):t>>1,t+=p(t/e);t>455;r+=l)t=p(t/35);return p(r+36*t/(t+38))}function k(t){var e,n,r,s,i,a,u,c,h,d,f,g=[],b=t.length,y=0,w=128,k=72;for((n=t.lastIndexOf("-"))<0&&(n=0),r=0;r<n;++r)t.charCodeAt(r)>=128&&m("not-basic"),g.push(t.charCodeAt(r));for(s=n>0?n+1:0;s<b;){for(i=y,a=1,u=l;s>=b&&m("invalid-input"),((c=(f=t.charCodeAt(s++))-48<10?f-22:f-65<26?f-65:f-97<26?f-97:l)>=l||c>p((o-y)/a))&&m("overflow"),y+=c*a,!(c<(h=u<=k?1:u>=k+26?26:u-k));u+=l)a>p(o/(d=l-h))&&m("overflow"),a*=d;k=v(y-i,e=g.length+1,0==i),p(y/e)>o-w&&m("overflow"),w+=p(y/e),y%=e,g.splice(y++,0,w)}return x(g)}function I(t){var e,n,r,s,i,a,u,c,h,d,g,b,x,k,I,$=[];for(b=(t=y(t)).length,e=128,n=0,i=72,a=0;a<b;++a)(g=t[a])<128&&$.push(f(g));for(r=s=$.length,s&&$.push("-");r<b;){for(u=o,a=0;a<b;++a)(g=t[a])>=e&&g<u&&(u=g);for(u-e>p((o-n)/(x=r+1))&&m("overflow"),n+=(u-e)*x,e=u,a=0;a<b;++a)if((g=t[a])<e&&++n>o&&m("overflow"),g==e){for(c=n,h=l;!(c<(d=h<=i?1:h>=i+26?26:h-i));h+=l)I=c-d,k=l-d,$.push(f(w(d+I%k,0))),c=p(I/k);$.push(f(w(c,0))),i=v(n,x,r==s),n=0,++r}++n,++e}return $.join("")}a={version:"1.3.2",ucs2:{decode:y,encode:x},decode:k,encode:I,toASCII:function(t){return b(t,(function(t){return c.test(t)?"xn--"+I(t):t}))},toUnicode:function(t){return b(t,(function(t){return u.test(t)?k(t.slice(4).toLowerCase()):t}))}},void 0===(r=function(){return a}.call(e,n,e,t))||(t.exports=r)}()},44:(t,e,n)=>{"use strict";var r=n(928),s=n(944);function i(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}e.parse=x,e.resolve=function(t,e){return x(t,!1,!0).resolve(e)},e.resolveObject=function(t,e){return t?x(t,!1,!0).resolveObject(e):e},e.format=function(t){return s.isString(t)&&(t=x(t)),t instanceof i?t.format():i.prototype.format.call(t)},e.Url=i;var a=/^([a-z0-9.+-]+:)/i,o=/:[0-9]*$/,l=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,u=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),c=["'"].concat(u),h=["%","/","?",";","#"].concat(c),d=["/","?","#"],p=/^[+a-z0-9A-Z_-]{0,63}$/,f=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,m={javascript:!0,"javascript:":!0},g={javascript:!0,"javascript:":!0},b={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},y=n(582);function x(t,e,n){if(t&&s.isObject(t)&&t instanceof i)return t;var r=new i;return r.parse(t,e,n),r}i.prototype.parse=function(t,e,n){if(!s.isString(t))throw new TypeError("Parameter 'url' must be a string, not "+typeof t);var i=t.indexOf("?"),o=-1!==i&&i<t.indexOf("#")?"?":"#",u=t.split(o);u[0]=u[0].replace(/\\/g,"/");var x=t=u.join(o);if(x=x.trim(),!n&&1===t.split("#").length){var w=l.exec(x);if(w)return this.path=x,this.href=x,this.pathname=w[1],w[2]?(this.search=w[2],this.query=e?y.parse(this.search.substr(1)):this.search.substr(1)):e&&(this.search="",this.query={}),this}var v=a.exec(x);if(v){var k=(v=v[0]).toLowerCase();this.protocol=k,x=x.substr(v.length)}if(n||v||x.match(/^\/\/[^@\/]+@[^@\/]+/)){var I="//"===x.substr(0,2);!I||v&&g[v]||(x=x.substr(2),this.slashes=!0)}if(!g[v]&&(I||v&&!b[v])){for(var $,C,N=-1,S=0;S<d.length;S++)-1!==(E=x.indexOf(d[S]))&&(-1===N||E<N)&&(N=E);for(-1!==(C=-1===N?x.lastIndexOf("@"):x.lastIndexOf("@",N))&&($=x.slice(0,C),x=x.slice(C+1),this.auth=decodeURIComponent($)),N=-1,S=0;S<h.length;S++){var E;-1!==(E=x.indexOf(h[S]))&&(-1===N||E<N)&&(N=E)}-1===N&&(N=x.length),this.host=x.slice(0,N),x=x.slice(N),this.parseHost(),this.hostname=this.hostname||"";var A="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!A)for(var T=this.hostname.split(/\./),R=(S=0,T.length);S<R;S++){var F=T[S];if(F&&!F.match(p)){for(var _="",D=0,M=F.length;D<M;D++)F.charCodeAt(D)>127?_+="x":_+=F[D];if(!_.match(p)){var O=T.slice(0,S),L=T.slice(S+1),z=F.match(f);z&&(O.push(z[1]),L.unshift(z[2])),L.length&&(x="/"+L.join(".")+x),this.hostname=O.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),A||(this.hostname=r.toASCII(this.hostname));var P=this.port?":"+this.port:"",B=this.hostname||"";this.host=B+P,this.href+=this.host,A&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==x[0]&&(x="/"+x))}if(!m[k])for(S=0,R=c.length;S<R;S++){var W=c[S];if(-1!==x.indexOf(W)){var V=encodeURIComponent(W);V===W&&(V=escape(W)),x=x.split(W).join(V)}}var U=x.indexOf("#");-1!==U&&(this.hash=x.substr(U),x=x.slice(0,U));var G=x.indexOf("?");if(-1!==G?(this.search=x.substr(G),this.query=x.substr(G+1),e&&(this.query=y.parse(this.query)),x=x.slice(0,G)):e&&(this.search="",this.query={}),x&&(this.pathname=x),b[k]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){P=this.pathname||"";var j=this.search||"";this.path=P+j}return this.href=this.format(),this},i.prototype.format=function(){var t=this.auth||"";t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,":"),t+="@");var e=this.protocol||"",n=this.pathname||"",r=this.hash||"",i=!1,a="";this.host?i=t+this.host:this.hostname&&(i=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(i+=":"+this.port)),this.query&&s.isObject(this.query)&&Object.keys(this.query).length&&(a=y.stringify(this.query));var o=this.search||a&&"?"+a||"";return e&&":"!==e.substr(-1)&&(e+=":"),this.slashes||(!e||b[e])&&!1!==i?(i="//"+(i||""),n&&"/"!==n.charAt(0)&&(n="/"+n)):i||(i=""),r&&"#"!==r.charAt(0)&&(r="#"+r),o&&"?"!==o.charAt(0)&&(o="?"+o),e+i+(n=n.replace(/[?#]/g,(function(t){return encodeURIComponent(t)})))+(o=o.replace("#","%23"))+r},i.prototype.resolve=function(t){return this.resolveObject(x(t,!1,!0)).format()},i.prototype.resolveObject=function(t){if(s.isString(t)){var e=new i;e.parse(t,!1,!0),t=e}for(var n=new i,r=Object.keys(this),a=0;a<r.length;a++){var o=r[a];n[o]=this[o]}if(n.hash=t.hash,""===t.href)return n.href=n.format(),n;if(t.slashes&&!t.protocol){for(var l=Object.keys(t),u=0;u<l.length;u++){var c=l[u];"protocol"!==c&&(n[c]=t[c])}return b[n.protocol]&&n.hostname&&!n.pathname&&(n.path=n.pathname="/"),n.href=n.format(),n}if(t.protocol&&t.protocol!==n.protocol){if(!b[t.protocol]){for(var h=Object.keys(t),d=0;d<h.length;d++){var p=h[d];n[p]=t[p]}return n.href=n.format(),n}if(n.protocol=t.protocol,t.host||g[t.protocol])n.pathname=t.pathname;else{for(var f=(t.pathname||"").split("/");f.length&&!(t.host=f.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==f[0]&&f.unshift(""),f.length<2&&f.unshift(""),n.pathname=f.join("/")}if(n.search=t.search,n.query=t.query,n.host=t.host||"",n.auth=t.auth,n.hostname=t.hostname||t.host,n.port=t.port,n.pathname||n.search){var m=n.pathname||"",y=n.search||"";n.path=m+y}return n.slashes=n.slashes||t.slashes,n.href=n.format(),n}var x=n.pathname&&"/"===n.pathname.charAt(0),w=t.host||t.pathname&&"/"===t.pathname.charAt(0),v=w||x||n.host&&t.pathname,k=v,I=n.pathname&&n.pathname.split("/")||[],$=(f=t.pathname&&t.pathname.split("/")||[],n.protocol&&!b[n.protocol]);if($&&(n.hostname="",n.port=null,n.host&&(""===I[0]?I[0]=n.host:I.unshift(n.host)),n.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===f[0]?f[0]=t.host:f.unshift(t.host)),t.host=null),v=v&&(""===f[0]||""===I[0])),w)n.host=t.host||""===t.host?t.host:n.host,n.hostname=t.hostname||""===t.hostname?t.hostname:n.hostname,n.search=t.search,n.query=t.query,I=f;else if(f.length)I||(I=[]),I.pop(),I=I.concat(f),n.search=t.search,n.query=t.query;else if(!s.isNullOrUndefined(t.search))return $&&(n.hostname=n.host=I.shift(),(A=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=A.shift(),n.host=n.hostname=A.shift())),n.search=t.search,n.query=t.query,s.isNull(n.pathname)&&s.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.href=n.format(),n;if(!I.length)return n.pathname=null,n.search?n.path="/"+n.search:n.path=null,n.href=n.format(),n;for(var C=I.slice(-1)[0],N=(n.host||t.host||I.length>1)&&("."===C||".."===C)||""===C,S=0,E=I.length;E>=0;E--)"."===(C=I[E])?I.splice(E,1):".."===C?(I.splice(E,1),S++):S&&(I.splice(E,1),S--);if(!v&&!k)for(;S--;S)I.unshift("..");!v||""===I[0]||I[0]&&"/"===I[0].charAt(0)||I.unshift(""),N&&"/"!==I.join("/").substr(-1)&&I.push("");var A,T=""===I[0]||I[0]&&"/"===I[0].charAt(0);return $&&(n.hostname=n.host=T?"":I.length?I.shift():"",(A=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=A.shift(),n.host=n.hostname=A.shift())),(v=v||n.host&&I.length)&&!T&&I.unshift(""),I.length?n.pathname=I.join("/"):(n.pathname=null,n.path=null),s.isNull(n.pathname)&&s.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.auth=t.auth||n.auth,n.slashes=n.slashes||t.slashes,n.href=n.format(),n},i.prototype.parseHost=function(){var t=this.host,e=o.exec(t);e&&(":"!==(e=e[0])&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)}},944:t=>{"use strict";t.exports={isString:function(t){return"string"==typeof t},isObject:function(t){return"object"==typeof t&&null!==t},isNull:function(t){return null===t},isNullOrUndefined:function(t){return null==t}}},906:()=>{},993:()=>{},950:()=>{},589:()=>{},758:()=>{}},e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>ou,computeFlatOffset:()=>wu,computeOutShape:()=>uu,getNormalizedAxes:()=>pu,isSliceContinous:()=>xu,maskToAxes:()=>lu,parseSliceParams:()=>vu,sliceInfo:()=>ku,startForAxis:()=>bu,startIndicesWithElidedDims:()=>fu,stopForAxis:()=>yu,stopIndicesWithElidedDims:()=>mu,stridesForAxis:()=>gu,stridesWithElidedDims:()=>cu});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>Ap,computeOutShape:()=>Ep,segOpComputeOptimalWindowSize:()=>Sp});var r={};n.r(r),n.d(r,{ERF_A1:()=>hp,ERF_A2:()=>dp,ERF_A3:()=>pp,ERF_A4:()=>fp,ERF_A5:()=>mp,ERF_P:()=>cp,PARALLELIZE_THRESHOLD:()=>Yd,SELU_SCALE:()=>up,SELU_SCALEALPHA:()=>lp,applyActivation:()=>td,assertAndGetBroadcastShape:()=>Ic,assertAxesAreInnerMostDims:()=>Qc,assertParamsConsistent:()=>Kd,assignToTypedArray:()=>Ip,axesAreInnerMostDims:()=>Xc,calculateShapes:()=>op,combineLocations:()=>Yc,complexWithEvenIndex:()=>wp,complexWithOddIndex:()=>vp,computeConv2DInfo:()=>Uu,computeConv3DInfo:()=>Gu,computeDefaultPad:()=>ju,computeDilation2DInfo:()=>Bu,computeOptimalWindowSize:()=>Zd,computeOutAndReduceShapes:()=>Zc,computeOutShape:()=>Xd,computePool2DInfo:()=>Wu,computePool3DInfo:()=>Vu,convertConv2DDataFormat:()=>Ju,eitherStridesOrDilationsAreOne:()=>Zu,expandShapeToKeepDim:()=>Jc,exponent:()=>Cp,exponents:()=>$p,fromStringArrayToUint8:()=>Rp,fromUint8ToStringArray:()=>Tp,getAxesPermutation:()=>th,getBroadcastDims:()=>vc,getComplexWithIndex:()=>kp,getFusedBiasGradient:()=>Qh,getFusedDyActivation:()=>Jh,getImageCenter:()=>Jd,getInnerMostAxes:()=>nh,getPermuted:()=>tp,getReductionAxes:()=>kc,getReshaped:()=>Qd,getReshapedPermuted:()=>ep,getSliceBeginCoords:()=>np,getSliceSize:()=>rp,getUndoAxesPermutation:()=>eh,log:()=>bp,mergeRealAndImagArrays:()=>yp,prepareAndValidate:()=>sp,prepareSplitSize:()=>Np,segment_util:()=>e,shouldFuse:()=>ed,slice_util:()=>t,splitRealAndImagArrays:()=>xp,tupleValuesAreOne:()=>Yu,upcastType:()=>Jo,validateInput:()=>ap,validateUpdateShape:()=>ip,warn:()=>gp});var s={};n.r(s),n.d(s,{addImpl:()=>zk,bincountImpl:()=>TI,bincountReduceImpl:()=>RI,ceilImpl:()=>DI,concatImpl:()=>BI,expImpl:()=>N$,expm1Impl:()=>R$,floorImpl:()=>J$,gatherV2Impl:()=>oC,greaterImpl:()=>uC,lessImpl:()=>kC,linSpaceImpl:()=>EC,logImpl:()=>TC,maxImpl:()=>jC,maximumImpl:()=>KC,minimumImpl:()=>aN,multiplyImpl:()=>D$,negImpl:()=>bN,notEqualImpl:()=>CN,prodImpl:()=>zN,rangeImpl:()=>BN,rsqrtImpl:()=>JN,simpleAbsImpl:()=>qk,sliceImpl:()=>NI,squaredDifferenceImpl:()=>CS,stridedSliceImpl:()=>TS,subImpl:()=>W$,tileImpl:()=>MS,topKImpl:()=>OS,transposeImpl:()=>tI,uniqueImpl:()=>WS});var i=n(701),a=n.n(i),o=n(152);function l(t,e,n){t=+t,e=+e,n=(s=arguments.length)<2?(e=t,t=0,1):s<3?1:+n;for(var r=-1,s=0|Math.max(0,Math.ceil((e-t)/n)),i=new Array(s);++r<s;)i[r]=t+r*n;return i}a()(o.Z,{insert:"head",singleton:!1}),o.Z.locals;var u=Array.prototype.slice;function c(t){return t}var h=1e-6;function d(t){return"translate("+(t+.5)+",0)"}function p(t){return"translate(0,"+(t+.5)+")"}function f(t){return e=>+t(e)}function m(t){var e=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(e=Math.round(e)),function(n){return+t(n)+e}}function g(){return!this.__axis}function b(t,e){var n=[],r=null,s=null,i=6,a=6,o=3,l=1===t||4===t?-1:1,b=4===t||2===t?"x":"y",y=1===t||3===t?d:p;function x(u){var d=null==r?e.ticks?e.ticks.apply(e,n):e.domain():r,p=null==s?e.tickFormat?e.tickFormat.apply(e,n):c:s,x=Math.max(i,0)+o,w=e.range(),v=+w[0]+.5,k=+w[w.length-1]+.5,I=(e.bandwidth?m:f)(e.copy()),$=u.selection?u.selection():u,C=$.selectAll(".domain").data([null]),N=$.selectAll(".tick").data(d,e).order(),S=N.exit(),E=N.enter().append("g").attr("class","tick"),A=N.select("line"),T=N.select("text");C=C.merge(C.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),N=N.merge(E),A=A.merge(E.append("line").attr("stroke","currentColor").attr(b+"2",l*i)),T=T.merge(E.append("text").attr("fill","currentColor").attr(b,l*x).attr("dy",1===t?"0em":3===t?"0.71em":"0.32em")),u!==$&&(C=C.transition(u),N=N.transition(u),A=A.transition(u),T=T.transition(u),S=S.transition(u).attr("opacity",h).attr("transform",(function(t){return isFinite(t=I(t))?y(t):this.getAttribute("transform")})),E.attr("opacity",h).attr("transform",(function(t){var e=this.parentNode.__axis;return y(e&&isFinite(e=e(t))?e:I(t))}))),S.remove(),C.attr("d",4===t||2==t?a?"M"+l*a+","+v+"H0.5V"+k+"H"+l*a:"M0.5,"+v+"V"+k:a?"M"+v+","+l*a+"V0.5H"+k+"V"+l*a:"M"+v+",0.5H"+k),N.attr("opacity",1).attr("transform",(function(t){return y(I(t))})),A.attr(b+"2",l*i),T.attr(b,l*x).text(p),$.filter(g).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===t?"start":4===t?"end":"middle"),$.each((function(){this.__axis=I}))}return x.scale=function(t){return arguments.length?(e=t,x):e},x.ticks=function(){return n=u.call(arguments),x},x.tickArguments=function(t){return arguments.length?(n=null==t?[]:u.call(t),x):n.slice()},x.tickValues=function(t){return arguments.length?(r=null==t?null:u.call(t),x):r&&r.slice()},x.tickFormat=function(t){return arguments.length?(s=t,x):s},x.tickSize=function(t){return arguments.length?(i=a=+t,x):i},x.tickSizeInner=function(t){return arguments.length?(i=+t,x):i},x.tickSizeOuter=function(t){return arguments.length?(a=+t,x):a},x.tickPadding=function(t){return arguments.length?(o=+t,x):o},x}function y(t){return b(3,t)}function x(){}function w(t){return null==t?x:function(){return this.querySelector(t)}}function v(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}function k(){return[]}function I(t){return null==t?k:function(){return this.querySelectorAll(t)}}function $(t){return function(){return this.matches(t)}}function C(t){return function(e){return e.matches(t)}}var N=Array.prototype.find;function S(){return this.firstElementChild}var E=Array.prototype.filter;function A(){return this.children}function T(t){return new Array(t.length)}function R(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}function F(t){return function(){return t}}function _(t,e,n,r,s,i){for(var a,o=0,l=e.length,u=i.length;o<u;++o)(a=e[o])?(a.__data__=i[o],r[o]=a):n[o]=new R(t,i[o]);for(;o<l;++o)(a=e[o])&&(s[o]=a)}function D(t,e,n,r,s,i,a){var o,l,u,c=new Map,h=e.length,d=i.length,p=new Array(h);for(o=0;o<h;++o)(l=e[o])&&(p[o]=u=a.call(l,l.__data__,o,e)+"",c.has(u)?s[o]=l:c.set(u,l));for(o=0;o<d;++o)u=a.call(t,i[o],o,i)+"",(l=c.get(u))?(r[o]=l,l.__data__=i[o],c.delete(u)):n[o]=new R(t,i[o]);for(o=0;o<h;++o)(l=e[o])&&c.get(p[o])===l&&(s[o]=l)}function M(t){return t.__data__}function O(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}R.prototype={constructor:R,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var L="http://www.w3.org/1999/xhtml";const z={svg:"http://www.w3.org/2000/svg",xhtml:L,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function P(t){var e=t+="",n=e.indexOf(":");return n>=0&&"xmlns"!==(e=t.slice(0,n))&&(t=t.slice(n+1)),z.hasOwnProperty(e)?{space:z[e],local:t}:t}function B(t){return function(){this.removeAttribute(t)}}function W(t){return function(){this.removeAttributeNS(t.space,t.local)}}function V(t,e){return function(){this.setAttribute(t,e)}}function U(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function G(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttribute(t):this.setAttribute(t,n)}}function j(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}function H(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function q(t){return function(){this.style.removeProperty(t)}}function K(t,e,n){return function(){this.style.setProperty(t,e,n)}}function X(t,e,n){return function(){var r=e.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}function Y(t,e){return t.style.getPropertyValue(e)||H(t).getComputedStyle(t,null).getPropertyValue(e)}function Z(t){return function(){delete this[t]}}function J(t,e){return function(){this[t]=e}}function Q(t,e){return function(){var n=e.apply(this,arguments);null==n?delete this[t]:this[t]=n}}function tt(t){return t.trim().split(/^|\s+/)}function et(t){return t.classList||new nt(t)}function nt(t){this._node=t,this._names=tt(t.getAttribute("class")||"")}function rt(t,e){for(var n=et(t),r=-1,s=e.length;++r<s;)n.add(e[r])}function st(t,e){for(var n=et(t),r=-1,s=e.length;++r<s;)n.remove(e[r])}function it(t){return function(){rt(this,t)}}function at(t){return function(){st(this,t)}}function ot(t,e){return function(){(e.apply(this,arguments)?rt:st)(this,t)}}function lt(){this.textContent=""}function ut(t){return function(){this.textContent=t}}function ct(t){return function(){var e=t.apply(this,arguments);this.textContent=null==e?"":e}}function ht(){this.innerHTML=""}function dt(t){return function(){this.innerHTML=t}}function pt(t){return function(){var e=t.apply(this,arguments);this.innerHTML=null==e?"":e}}function ft(){this.nextSibling&&this.parentNode.appendChild(this)}function mt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function gt(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===L&&e.documentElement.namespaceURI===L?e.createElement(t):e.createElementNS(n,t)}}function bt(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function yt(t){var e=P(t);return(e.local?bt:gt)(e)}function xt(){return null}function wt(){var t=this.parentNode;t&&t.removeChild(this)}function vt(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function kt(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function It(t){return t.trim().split(/^|\s+/).map((function(t){var e="",n=t.indexOf(".");return n>=0&&(e=t.slice(n+1),t=t.slice(0,n)),{type:t,name:e}}))}function $t(t){return function(){var e=this.__on;if(e){for(var n,r=0,s=-1,i=e.length;r<i;++r)n=e[r],t.type&&n.type!==t.type||n.name!==t.name?e[++s]=n:this.removeEventListener(n.type,n.listener,n.options);++s?e.length=s:delete this.__on}}}function Ct(t,e,n){return function(){var r,s=this.__on,i=function(t){return function(e){t.call(this,e,this.__data__)}}(e);if(s)for(var a=0,o=s.length;a<o;++a)if((r=s[a]).type===t.type&&r.name===t.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=i,r.options=n),void(r.value=e);this.addEventListener(t.type,i,n),r={type:t.type,name:t.name,value:e,listener:i,options:n},s?s.push(r):this.__on=[r]}}function Nt(t,e,n){var r=H(t),s=r.CustomEvent;"function"==typeof s?s=new s(e,n):(s=r.document.createEvent("Event"),n?(s.initEvent(e,n.bubbles,n.cancelable),s.detail=n.detail):s.initEvent(e,!1,!1)),t.dispatchEvent(s)}function St(t,e){return function(){return Nt(this,t,e)}}function Et(t,e){return function(){return Nt(this,t,e.apply(this,arguments))}}nt.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var At=[null];function Tt(t,e){this._groups=t,this._parents=e}function Rt(){return new Tt([[document.documentElement]],At)}Tt.prototype=Rt.prototype={constructor:Tt,select:function(t){"function"!=typeof t&&(t=w(t));for(var e=this._groups,n=e.length,r=new Array(n),s=0;s<n;++s)for(var i,a,o=e[s],l=o.length,u=r[s]=new Array(l),c=0;c<l;++c)(i=o[c])&&(a=t.call(i,i.__data__,c,o))&&("__data__"in i&&(a.__data__=i.__data__),u[c]=a);return new Tt(r,this._parents)},selectAll:function(t){t="function"==typeof t?function(t){return function(){var e=t.apply(this,arguments);return null==e?[]:v(e)}}(t):I(t);for(var e=this._groups,n=e.length,r=[],s=[],i=0;i<n;++i)for(var a,o=e[i],l=o.length,u=0;u<l;++u)(a=o[u])&&(r.push(t.call(a,a.__data__,u,o)),s.push(a));return new Tt(r,s)},selectChild:function(t){return this.select(null==t?S:function(t){return function(){return N.call(this.children,t)}}("function"==typeof t?t:C(t)))},selectChildren:function(t){return this.selectAll(null==t?A:function(t){return function(){return E.call(this.children,t)}}("function"==typeof t?t:C(t)))},filter:function(t){"function"!=typeof t&&(t=$(t));for(var e=this._groups,n=e.length,r=new Array(n),s=0;s<n;++s)for(var i,a=e[s],o=a.length,l=r[s]=[],u=0;u<o;++u)(i=a[u])&&t.call(i,i.__data__,u,a)&&l.push(i);return new Tt(r,this._parents)},data:function(t,e){if(!arguments.length)return Array.from(this,M);var n=e?D:_,r=this._parents,s=this._groups;"function"!=typeof t&&(t=F(t));for(var i=s.length,a=new Array(i),o=new Array(i),l=new Array(i),u=0;u<i;++u){var c=r[u],h=s[u],d=h.length,p=v(t.call(c,c&&c.__data__,u,r)),f=p.length,m=o[u]=new Array(f),g=a[u]=new Array(f),b=l[u]=new Array(d);n(c,h,m,g,b,p,e);for(var y,x,w=0,k=0;w<f;++w)if(y=m[w]){for(w>=k&&(k=w+1);!(x=g[k])&&++k<f;);y._next=x||null}}return(a=new Tt(a,r))._enter=o,a._exit=l,a},enter:function(){return new Tt(this._enter||this._groups.map(T),this._parents)},exit:function(){return new Tt(this._exit||this._groups.map(T),this._parents)},join:function(t,e,n){var r=this.enter(),s=this,i=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=e&&(s=e(s)),null==n?i.remove():n(i),r&&s?r.merge(s).order():s},merge:function(t){if(!(t instanceof Tt))throw new Error("invalid merge");for(var e=this._groups,n=t._groups,r=e.length,s=n.length,i=Math.min(r,s),a=new Array(r),o=0;o<i;++o)for(var l,u=e[o],c=n[o],h=u.length,d=a[o]=new Array(h),p=0;p<h;++p)(l=u[p]||c[p])&&(d[p]=l);for(;o<r;++o)a[o]=e[o];return new Tt(a,this._parents)},selection:function(){return this},order:function(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r,s=t[e],i=s.length-1,a=s[i];--i>=0;)(r=s[i])&&(a&&4^r.compareDocumentPosition(a)&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(t){function e(e,n){return e&&n?t(e.__data__,n.__data__):!e-!n}t||(t=O);for(var n=this._groups,r=n.length,s=new Array(r),i=0;i<r;++i){for(var a,o=n[i],l=o.length,u=s[i]=new Array(l),c=0;c<l;++c)(a=o[c])&&(u[c]=a);u.sort(e)}return new Tt(s,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],s=0,i=r.length;s<i;++s){var a=r[s];if(a)return a}return null},size:function(){let t=0;for(const e of this)++t;return t},empty:function(){return!this.node()},each:function(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var s,i=e[n],a=0,o=i.length;a<o;++a)(s=i[a])&&t.call(s,s.__data__,a,i);return this},attr:function(t,e){var n=P(t);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==e?n.local?W:B:"function"==typeof e?n.local?j:G:n.local?U:V)(n,e))},style:function(t,e,n){return arguments.length>1?this.each((null==e?q:"function"==typeof e?X:K)(t,e,null==n?"":n)):Y(this.node(),t)},property:function(t,e){return arguments.length>1?this.each((null==e?Z:"function"==typeof e?Q:J)(t,e)):this.node()[t]},classed:function(t,e){var n=tt(t+"");if(arguments.length<2){for(var r=et(this.node()),s=-1,i=n.length;++s<i;)if(!r.contains(n[s]))return!1;return!0}return this.each(("function"==typeof e?ot:e?it:at)(n,e))},text:function(t){return arguments.length?this.each(null==t?lt:("function"==typeof t?ct:ut)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?ht:("function"==typeof t?pt:dt)(t)):this.node().innerHTML},raise:function(){return this.each(ft)},lower:function(){return this.each(mt)},append:function(t){var e="function"==typeof t?t:yt(t);return this.select((function(){return this.appendChild(e.apply(this,arguments))}))},insert:function(t,e){var n="function"==typeof t?t:yt(t),r=null==e?xt:"function"==typeof e?e:w(e);return this.select((function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(wt)},clone:function(t){return this.select(t?kt:vt)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,e,n){var r,s,i=It(t+""),a=i.length;if(!(arguments.length<2)){for(o=e?Ct:$t,r=0;r<a;++r)this.each(o(i[r],e,n));return this}var o=this.node().__on;if(o)for(var l,u=0,c=o.length;u<c;++u)for(r=0,l=o[u];r<a;++r)if((s=i[r]).type===l.type&&s.name===l.name)return l.value},dispatch:function(t,e){return this.each(("function"==typeof e?Et:St)(t,e))},[Symbol.iterator]:function*(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r,s=t[e],i=0,a=s.length;i<a;++i)(r=s[i])&&(yield r)}};const Ft=Rt;var _t={value:()=>{}};function Dt(){for(var t,e=0,n=arguments.length,r={};e<n;++e){if(!(t=arguments[e]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new Mt(r)}function Mt(t){this._=t}function Ot(t,e){return t.trim().split(/^|\s+/).map((function(t){var n="",r=t.indexOf(".");if(r>=0&&(n=t.slice(r+1),t=t.slice(0,r)),t&&!e.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}}))}function Lt(t,e){for(var n,r=0,s=t.length;r<s;++r)if((n=t[r]).name===e)return n.value}function zt(t,e,n){for(var r=0,s=t.length;r<s;++r)if(t[r].name===e){t[r]=_t,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=n&&t.push({name:e,value:n}),t}Mt.prototype=Dt.prototype={constructor:Mt,on:function(t,e){var n,r=this._,s=Ot(t+"",r),i=-1,a=s.length;if(!(arguments.length<2)){if(null!=e&&"function"!=typeof e)throw new Error("invalid callback: "+e);for(;++i<a;)if(n=(t=s[i]).type)r[n]=zt(r[n],t.name,e);else if(null==e)for(n in r)r[n]=zt(r[n],t.name,null);return this}for(;++i<a;)if((n=(t=s[i]).type)&&(n=Lt(r[n],t.name)))return n},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new Mt(t)},call:function(t,e){if((n=arguments.length-2)>0)for(var n,r,s=new Array(n),i=0;i<n;++i)s[i]=arguments[i+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(i=0,n=(r=this._[t]).length;i<n;++i)r[i].value.apply(e,s)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],s=0,i=r.length;s<i;++s)r[s].value.apply(e,n)}};const Pt=Dt;var Bt,Wt,Vt=0,Ut=0,Gt=0,jt=0,Ht=0,qt=0,Kt="object"==typeof performance&&performance.now?performance:Date,Xt="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Yt(){return Ht||(Xt(Zt),Ht=Kt.now()+qt)}function Zt(){Ht=0}function Jt(){this._call=this._time=this._next=null}function Qt(t,e,n){var r=new Jt;return r.restart(t,e,n),r}function te(){Ht=(jt=Kt.now())+qt,Vt=Ut=0;try{!function(){Yt(),++Vt;for(var t,e=Bt;e;)(t=Ht-e._time)>=0&&e._call.call(null,t),e=e._next;--Vt}()}finally{Vt=0,function(){for(var t,e,n=Bt,r=1/0;n;)n._call?(r>n._time&&(r=n._time),t=n,n=n._next):(e=n._next,n._next=null,n=t?t._next=e:Bt=e);Wt=t,ne(r)}(),Ht=0}}function ee(){var t=Kt.now(),e=t-jt;e>1e3&&(qt-=e,jt=t)}function ne(t){Vt||(Ut&&(Ut=clearTimeout(Ut)),t-Ht>24?(t<1/0&&(Ut=setTimeout(te,t-Kt.now()-qt)),Gt&&(Gt=clearInterval(Gt))):(Gt||(jt=Kt.now(),Gt=setInterval(ee,1e3)),Vt=1,Xt(te)))}function re(t,e,n){var r=new Jt;return e=null==e?0:+e,r.restart((n=>{r.stop(),t(n+e)}),e,n),r}Jt.prototype=Qt.prototype={constructor:Jt,restart:function(t,e,n){if("function"!=typeof t)throw new TypeError("callback is not a function");n=(null==n?Yt():+n)+(null==e?0:+e),this._next||Wt===this||(Wt?Wt._next=this:Bt=this,Wt=this),this._call=t,this._time=n,ne()},stop:function(){this._call&&(this._call=null,this._time=1/0,ne())}};var se=Pt("start","end","cancel","interrupt"),ie=[];function ae(t,e,n,r,s,i){var a=t.__transition;if(a){if(n in a)return}else t.__transition={};!function(t,e,n){var r,s=t.__transition;function i(l){var u,c,h,d;if(1!==n.state)return o();for(u in s)if((d=s[u]).name===n.name){if(3===d.state)return re(i);4===d.state?(d.state=6,d.timer.stop(),d.on.call("interrupt",t,t.__data__,d.index,d.group),delete s[u]):+u<e&&(d.state=6,d.timer.stop(),d.on.call("cancel",t,t.__data__,d.index,d.group),delete s[u])}if(re((function(){3===n.state&&(n.state=4,n.timer.restart(a,n.delay,n.time),a(l))})),n.state=2,n.on.call("start",t,t.__data__,n.index,n.group),2===n.state){for(n.state=3,r=new Array(h=n.tween.length),u=0,c=-1;u<h;++u)(d=n.tween[u].value.call(t,t.__data__,n.index,n.group))&&(r[++c]=d);r.length=c+1}}function a(e){for(var s=e<n.duration?n.ease.call(null,e/n.duration):(n.timer.restart(o),n.state=5,1),i=-1,a=r.length;++i<a;)r[i].call(t,s);5===n.state&&(n.on.call("end",t,t.__data__,n.index,n.group),o())}function o(){for(var r in n.state=6,n.timer.stop(),delete s[e],s)return;delete t.__transition}s[e]=n,n.timer=Qt((function(t){n.state=1,n.timer.restart(i,n.delay,n.time),n.delay<=t&&i(t-n.delay)}),0,n.time)}(t,n,{name:e,index:r,group:s,on:se,tween:ie,time:i.time,delay:i.delay,duration:i.duration,ease:i.ease,timer:null,state:0})}function oe(t,e){var n=ue(t,e);if(n.state>0)throw new Error("too late; already scheduled");return n}function le(t,e){var n=ue(t,e);if(n.state>3)throw new Error("too late; already running");return n}function ue(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}function ce(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}var he,de=180/Math.PI,pe={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function fe(t,e,n,r,s,i){var a,o,l;return(a=Math.sqrt(t*t+e*e))&&(t/=a,e/=a),(l=t*n+e*r)&&(n-=t*l,r-=e*l),(o=Math.sqrt(n*n+r*r))&&(n/=o,r/=o,l/=o),t*r<e*n&&(t=-t,e=-e,l=-l,a=-a),{translateX:s,translateY:i,rotate:Math.atan2(e,t)*de,skewX:Math.atan(l)*de,scaleX:a,scaleY:o}}function me(t,e,n,r){function s(t){return t.length?t.pop()+" ":""}return function(i,a){var o=[],l=[];return i=t(i),a=t(a),function(t,r,s,i,a,o){if(t!==s||r!==i){var l=a.push("translate(",null,e,null,n);o.push({i:l-4,x:ce(t,s)},{i:l-2,x:ce(r,i)})}else(s||i)&&a.push("translate("+s+e+i+n)}(i.translateX,i.translateY,a.translateX,a.translateY,o,l),function(t,e,n,i){t!==e?(t-e>180?e+=360:e-t>180&&(t+=360),i.push({i:n.push(s(n)+"rotate(",null,r)-2,x:ce(t,e)})):e&&n.push(s(n)+"rotate("+e+r)}(i.rotate,a.rotate,o,l),function(t,e,n,i){t!==e?i.push({i:n.push(s(n)+"skewX(",null,r)-2,x:ce(t,e)}):e&&n.push(s(n)+"skewX("+e+r)}(i.skewX,a.skewX,o,l),function(t,e,n,r,i,a){if(t!==n||e!==r){var o=i.push(s(i)+"scale(",null,",",null,")");a.push({i:o-4,x:ce(t,n)},{i:o-2,x:ce(e,r)})}else 1===n&&1===r||i.push(s(i)+"scale("+n+","+r+")")}(i.scaleX,i.scaleY,a.scaleX,a.scaleY,o,l),i=a=null,function(t){for(var e,n=-1,r=l.length;++n<r;)o[(e=l[n]).i]=e.x(t);return o.join("")}}}var ge=me((function(t){const e=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?pe:fe(e.a,e.b,e.c,e.d,e.e,e.f)}),"px, ","px)","deg)"),be=me((function(t){return null==t?pe:(he||(he=document.createElementNS("http://www.w3.org/2000/svg","g")),he.setAttribute("transform",t),(t=he.transform.baseVal.consolidate())?fe((t=t.matrix).a,t.b,t.c,t.d,t.e,t.f):pe)}),", ",")",")");function ye(t,e){var n,r;return function(){var s=le(this,t),i=s.tween;if(i!==n)for(var a=0,o=(r=n=i).length;a<o;++a)if(r[a].name===e){(r=r.slice()).splice(a,1);break}s.tween=r}}function xe(t,e,n){var r,s;if("function"!=typeof n)throw new Error;return function(){var i=le(this,t),a=i.tween;if(a!==r){s=(r=a).slice();for(var o={name:e,value:n},l=0,u=s.length;l<u;++l)if(s[l].name===e){s[l]=o;break}l===u&&s.push(o)}i.tween=s}}function we(t,e,n){var r=t._id;return t.each((function(){var t=le(this,r);(t.value||(t.value={}))[e]=n.apply(this,arguments)})),function(t){return ue(t,r).value[e]}}function ve(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function ke(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function Ie(){}var $e=.7,Ce=1/$e,Ne="\\s*([+-]?\\d+)\\s*",Se="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Ee="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Ae=/^#([0-9a-f]{3,8})$/,Te=new RegExp("^rgb\\("+[Ne,Ne,Ne]+"\\)$"),Re=new RegExp("^rgb\\("+[Ee,Ee,Ee]+"\\)$"),Fe=new RegExp("^rgba\\("+[Ne,Ne,Ne,Se]+"\\)$"),_e=new RegExp("^rgba\\("+[Ee,Ee,Ee,Se]+"\\)$"),De=new RegExp("^hsl\\("+[Se,Ee,Ee]+"\\)$"),Me=new RegExp("^hsla\\("+[Se,Ee,Ee,Se]+"\\)$"),Oe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Le(){return this.rgb().formatHex()}function ze(){return this.rgb().formatRgb()}function Pe(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=Ae.exec(t))?(n=e[1].length,e=parseInt(e[1],16),6===n?Be(e):3===n?new Ge(e>>8&15|e>>4&240,e>>4&15|240&e,(15&e)<<4|15&e,1):8===n?We(e>>24&255,e>>16&255,e>>8&255,(255&e)/255):4===n?We(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|240&e,((15&e)<<4|15&e)/255):null):(e=Te.exec(t))?new Ge(e[1],e[2],e[3],1):(e=Re.exec(t))?new Ge(255*e[1]/100,255*e[2]/100,255*e[3]/100,1):(e=Fe.exec(t))?We(e[1],e[2],e[3],e[4]):(e=_e.exec(t))?We(255*e[1]/100,255*e[2]/100,255*e[3]/100,e[4]):(e=De.exec(t))?Ke(e[1],e[2]/100,e[3]/100,1):(e=Me.exec(t))?Ke(e[1],e[2]/100,e[3]/100,e[4]):Oe.hasOwnProperty(t)?Be(Oe[t]):"transparent"===t?new Ge(NaN,NaN,NaN,0):null}function Be(t){return new Ge(t>>16&255,t>>8&255,255&t,1)}function We(t,e,n,r){return r<=0&&(t=e=n=NaN),new Ge(t,e,n,r)}function Ve(t){return t instanceof Ie||(t=Pe(t)),t?new Ge((t=t.rgb()).r,t.g,t.b,t.opacity):new Ge}function Ue(t,e,n,r){return 1===arguments.length?Ve(t):new Ge(t,e,n,null==r?1:r)}function Ge(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}function je(){return"#"+qe(this.r)+qe(this.g)+qe(this.b)}function He(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function qe(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Ke(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new Ye(t,e,n,r)}function Xe(t){if(t instanceof Ye)return new Ye(t.h,t.s,t.l,t.opacity);if(t instanceof Ie||(t=Pe(t)),!t)return new Ye;if(t instanceof Ye)return t;var e=(t=t.rgb()).r/255,n=t.g/255,r=t.b/255,s=Math.min(e,n,r),i=Math.max(e,n,r),a=NaN,o=i-s,l=(i+s)/2;return o?(a=e===i?(n-r)/o+6*(n<r):n===i?(r-e)/o+2:(e-n)/o+4,o/=l<.5?i+s:2-i-s,a*=60):o=l>0&&l<1?0:a,new Ye(a,o,l,t.opacity)}function Ye(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}function Ze(t,e,n){return 255*(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)}function Je(t,e,n,r,s){var i=t*t,a=i*t;return((1-3*t+3*i-a)*e+(4-6*i+3*a)*n+(1+3*t+3*i-3*a)*r+a*s)/6}ve(Ie,Pe,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:Le,formatHex:Le,formatHsl:function(){return Xe(this).formatHsl()},formatRgb:ze,toString:ze}),ve(Ge,Ue,ke(Ie,{brighter:function(t){return t=null==t?Ce:Math.pow(Ce,t),new Ge(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?$e:Math.pow($e,t),new Ge(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:je,formatHex:je,formatRgb:He,toString:He})),ve(Ye,(function(t,e,n,r){return 1===arguments.length?Xe(t):new Ye(t,e,n,null==r?1:r)}),ke(Ie,{brighter:function(t){return t=null==t?Ce:Math.pow(Ce,t),new Ye(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?$e:Math.pow($e,t),new Ye(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,s=2*n-r;return new Ge(Ze(t>=240?t-240:t+120,s,r),Ze(t,s,r),Ze(t<120?t+240:t-120,s,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));const Qe=t=>()=>t;function tn(t,e){var n=e-t;return n?function(t,e){return function(n){return t+n*e}}(t,n):Qe(isNaN(t)?e:t)}const en=function t(e){var n=function(t){return 1==(t=+t)?tn:function(e,n){return n-e?function(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}(e,n,t):Qe(isNaN(e)?n:e)}}(e);function r(t,e){var r=n((t=Ue(t)).r,(e=Ue(e)).r),s=n(t.g,e.g),i=n(t.b,e.b),a=tn(t.opacity,e.opacity);return function(e){return t.r=r(e),t.g=s(e),t.b=i(e),t.opacity=a(e),t+""}}return r.gamma=t,r}(1);function nn(t){return function(e){var n,r,s=e.length,i=new Array(s),a=new Array(s),o=new Array(s);for(n=0;n<s;++n)r=Ue(e[n]),i[n]=r.r||0,a[n]=r.g||0,o[n]=r.b||0;return i=t(i),a=t(a),o=t(o),r.opacity=1,function(t){return r.r=i(t),r.g=a(t),r.b=o(t),r+""}}}nn((function(t){var e=t.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),s=t[r],i=t[r+1],a=r>0?t[r-1]:2*s-i,o=r<e-1?t[r+2]:2*i-s;return Je((n-r/e)*e,a,s,i,o)}})),nn((function(t){var e=t.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*e),s=t[(r+e-1)%e],i=t[r%e],a=t[(r+1)%e],o=t[(r+2)%e];return Je((n-r/e)*e,s,i,a,o)}}));var rn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,sn=new RegExp(rn.source,"g");function an(t,e){var n,r,s,i=rn.lastIndex=sn.lastIndex=0,a=-1,o=[],l=[];for(t+="",e+="";(n=rn.exec(t))&&(r=sn.exec(e));)(s=r.index)>i&&(s=e.slice(i,s),o[a]?o[a]+=s:o[++a]=s),(n=n[0])===(r=r[0])?o[a]?o[a]+=r:o[++a]=r:(o[++a]=null,l.push({i:a,x:ce(n,r)})),i=sn.lastIndex;return i<e.length&&(s=e.slice(i),o[a]?o[a]+=s:o[++a]=s),o.length<2?l[0]?function(t){return function(e){return t(e)+""}}(l[0].x):function(t){return function(){return t}}(e):(e=l.length,function(t){for(var n,r=0;r<e;++r)o[(n=l[r]).i]=n.x(t);return o.join("")})}function on(t,e){var n;return("number"==typeof e?ce:e instanceof Pe?en:(n=Pe(e))?(e=n,en):an)(t,e)}function ln(t){return function(){this.removeAttribute(t)}}function un(t){return function(){this.removeAttributeNS(t.space,t.local)}}function cn(t,e,n){var r,s,i=n+"";return function(){var a=this.getAttribute(t);return a===i?null:a===r?s:s=e(r=a,n)}}function hn(t,e,n){var r,s,i=n+"";return function(){var a=this.getAttributeNS(t.space,t.local);return a===i?null:a===r?s:s=e(r=a,n)}}function dn(t,e,n){var r,s,i;return function(){var a,o,l=n(this);if(null!=l)return(a=this.getAttribute(t))===(o=l+"")?null:a===r&&o===s?i:(s=o,i=e(r=a,l));this.removeAttribute(t)}}function pn(t,e,n){var r,s,i;return function(){var a,o,l=n(this);if(null!=l)return(a=this.getAttributeNS(t.space,t.local))===(o=l+"")?null:a===r&&o===s?i:(s=o,i=e(r=a,l));this.removeAttributeNS(t.space,t.local)}}function fn(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function mn(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function gn(t,e){var n,r;function s(){var s=e.apply(this,arguments);return s!==r&&(n=(r=s)&&mn(t,s)),n}return s._value=e,s}function bn(t,e){var n,r;function s(){var s=e.apply(this,arguments);return s!==r&&(n=(r=s)&&fn(t,s)),n}return s._value=e,s}function yn(t,e){return function(){oe(this,t).delay=+e.apply(this,arguments)}}function xn(t,e){return e=+e,function(){oe(this,t).delay=e}}function wn(t,e){return function(){le(this,t).duration=+e.apply(this,arguments)}}function vn(t,e){return e=+e,function(){le(this,t).duration=e}}function kn(t,e){if("function"!=typeof e)throw new Error;return function(){le(this,t).ease=e}}function In(t,e,n){var r,s,i=function(t){return(t+"").trim().split(/^|\s+/).every((function(t){var e=t.indexOf(".");return e>=0&&(t=t.slice(0,e)),!t||"start"===t}))}(e)?oe:le;return function(){var a=i(this,t),o=a.on;o!==r&&(s=(r=o).copy()).on(e,n),a.on=s}}var $n=Ft.prototype.constructor;function Cn(t){return function(){this.style.removeProperty(t)}}function Nn(t,e,n){return function(r){this.style.setProperty(t,e.call(this,r),n)}}function Sn(t,e,n){var r,s;function i(){var i=e.apply(this,arguments);return i!==s&&(r=(s=i)&&Nn(t,i,n)),r}return i._value=e,i}function En(t){return function(e){this.textContent=t.call(this,e)}}function An(t){var e,n;function r(){var r=t.apply(this,arguments);return r!==n&&(e=(n=r)&&En(r)),e}return r._value=t,r}var Tn=0;function Rn(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function Fn(){return++Tn}var _n=Ft.prototype;Rn.prototype=function(t){return Ft().transition(t)}.prototype={constructor:Rn,select:function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=w(t));for(var r=this._groups,s=r.length,i=new Array(s),a=0;a<s;++a)for(var o,l,u=r[a],c=u.length,h=i[a]=new Array(c),d=0;d<c;++d)(o=u[d])&&(l=t.call(o,o.__data__,d,u))&&("__data__"in o&&(l.__data__=o.__data__),h[d]=l,ae(h[d],e,n,d,h,ue(o,n)));return new Rn(i,this._parents,e,n)},selectAll:function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=I(t));for(var r=this._groups,s=r.length,i=[],a=[],o=0;o<s;++o)for(var l,u=r[o],c=u.length,h=0;h<c;++h)if(l=u[h]){for(var d,p=t.call(l,l.__data__,h,u),f=ue(l,n),m=0,g=p.length;m<g;++m)(d=p[m])&&ae(d,e,n,m,p,f);i.push(p),a.push(l)}return new Rn(i,a,e,n)},filter:function(t){"function"!=typeof t&&(t=$(t));for(var e=this._groups,n=e.length,r=new Array(n),s=0;s<n;++s)for(var i,a=e[s],o=a.length,l=r[s]=[],u=0;u<o;++u)(i=a[u])&&t.call(i,i.__data__,u,a)&&l.push(i);return new Rn(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,r=e.length,s=n.length,i=Math.min(r,s),a=new Array(r),o=0;o<i;++o)for(var l,u=e[o],c=n[o],h=u.length,d=a[o]=new Array(h),p=0;p<h;++p)(l=u[p]||c[p])&&(d[p]=l);for(;o<r;++o)a[o]=e[o];return new Rn(a,this._parents,this._name,this._id)},selection:function(){return new $n(this._groups,this._parents)},transition:function(){for(var t=this._name,e=this._id,n=Fn(),r=this._groups,s=r.length,i=0;i<s;++i)for(var a,o=r[i],l=o.length,u=0;u<l;++u)if(a=o[u]){var c=ue(a,e);ae(a,t,n,u,o,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new Rn(r,this._parents,t,n)},call:_n.call,nodes:_n.nodes,node:_n.node,size:_n.size,empty:_n.empty,each:_n.each,on:function(t,e){var n=this._id;return arguments.length<2?ue(this.node(),n).on.on(t):this.each(In(n,t,e))},attr:function(t,e){var n=P(t),r="transform"===n?be:on;return this.attrTween(t,"function"==typeof e?(n.local?pn:dn)(n,r,we(this,"attr."+t,e)):null==e?(n.local?un:ln)(n):(n.local?hn:cn)(n,r,e))},attrTween:function(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==e)return this.tween(n,null);if("function"!=typeof e)throw new Error;var r=P(t);return this.tween(n,(r.local?gn:bn)(r,e))},style:function(t,e,n){var r="transform"==(t+="")?ge:on;return null==e?this.styleTween(t,function(t,e){var n,r,s;return function(){var i=Y(this,t),a=(this.style.removeProperty(t),Y(this,t));return i===a?null:i===n&&a===r?s:s=e(n=i,r=a)}}(t,r)).on("end.style."+t,Cn(t)):"function"==typeof e?this.styleTween(t,function(t,e,n){var r,s,i;return function(){var a=Y(this,t),o=n(this),l=o+"";return null==o&&(this.style.removeProperty(t),l=o=Y(this,t)),a===l?null:a===r&&l===s?i:(s=l,i=e(r=a,o))}}(t,r,we(this,"style."+t,e))).each(function(t,e){var n,r,s,i,a="style."+e,o="end."+a;return function(){var l=le(this,t),u=l.on,c=null==l.value[a]?i||(i=Cn(e)):void 0;u===n&&s===c||(r=(n=u).copy()).on(o,s=c),l.on=r}}(this._id,t)):this.styleTween(t,function(t,e,n){var r,s,i=n+"";return function(){var a=Y(this,t);return a===i?null:a===r?s:s=e(r=a,n)}}(t,r,e),n).on("end.style."+t,null)},styleTween:function(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==e)return this.tween(r,null);if("function"!=typeof e)throw new Error;return this.tween(r,Sn(t,e,null==n?"":n))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var e=t(this);this.textContent=null==e?"":e}}(we(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(null==t)return this.tween(e,null);if("function"!=typeof t)throw new Error;return this.tween(e,An(t))},remove:function(){return this.on("end.remove",function(t){return function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}}(this._id))},tween:function(t,e){var n=this._id;if(t+="",arguments.length<2){for(var r,s=ue(this.node(),n).tween,i=0,a=s.length;i<a;++i)if((r=s[i]).name===t)return r.value;return null}return this.each((null==e?ye:xe)(n,t,e))},delay:function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?yn:xn)(e,t)):ue(this.node(),e).delay},duration:function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?wn:vn)(e,t)):ue(this.node(),e).duration},ease:function(t){var e=this._id;return arguments.length?this.each(kn(e,t)):ue(this.node(),e).ease},easeVarying:function(t){if("function"!=typeof t)throw new Error;return this.each(function(t,e){return function(){var n=e.apply(this,arguments);if("function"!=typeof n)throw new Error;le(this,t).ease=n}}(this._id,t))},end:function(){var t,e,n=this,r=n._id,s=n.size();return new Promise((function(i,a){var o={value:a},l={value:function(){0==--s&&i()}};n.each((function(){var n=le(this,r),s=n.on;s!==t&&((e=(t=s).copy())._.cancel.push(o),e._.interrupt.push(o),e._.end.push(l)),n.on=e})),0===s&&i()}))},[Symbol.iterator]:_n[Symbol.iterator]};var Dn={time:null,delay:0,duration:250,ease:function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}};function Mn(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return n}Ft.prototype.interrupt=function(t){return this.each((function(){!function(t,e){var n,r,s,i=t.__transition,a=!0;if(i){for(s in e=null==e?null:e+"",i)(n=i[s]).name===e?(r=n.state>2&&n.state<5,n.state=6,n.timer.stop(),n.on.call(r?"interrupt":"cancel",t,t.__data__,n.index,n.group),delete i[s]):a=!1;a&&delete t.__transition}}(this,t)}))},Ft.prototype.transition=function(t){var e,n;t instanceof Rn?(e=t._id,t=t._name):(e=Fn(),(n=Dn).time=Yt(),t=null==t?null:t+"");for(var r=this._groups,s=r.length,i=0;i<s;++i)for(var a,o=r[i],l=o.length,u=0;u<l;++u)(a=o[u])&&ae(a,t,e,u,o,n||Mn(a,e));return new Rn(r,this._parents,t,e)};const{abs:On,max:Ln,min:zn}=Math;function Pn(t){return{type:t}}function Bn(t,e){if((n=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var n,r=t.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+t.slice(n+1)]}function Wn(t){return(t=Bn(Math.abs(t)))?t[1]:NaN}["w","e"].map(Pn),["n","s"].map(Pn),["n","w","e","s","nw","ne","sw","se"].map(Pn);var Vn,Un=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Gn(t){if(!(e=Un.exec(t)))throw new Error("invalid format: "+t);var e;return new jn({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}function jn(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}function Hn(t,e){var n=Bn(t,e);if(!n)return t+"";var r=n[0],s=n[1];return s<0?"0."+new Array(-s).join("0")+r:r.length>s+1?r.slice(0,s+1)+"."+r.slice(s+1):r+new Array(s-r.length+2).join("0")}Gn.prototype=jn.prototype,jn.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};const qn={"%":(t,e)=>(100*t).toFixed(e),b:t=>Math.round(t).toString(2),c:t=>t+"",d:function(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)},e:(t,e)=>t.toExponential(e),f:(t,e)=>t.toFixed(e),g:(t,e)=>t.toPrecision(e),o:t=>Math.round(t).toString(8),p:(t,e)=>Hn(100*t,e),r:Hn,s:function(t,e){var n=Bn(t,e);if(!n)return t+"";var r=n[0],s=n[1],i=s-(Vn=3*Math.max(-8,Math.min(8,Math.floor(s/3))))+1,a=r.length;return i===a?r:i>a?r+new Array(i-a+1).join("0"):i>0?r.slice(0,i)+"."+r.slice(i):"0."+new Array(1-i).join("0")+Bn(t,Math.max(0,e+i-1))[0]},X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function Kn(t){return t}var Xn,Yn,Zn,Jn=Array.prototype.map,Qn=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];Xn=function(t){var e,n,r=void 0===t.grouping||void 0===t.thousands?Kn:(e=Jn.call(t.grouping,Number),n=t.thousands+"",function(t,r){for(var s=t.length,i=[],a=0,o=e[0],l=0;s>0&&o>0&&(l+o+1>r&&(o=Math.max(1,r-l)),i.push(t.substring(s-=o,s+o)),!((l+=o+1)>r));)o=e[a=(a+1)%e.length];return i.reverse().join(n)}),s=void 0===t.currency?"":t.currency[0]+"",i=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",o=void 0===t.numerals?Kn:function(t){return function(e){return e.replace(/[0-9]/g,(function(e){return t[+e]}))}}(Jn.call(t.numerals,String)),l=void 0===t.percent?"%":t.percent+"",u=void 0===t.minus?"−":t.minus+"",c=void 0===t.nan?"NaN":t.nan+"";function h(t){var e=(t=Gn(t)).fill,n=t.align,h=t.sign,d=t.symbol,p=t.zero,f=t.width,m=t.comma,g=t.precision,b=t.trim,y=t.type;"n"===y?(m=!0,y="g"):qn[y]||(void 0===g&&(g=12),b=!0,y="g"),(p||"0"===e&&"="===n)&&(p=!0,e="0",n="=");var x="$"===d?s:"#"===d&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",w="$"===d?i:/[%p]/.test(y)?l:"",v=qn[y],k=/[defgprs%]/.test(y);function I(t){var s,i,l,d=x,I=w;if("c"===y)I=v(t)+I,t="";else{var $=(t=+t)<0||1/t<0;if(t=isNaN(t)?c:v(Math.abs(t),g),b&&(t=function(t){t:for(var e,n=t.length,r=1,s=-1;r<n;++r)switch(t[r]){case".":s=e=r;break;case"0":0===s&&(s=r),e=r;break;default:if(!+t[r])break t;s>0&&(s=0)}return s>0?t.slice(0,s)+t.slice(e+1):t}(t)),$&&0==+t&&"+"!==h&&($=!1),d=($?"("===h?h:u:"-"===h||"("===h?"":h)+d,I=("s"===y?Qn[8+Vn/3]:"")+I+($&&"("===h?")":""),k)for(s=-1,i=t.length;++s<i;)if(48>(l=t.charCodeAt(s))||l>57){I=(46===l?a+t.slice(s+1):t.slice(s))+I,t=t.slice(0,s);break}}m&&!p&&(t=r(t,1/0));var C=d.length+t.length+I.length,N=C<f?new Array(f-C+1).join(e):"";switch(m&&p&&(t=r(N+t,N.length?f-I.length:1/0),N=""),n){case"<":t=d+t+I+N;break;case"=":t=d+N+t+I;break;case"^":t=N.slice(0,C=N.length>>1)+d+t+I+N.slice(C);break;default:t=N+d+t+I}return o(t)}return g=void 0===g?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,g)):Math.max(0,Math.min(20,g)),I.toString=function(){return t+""},I}return{format:h,formatPrefix:function(t,e){var n=h(((t=Gn(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Wn(e)/3))),s=Math.pow(10,-r),i=Qn[8+r/3];return function(t){return n(s*t)+i}}}}({thousands:",",grouping:[3],currency:["$",""]}),Yn=Xn.format,Zn=Xn.formatPrefix;var tr=Math.sqrt(50),er=Math.sqrt(10),nr=Math.sqrt(2);function rr(t,e,n){var r=(e-t)/Math.max(0,n),s=Math.floor(Math.log(r)/Math.LN10),i=r/Math.pow(10,s);return s>=0?(i>=tr?10:i>=er?5:i>=nr?2:1)*Math.pow(10,s):-Math.pow(10,-s)/(i>=tr?10:i>=er?5:i>=nr?2:1)}function sr(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function ir(t){let e=t,n=t;function r(t,e,r,s){for(null==r&&(r=0),null==s&&(s=t.length);r<s;){const i=r+s>>>1;n(t[i],e)<0?r=i+1:s=i}return r}return 1===t.length&&(e=(e,n)=>t(e)-n,n=function(t){return(e,n)=>sr(t(e),n)}(t)),{left:r,center:function(t,n,s,i){null==s&&(s=0),null==i&&(i=t.length);const a=r(t,n,s,i-1);return a>s&&e(t[a-1],n)>-e(t[a],n)?a-1:a},right:function(t,e,r,s){for(null==r&&(r=0),null==s&&(s=t.length);r<s;){const i=r+s>>>1;n(t[i],e)>0?s=i:r=i+1}return r}}}const ar=ir(sr),or=ar.right,lr=(ar.left,ir((function(t){return null===t?NaN:+t})).center,or);function ur(t,e){var n,r=e?e.length:0,s=t?Math.min(r,t.length):0,i=new Array(s),a=new Array(r);for(n=0;n<s;++n)i[n]=pr(t[n],e[n]);for(;n<r;++n)a[n]=e[n];return function(t){for(n=0;n<s;++n)a[n]=i[n](t);return a}}function cr(t,e){var n=new Date;return t=+t,e=+e,function(r){return n.setTime(t*(1-r)+e*r),n}}function hr(t,e){var n,r={},s={};for(n in null!==t&&"object"==typeof t||(t={}),null!==e&&"object"==typeof e||(e={}),e)n in t?r[n]=pr(t[n],e[n]):s[n]=e[n];return function(t){for(n in r)s[n]=r[n](t);return s}}function dr(t,e){e||(e=[]);var n,r=t?Math.min(e.length,t.length):0,s=e.slice();return function(i){for(n=0;n<r;++n)s[n]=t[n]*(1-i)+e[n]*i;return s}}function pr(t,e){var n,r,s=typeof e;return null==e||"boolean"===s?Qe(e):("number"===s?ce:"string"===s?(n=Pe(e))?(e=n,en):an:e instanceof Pe?en:e instanceof Date?cr:(r=e,!ArrayBuffer.isView(r)||r instanceof DataView?Array.isArray(e)?ur:"function"!=typeof e.valueOf&&"function"!=typeof e.toString||isNaN(e)?hr:ce:dr))(t,e)}function fr(t,e){return t=+t,e=+e,function(n){return Math.round(t*(1-n)+e*n)}}function mr(t){return+t}var gr=[0,1];function br(t){return t}function yr(t,e){return(e-=t=+t)?function(n){return(n-t)/e}:(n=isNaN(e)?NaN:.5,function(){return n});var n}function xr(t,e,n){var r=t[0],s=t[1],i=e[0],a=e[1];return s<r?(r=yr(s,r),i=n(a,i)):(r=yr(r,s),i=n(i,a)),function(t){return i(r(t))}}function wr(t,e,n){var r=Math.min(t.length,e.length)-1,s=new Array(r),i=new Array(r),a=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),e=e.slice().reverse());++a<r;)s[a]=yr(t[a],t[a+1]),i[a]=n(e[a],e[a+1]);return function(e){var n=lr(t,e,1,r)-1;return i[n](s[n](e))}}function vr(t,e){return e.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function kr(){return function(){var t,e,n,r,s,i,a=gr,o=gr,l=pr,u=br;function c(){var t,e,n,l=Math.min(a.length,o.length);return u!==br&&(t=a[0],e=a[l-1],t>e&&(n=t,t=e,e=n),u=function(n){return Math.max(t,Math.min(e,n))}),r=l>2?wr:xr,s=i=null,h}function h(e){return isNaN(e=+e)?n:(s||(s=r(a.map(t),o,l)))(t(u(e)))}return h.invert=function(n){return u(e((i||(i=r(o,a.map(t),ce)))(n)))},h.domain=function(t){return arguments.length?(a=Array.from(t,mr),c()):a.slice()},h.range=function(t){return arguments.length?(o=Array.from(t),c()):o.slice()},h.rangeRound=function(t){return o=Array.from(t),l=fr,c()},h.clamp=function(t){return arguments.length?(u=!!t||br,c()):u!==br},h.interpolate=function(t){return arguments.length?(l=t,c()):l},h.unknown=function(t){return arguments.length?(n=t,h):n},function(n,r){return t=n,e=r,c()}}()(br,br)}function Ir(t,e){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(e).domain(t)}return this}function $r(t){var e=t.domain;return t.ticks=function(t){var n=e();return function(t,e,n){var r,s,i,a,o=-1;if(n=+n,(t=+t)==(e=+e)&&n>0)return[t];if((r=e<t)&&(s=t,t=e,e=s),0===(a=rr(t,e,n))||!isFinite(a))return[];if(a>0)for(t=Math.ceil(t/a),e=Math.floor(e/a),i=new Array(s=Math.ceil(e-t+1));++o<s;)i[o]=(t+o)*a;else for(a=-a,t=Math.ceil(t*a),e=Math.floor(e*a),i=new Array(s=Math.ceil(e-t+1));++o<s;)i[o]=(t+o)/a;return r&&i.reverse(),i}(n[0],n[n.length-1],null==t?10:t)},t.tickFormat=function(t,n){var r=e();return function(t,e,n,r){var s,i=function(t,e,n){var r=Math.abs(e-t)/Math.max(0,n),s=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),i=r/s;return i>=tr?s*=10:i>=er?s*=5:i>=nr&&(s*=2),e<t?-s:s}(t,e,n);switch((r=Gn(null==r?",f":r)).type){case"s":var a=Math.max(Math.abs(t),Math.abs(e));return null!=r.precision||isNaN(s=function(t,e){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Wn(e)/3)))-Wn(Math.abs(t)))}(i,a))||(r.precision=s),Zn(r,a);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(s=function(t,e){return t=Math.abs(t),e=Math.abs(e)-t,Math.max(0,Wn(e)-Wn(t))+1}(i,Math.max(Math.abs(t),Math.abs(e))))||(r.precision=s-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(s=function(t){return Math.max(0,-Wn(Math.abs(t)))}(i))||(r.precision=s-2*("%"===r.type))}return Yn(r)}(r[0],r[r.length-1],null==t?10:t,n)},t.nice=function(n){null==n&&(n=10);var r,s,i=e(),a=0,o=i.length-1,l=i[a],u=i[o],c=10;for(u<l&&(s=l,l=u,u=s,s=a,a=o,o=s);c-- >0;){if((s=rr(l,u,n))===r)return i[a]=l,i[o]=u,e(i);if(s>0)l=Math.floor(l/s)*s,u=Math.ceil(u/s)*s;else{if(!(s<0))break;l=Math.ceil(l*s)/s,u=Math.floor(u*s)/s}r=s}return t},t}function Cr(){var t=kr();return t.copy=function(){return vr(t,Cr())},Ir.apply(t,arguments),$r(t)}function Nr(){var t,e=0,n=1,r=1,s=[.5],i=[0,1];function a(e){return e<=e?i[lr(s,e,0,r)]:t}function o(){var t=-1;for(s=new Array(r);++t<r;)s[t]=((t+1)*n-(t-r)*e)/(r+1);return a}return a.domain=function(t){return arguments.length?([e,n]=t,e=+e,n=+n,o()):[e,n]},a.range=function(t){return arguments.length?(r=(i=Array.from(t)).length-1,o()):i.slice()},a.invertExtent=function(t){var a=i.indexOf(t);return a<0?[NaN,NaN]:a<1?[e,s[0]]:a>=r?[s[r-1],n]:[s[a-1],s[a]]},a.unknown=function(e){return arguments.length?(t=e,a):a},a.thresholds=function(){return s.slice()},a.copy=function(){return Nr().domain([e,n]).range(i).unknown(t)},Ir.apply($r(a),arguments)}function Sr(t){return"string"==typeof t?new Tt([[document.querySelector(t)]],[document.documentElement]):new Tt([[t]],At)}function Er(t){return"string"==typeof t?new Tt([document.querySelectorAll(t)],[document.documentElement]):new Tt([null==t?[]:v(t)],At)}function Ar(t,e,n){this.k=t,this.x=e,this.y=n}Ar.prototype={constructor:Ar,scale:function(t){return 1===t?this:new Ar(this.k*t,this.x,this.y)},translate:function(t,e){return 0===t&0===e?this:new Ar(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},new Ar(1,0,0),Ar.prototype;var Tr=n(474),Rr=["#f59322","#0877bd","#c27ba0","#8e7cc3","#6d9eeb","#76a5af","#93c47d","#f6b26b","#000000"],Fr=["#e3861b","#0853bd","#b83b6f","#3b12b3","#266fe0","#1e6675","#568a3f","#8f5f2e"],_r=function(){function t(t,e,n,r,s,i){this.settings={showAxes:!1,noSvg:!1},this.numSamples=e;var a=t,o=i.showAxes?20:0;if(this.isClusteredData=!1,null!=i)for(var u in i)this.settings[u]=i[u];this.xScale=Cr().domain(n).range([0,t-2*o]),this.yScale=Cr().domain(r).range([a-2*o,0]);var c=Cr().domain([0,1]).range(["#808B96","#808B96"]).clamp(!0),h=l(0,1+1e-9,1/30).map((function(t){return c(t)}));if(this.color=Nr().domain([-1,1]).range(h),s=s.append("div").style("width",t+"px").style("height",a+"px").style("position","relative").style("top","-"+o+"px").style("left","-"+o+"px"),this.canvas=s.append("canvas").attr("width",e).attr("height",e).style("width",t-2*o+"px").style("height",a-2*o+"px").style("position","absolute").style("top",o+"px").style("left",o+"px"),this.settings.noSvg||(this.svg=s.append("svg").attr("width",t).attr("height",a).style("position","absolute").style("left","0").style("top","0").append("g").attr("transform","translate("+o+", "+o+")"),this.svg.append("g").attr("class","train"),this.svg.append("g").attr("class","test")),this.settings.showAxes){var d=y(this.xScale),p=function(t){return b(2,t)}(this.yScale);this.svg.append("g").attr("class","x axis").attr("transform","translate(0,"+(a-2*o)+")").call(d),this.svg.append("g").attr("class","y axis").attr("transform","translate("+(t-2*o)+",0)").call(p)}}return t.prototype.updateTestPoints=function(t){if(this.settings.noSvg)throw Error("Can't add points since noSvg=true");this.updateCircles(this.svg.select("g.test"),t)},t.prototype.updatePoints=function(t){if(this.settings.noSvg)throw Error("Can't add points since noSvg=true");this.updateCircles(this.svg.select("g.train"),t)},t.prototype.clearBackground=function(){var t=this.canvas.node();t.getContext("2d").clearRect(0,0,t.width,t.height)},t.prototype.updateBackground=function(t,e){if(!t.length||!t[0].length)throw new Error("Boundary is invalid");var n=t[0].length,r=t.length;if(n!==this.numSamples||r!==this.numSamples)throw new Error("The provided data matrix must be of size numSamples X numSamples");for(var s=this.canvas.node().getContext("2d"),i=s.createImageData(n,r),a=0,o=-1;a<r;++a)for(var l=0;l<n;++l){var u=t[l][a];if(void 0===u)return void this.clearBackground();e&&(u=u>=0?1:-1);var c=Ue(this.color(u));i.data[++o]=c.r,i.data[++o]=c.g,i.data[++o]=c.b,i.data[++o]=160}s.putImageData(i,0,0)},t.prototype.updateCircles=function(t,e){var n=this,r=this.xScale.domain(),s=this.yScale.domain();e=e.filter((function(t){return t.x>=r[0]&&t.x<=r[1]&&t.y>=s[0]&&t.y<=s[1]})),t.selectAll("circle").remove();var i=Sr("#hovercard"),a=t.selectAll("circle").data(e);a.enter().append("circle").attr("r",(function(t){return t.IsCentroid?4:3})).attr("cx",(function(t){return n.xScale(t.x)})).attr("cy",(function(t){return n.yScale(t.y)})).style("fill",(function(t){return t.IsCentroid?Fr[t.cluster]:n.isClusteredData?Rr[t.cluster]:"#808B96"})).on("mouseenter",(function(t,e){var n=function(t,e){if(t=function(t){let e;for(;e=t.sourceEvent;)t=e;return t}(t),void 0===e&&(e=t.currentTarget),e){var n=e.ownerSVGElement||e;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=t.clientX,r.y=t.clientY,[(r=r.matrixTransform(e.getScreenCTM().inverse())).x,r.y]}if(e.getBoundingClientRect){var s=e.getBoundingClientRect();return[t.clientX-s.left-e.clientLeft,t.clientY-s.top-e.clientTop]}}return[t.pageX,t.pageY]}(t,Sr("#main-heatmap canvas").node());i.style("left",n[0]+20+"px").style("top",n[1]+"px").style("display","block")})).on("mouseleave",(function(){i.style("display","none")})),a.exit().remove()},t.prototype.setColorScale=function(t){this.isClusteredData=t},t}();n(530);class Dr{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Mr{refCount(t){return Or("refCount")}incRef(t){return Or("incRef")}timerAvailable(){return!0}time(t){return Or("time")}read(t){return Or("read")}readSync(t){return Or("readSync")}numDataIds(){return Or("numDataIds")}disposeData(t,e){return Or("disposeData")}write(t,e,n){return Or("write")}move(t,e,n,r,s){return Or("move")}memory(){return Or("memory")}floatPrecision(){return Or("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Or("dispose")}}function Or(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Lr(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function zr(t,e,n){return Math.max(t,Math.min(e,n))}function Pr(t){return t%2==0?t:t+1}function Br(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function Wr(t,e,n=""){Br(jr(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function Vr(t){Br(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function Ur(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||ns(t)&&!n)for(let r=0;r<t.length;++r)Ur(t[r],e,n);else e.push(t);return e}function Gr(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function jr(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function Hr(t){return t%1==0}function qr(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function Kr(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function Xr(t,e=(t=>0),n){return new Promise(((r,s)=>{let i=0;const a=()=>{if(t())return void r();i++;const o=e(i);null!=n&&i>=n?s():setTimeout(a,o)};a()}))}function Yr(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function Zr(t,e){const n=e.length;return Br((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),Br(t.every((t=>Hr(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function Jr(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:Zr(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function Qr(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function ts(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function es(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function ns(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function rs(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function ss(t){return"string"==typeof t||t instanceof String}function is(t){return"number"==typeof t}function as(t){return Array.isArray(t)?as(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":is(t)?"float32":ss(t)?"string":function(t){return"boolean"==typeof t}(t)?"bool":"float32"}function os(t){return!!(t&&t.constructor&&t.call&&t.apply)}function ls(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function us(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function cs(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],i=e.slice(1),a=i.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=cs(t+e*a,i,n)}return r}function hs(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return cs(0,t,e)}function ds(t,e){const n=ps(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function ps(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function fs(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return hs(t,new Float32Array(n));if("int32"===e)return hs(t,new Int32Array(n));if("bool"===e)return hs(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function ms(t){t.forEach((e=>{Br(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function gs(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function bs(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function ys(t){return t&&t.then&&"function"==typeof t.then}class xs{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(ys(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function ws(){return ks}let vs,ks=null;function Is(){if(null==vs){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}vs=t}return vs}function $s(t,e){const n=function(){const t=Is();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const Cs="Abs",Ns="Acos",Ss="Acosh",Es="Add",As="AddN",Ts="All",Rs="Any",Fs="ArgMax",_s="ArgMin",Ds="Asin",Ms="Asinh",Os="Atan",Ls="Atanh",zs="Atan2",Ps="AvgPool",Bs="AvgPoolGrad",Ws="AvgPool3D",Vs="AvgPool3DGrad",Us="BatchMatMul",Gs="BatchToSpaceND",js="Bincount",Hs="Cast",qs="Ceil",Ks="ClipByValue",Xs="Complex",Ys="ComplexAbs",Zs="Concat",Js="Conv2D",Qs="Conv2DBackpropFilter",ti="Conv2DBackpropInput",ei="Conv3D",ni="Conv3DBackpropFilterV2",ri="Conv3DBackpropInputV2",si="Cos",ii="Cosh",ai="Cumsum",oi="CropAndResize",li="DenseBincount",ui="DepthToSpace",ci="DepthwiseConv2dNative",hi="DepthwiseConv2dNativeBackpropFilter",di="DepthwiseConv2dNativeBackpropInput",pi="Diag",fi="Dilation2D",mi="Dilation2DBackpropInput",gi="Dilation2DBackpropFilter",bi="RealDiv",yi="Elu",xi="EluGrad",wi="Erf",vi="Equal",ki="Exp",Ii="ExpandDims",$i="Expm1",Ci="FFT",Ni="Fill",Si="FlipLeftRight",Ei="Floor",Ai="FloorDiv",Ti="FusedBatchNorm",Ri="GatherV2",Fi="GatherNd",_i="Greater",Di="GreaterEqual",Mi="Identity",Oi="IFFT",Li="Imag",zi="IsFinite",Pi="IsInf",Bi="IsNan",Wi="LeakyRelu",Vi="Less",Ui="LessEqual",Gi="LinSpace",ji="Log",Hi="Log1p",qi="LogicalAnd",Ki="LogicalNot",Xi="LogicalOr",Yi="LRN",Zi="LRNGrad",Ji="Max",Qi="Maximum",ta="MaxPool",ea="MaxPoolGrad",na="MaxPool3D",ra="MaxPool3DGrad",sa="MaxPoolWithArgmax",ia="Mean",aa="Min",oa="Minimum",la="MirrorPad",ua="Mod",ca="Multinomial",ha="Multiply",da="Neg",pa="NotEqual",fa="NonMaxSuppressionV3",ma="NonMaxSuppressionV4",ga="NonMaxSuppressionV5",ba="OnesLike",ya="OneHot",xa="Pack",wa="PadV2",va="Pow",ka="Prelu",Ia="Prod",$a="Range",Ca="Real",Na="Reciprocal",Sa="Relu",Ea="Reshape",Aa="ResizeNearestNeighbor",Ta="ResizeNearestNeighborGrad",Ra="ResizeBilinear",Fa="ResizeBilinearGrad",_a="Relu6",Da="Reverse",Ma="Round",Oa="Rsqrt",La="ScatterNd",za="Select",Pa="Selu",Ba="Slice",Wa="Sin",Va="Sinh",Ua="Sign",Ga="Sigmoid",ja="Softplus",Ha="Sqrt",qa="Sum",Ka="SpaceToBatchND",Xa="SplitV",Ya="Softmax",Za="SquaredDifference",Ja="Square",Qa="Sub",to="SparseToDense",eo="StridedSlice",no="Tan",ro="Tanh",so="Tile",io="TopK",ao="Transform",oo="Transpose",lo="Unique",uo="Unpack",co="UnsortedSegmentSum",ho="ZerosLike",po="Step",fo="RotateWithOffset",mo="_FusedMatMul",go="FusedConv2D",bo="FusedDepthwiseConv2D",yo=$s("kernelRegistry",(()=>new Map)),xo=$s("gradRegistry",(()=>new Map));function wo(t,e){const n=Co(t,e);return yo.get(n)}function vo(t){return xo.get(t)}function ko(t){const e=yo.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===t&&n.push(a)}return n}function Io(t){const{kernelName:e,backendName:n}=t,r=Co(e,n);yo.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),yo.set(r,t)}function $o(t){const{kernelName:e}=t;xo.has(e)&&ws().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),xo.set(e,t)}function Co(t,e){return`${e}_${t}`}function No(t,e){return"string"===e?Ao(t):So([t],e)}function So(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=Ur(t)),ws().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Eo(){return ws().platform.now()}function Ao(t,e="utf-8"){return e=e||"utf-8",ws().platform.encode(t,e)}function To(t,e="utf-8"){return e=e||"utf-8",ws().platform.decode(t,e)}class Ro{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new _o)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let i;const a=Eo();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();i=Promise.resolve({kernelMs:Eo()-a})}if(ws().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{Fo(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then((t=>t.kernelMs)),extraInfo:i.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),r,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function Fo(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class _o{logKernelProfile(t,e,n,r,s,i){const a="number"==typeof r?Kr(`${r}ms`,9):r.error,o=Kr(t,25),l=e.rank,u=e.size,c=Kr(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Do(t,e,n,r){const s=us(e),i=function(t,e,n,r){const s=Gr(e),i=r[r.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?zo(t):t;if(o>1)for(let t=0;t<s/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],Mo(l[e+t],0,n).length)}return a}(t,e,n,s),a=e.length,o=Lo(t,e,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Mo(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:ss(t)?`'${t}'`:"bool"===n?Oo(t):parseFloat(t.toFixed(7)).toString(),Kr(r,e)}function Oo(t){return 0===t?"false":"true"}function Lo(t,e,n,r,s,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[Mo(zo(t)[0],0,n)]:"bool"===n?[Oo(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let r=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(r=zo(r),i=zo(i)),["["+r.map(((t,e)=>Mo(t,s[e],n))).join(", ")+", ..., "+i.map(((t,e)=>Mo(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?zo(t):Array.from(t)).map(((t,e)=>Mo(t,s[e],n))).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,i=r+h;d.push(...Lo(t.slice(r,i),u,n,c,s,!1))}d.push("...");for(let e=o-3;e<o;e++){const r=e*h,i=r+h;d.push(...Lo(t.slice(r,i),u,n,c,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,i=r+h;d.push(...Lo(t.slice(r,i),u,n,c,s,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function zo(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Po{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=Gr(t),null!=n){const t=n.length;Br(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ts(e,this.size),this.strides=us(t)}set(t,...e){0===e.length&&(e=[0]),Br(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Bo().makeTensor(this.values,this.shape,this.dtype)}}let Bo=null,Wo=null,Vo=null;class Uo{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Gr(t),this.strides=us(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Wo.buffer(this.shape,this.dtype,t)}bufferSync(){return Wo.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return hs(this.shape,t)}arraySync(){return hs(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=Bo().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>To(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Bo().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>To(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Bo().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Bo().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Wo.print(this,t)}clone(){return this.throwIfDisposed(),Wo.clone(this)}toString(t=!1){return Do(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Wo.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Bo().makeVariable(this,t,e,n)}}function Go(){return $s("Tensor",(()=>Uo))}Object.defineProperty(Uo,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),Go();class jo extends Uo{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!jr(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Bo().disposeTensor(this),this.dataId=t.dataId,Bo().incRef(this,null)}dispose(){Bo().disposeVariable(this),this.isDisposedInternal=!0}}var Ho,qo,Ko,Xo,Yo;Object.defineProperty(jo,Symbol.hasInstance,{value:t=>t instanceof Uo&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Ho||(Ho={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(qo||(qo={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Ko||(Ko={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Xo||(Xo={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Yo||(Yo={}));const Zo={float32:Xo,int32:qo,bool:Ko,complex64:Yo};function Jo(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Zo[t][e]}function Qo(t){return Jo(t,"int32")}function tl(t,e){if(t.dtype===e.dtype)return[t,e];const n=Jo(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function el(t,e){return e.some((e=>e.id===t.id))}function nl(t){const e=[];return rl(t,e,new Set),e}function rl(t,e,n){if(null==t)return;if(t instanceof Uo)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),rl(r,e,n))}}function sl(t){return null!=t.kernelName}class il{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class al{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new il}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Ro(this.backendInstance),!0}setupRegisteredKernels(){ko(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){ko(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof Mr||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e),i=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return al.nextTensorId++}nextVariableId(){return al.nextVariableId++}clone(t){const e=ll.runKernel(Mi,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return ll.runKernel(Hs,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==wo(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=sl(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(sl(t)){const{kernelName:e,inputs:s,attrs:i}=t;null==this.backendName&&this.backend;const l=wo(e,this.backendName);Br(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),a=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const u=a.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)}));if(r){const t=this.getTensorsForGradient(e,s,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,s=t=>{r&&(n=t.map((t=>this.keep(this.clone(t)))))};a=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:c}=t,h=sl(t)?null:t.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=a()})),r&&this.addTapeNode(l,u,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=vo(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(Br(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>s[e]));return i.concat(a)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&ss(t[0])&&(s=t.map((t=>Ao(t))));const i=r.write(s,e,n),a=new Uo(e,n,i,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const s=new Uo(e,n=n||"float32",t,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new jo(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*rs(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof jo||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*rs(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=vo(t);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=ps(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=nl(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(Br(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));Br(s instanceof Uo,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){i.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in r)i[r[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=ds(Gr(t),"float32");return ll.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const i=e[s],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[e];if(!jr(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=s;else{const e=t[a.id];t[a.id]=r(e,s),e.dispose()}}}}(t,i,(t=>this.tidy(t)),ul);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return Br(os(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;Br(e.every((t=>t instanceof Uo)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc({forwardFunc:(r,s)=>(n=t(...e,s),Br(n.value instanceof Uo,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Br(os(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,r)=>{const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];Br(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Br(i.every((t=>t instanceof Uo)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Eo(),n=await this.backend.time(t);return n.wallMs=Eo()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new il;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ol(){const t=Is();if(null==t._tfengine){const e=new xs(t);t._tfengine=new al(e)}var e;return e=t._tfengine.ENV,ks=e,Bo=()=>t._tfengine,t._tfengine}al.nextTensorId=0,al.nextVariableId=0;const ll=ol();function ul(t,e){const n={a:t,b:e};return ll.runKernel(Es,n)}function cl(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function hl(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const dl=ws();function pl(t,e){let n=t;if(ns(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||ns(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&ws().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&fl(t,r,[]),r}function fl(t,e,n){if(n=n||[],!Array.isArray(t)&&!ns(t))return void Br(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));Br(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),Br(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)fl(t[e],r,n.concat(e))}function ml(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function gl(t,e,n,r="numeric"){if(t instanceof Uo)return ml(r,t.dtype,e,n),t;let s=as(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),ml(r,s,e,n),null==t||!ns(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=pl(t,s);ns(t)||Array.isArray(t)||(t=[t]);const a="string"!==s?So(t,s):Ur(t,[],!0);return ll.makeTensor(a,i,s)}function bl(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>gl(t,`${e}[${s}]`,n,r)))}function yl(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{ll.startScope(n);try{const e=r(...t);return ys(e)&&console.error("Cannot return a Promise inside of tidy."),ll.endScope(e),e}catch(t){throw ll.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}dl.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),dl.registerFlag("IS_BROWSER",(()=>hl())),dl.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),dl.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),dl.registerFlag("PROD",(()=>!1)),dl.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>dl.getBool("DEBUG"))),dl.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),dl.registerFlag("IS_TEST",(()=>!1)),dl.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),dl.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const xl=yl({complex_:function(t,e){const n=gl(t,"real","complex"),r=gl(e,"imag","complex");Wr(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ll.runKernel(Xs,s)}});function wl(t,e,n,r){if(null==r&&(r=as(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ns(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){ms(e);const t=Gr(e),r=Gr(n);Br(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==Gr(e.slice(t));Br(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return ns(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?So(t,r):Ur(t,[],!0),ll.makeTensor(t,e,r)}async function vl(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:kl(await Promise.all(r)),specs:n}}function kl(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const Il="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function $l(t){return Il?Buffer.byteLength(t):new Blob([t]).size}function Cl(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function Nl(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:$l(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:$l(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class Sl{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Sl.instance&&(Sl.instance=new Sl),Sl.instance}static registerSaveRouter(t){Sl.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Sl.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Sl.getHandlers(t,"save")}static getLoadHandlers(t,e){return Sl.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Sl.getInstance().loadRouters:Sl.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const El="tensorflowjs",Al="models_store",Tl="model_info_store";function Rl(){if(!ws().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Fl(t){const e=t.result;e.createObjectStore(Al,{keyPath:"modelPath"}),e.createObjectStore(Tl,{keyPath:"modelPath"})}class _l{constructor(t){if(this.indexedDB=Rl(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(El,1);r.onupgradeneeded=()=>Fl(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(Al,"readonly"),r=e.objectStore(Al).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Nl(e),i=s.transaction(Tl,"readwrite");let a=i.objectStore(Tl);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Al,"readwrite");const o=l.objectStore(Al).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{a=i.objectStore(Tl);const e=a.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}_l.URL_SCHEME="indexeddb://";const Dl=t=>{return ws().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(_l.URL_SCHEME)?(e=t.slice(_l.URL_SCHEME.length),new _l(e)):null;var e};Sl.registerSaveRouter(Dl),Sl.registerLoadRouter(Dl);class Ml{constructor(){this.indexedDB=Rl()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(El,1);n.onupgradeneeded=()=>Fl(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Tl,"readonly"),i=s.objectStore(Tl).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(_l.URL_SCHEME)?e.slice(_l.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(El,1);r.onupgradeneeded=()=>Fl(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(Tl,"readwrite"),a=i.objectStore(Tl),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=a.delete(t),i=()=>{l=s.transaction(Al,"readwrite");const r=l.objectStore(Al).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const Ol="/",Ll="tensorflowjs_models",zl="info",Pl="model_topology",Bl="weight_specs",Wl="weight_data",Vl="model_metadata";function Ul(t){return{info:[Ll,t,zl].join(Ol),topology:[Ll,t,Pl].join(Ol),weightSpecs:[Ll,t,Bl].join(Ol),weightData:[Ll,t,Wl].join(Ol),modelMetadata:[Ll,t,Vl].join(Ol)}}function Gl(t){const e=t.split(Ol);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Ol)}class jl{constructor(t){if(!ws().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Ul(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Nl(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Il)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Il){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}jl.URL_SCHEME="localstorage://";const Hl=t=>{return ws().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(jl.URL_SCHEME)?(e=t.slice(jl.URL_SCHEME.length),new jl(e)):null;var e};Sl.registerSaveRouter(Hl),Sl.registerLoadRouter(Hl);class ql{constructor(){Br(ws().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Br("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Ll+Ol,n=Ol+zl;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[Gl(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=Ul(t=(e=t).startsWith(jl.URL_SCHEME)?e.slice(jl.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class Kl{constructor(){this.managers={}}static getInstance(){return null==Kl.instance&&(Kl.instance=new Kl),Kl.instance}static registerManager(t,e){Br(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Br(t.length>0,(()=>"scheme must not be an empty string."));const n=Kl.getInstance();Br(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Xl{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(ws().get("IS_BROWSER")){ws().setPlatform("browser",new Xl);try{Kl.registerManager(jl.URL_SCHEME,new ql)}catch(t){}try{Kl.registerManager(_l.URL_SCHEME,new Ml)}catch(t){}}let Yl;function Zl(t,e="float32",n){return e=e||"float32",ms(t),new Po(t,e,n)}ws().get("IS_NODE")&&ws().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=ws().global.fetch?ws().global.fetch(t,e):(null==Yl&&(Yl=n(950)),Yl(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Jl=yl({cast_:function(t,e){const n=gl(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return ll.runKernel(Hs,r,s)}}),Ql=yl({clone_:function(t){const e={x:gl(t,"x","clone","string_or_numeric")};return ll.runKernel(Mi,e)}});function tu(t){return new Promise((t=>setTimeout(t))).then(t)}ol(),Wo={buffer:Zl,cast:Jl,clone:Ql,print:function(t,e=!1){console.log(t.toString(e))}};class eu{constructor(t){if(!ws().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(eu.URL_SCHEME)&&(t=t.slice(eu.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=s,await tu((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await tu((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Nl(t)}}}}function nu(t,e,n,r){!function(t){Br(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){Br(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),Br(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),Br(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++s/t.length*(r-n);return e(a),i})),i))))}async function ru(t,e){null==e&&(e={});const n=null==e.fetchFunc?ws().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await nu(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await nu(s,e.onProgress,.5,1)}eu.URL_SCHEME="downloads://",Sl.registerSaveRouter((t=>ws().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(eu.URL_SCHEME)?function(t="model"){return new eu(t)}(t.slice(eu.URL_SCHEME.length)):null));class su{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Br("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=ws().platform.fetch,Br(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&Br(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Nl(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,i=e.convertedBy,a=e.format,o=e.signature,l=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const t=await this.loadWeights(r);[u,c]=t}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:i,format:a};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=e.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(s+t+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,Cl(await ru(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function iu(t){return null!=t.match(su.URL_SCHEME_REGEX)}su.URL_SCHEME_REGEX=/^https?:\/\//;const au=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>iu(t))):iu(t),n)return function(t,e){return new su(t,e)}(t,e)}return null};function ou(t,e,n){const r=t.shape.length;Br(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),Br(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)Br(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function lu(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function uu(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function cu(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function hu(t,e,n){return n<=t?n:n-(e-1)}function du(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function pu(t,e,n,r,s,i,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=fu(a,l,u,r,t),h=mu(o,l,u,s,t),d=cu(i,l,u,t)}else for(let e=0;e<u;e++)c[e]=bu(a,r,i,t,e,l),h[e]=yu(o,s,i,t,e,l),d[e]=gu(i,e,l);return{begin:c,end:h,strides:d}}function fu(t,e,n,r,s){const i=[...s],a=du(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=0;else{const a=hu(e,n,s);let o=r[a];t&1<<a&&(o=0),i[s]=o}return i}function mu(t,e,n,r,s){const i=[...s],a=du(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=hu(e,n,s);let o=r[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let t=0;t<i.length;t++){const e=s[t];i[t]<0&&(i[t]+=e),i[t]=zr(0,i[t],s[t])}return i}function gu(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function bu(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=zr(0,a,l-1),a}function yu(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?zr(0,a,l):zr(-1,a,l-1),a}function xu(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function wu(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function vu(t,e,n){let r;const s=t.shape.length;let i;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{Br(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(Br(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,i]}function ku(t,e,n,r,s,i,a,o,l){let u=e.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=lu(a);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=t.length-u.length,f=lu(o),m=t.slice();f.forEach((t=>{u[t]=0,c[t]=1,m.splice(t,0,1)}));const{begin:g,end:b,strides:y}=pu(m,d,p,u,c,h,s,i,a);u=g,c=b,h=y;const x=lu(l);x.forEach((t=>{c[t]=u[t]+1,h[t]=1}));const w=uu(u,c,h),v=w.filter(((t,e)=>-1===x.indexOf(e)));return{nonStrided:h.every((t=>1===t)),$begin:u,$end:c,$strides:h,size:w,newShape:m,outShape:v}}Sl.registerSaveRouter(au),Sl.registerLoadRouter(au);class Iu{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class $u{constructor(){this.classNameMap={}}static getMap(){return null==$u.instance&&($u.instance=new $u),$u.instance}static register(t){$u.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Cu(t){Br(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),Br("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),Br(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),$u.register(t)}function Nu(){return ll}function Su(){return ll.memory()}function Eu(t,e){return ll.tidy(t,e)}function Au(t){nl(t).forEach((t=>t.dispose()))}function Tu(t){return ll.keep(t)}function Ru(t,e,n=1){return ll.registerBackend(t,e,n)}function Fu(t){return ll.customGrad(t)}function _u(t,e){if((ns(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&ns(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return wl(t,[],[],e)}Vo=function(t){ws().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Du extends Iu{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return Au(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){Br(os(t),(()=>"The f passed in variableGrads(f) must be a function")),Br(null==e||Array.isArray(e)&&e.every((t=>t instanceof jo)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in ll.registeredVariables)e.push(ll.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;Br((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:i,grads:a}=ll.gradients(t,e,null,!0);Br(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Br(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Au(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:_u(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Du,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Mu=yl({abs_:function(t){const e=gl(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return ll.runKernel(Ys,t)}{const t={x:e};return ll.runKernel(Cs,t)}}}),Ou=yl({add_:function(t,e){let n=gl(t,"a","add"),r=gl(e,"b","add");[n,r]=tl(n,r);const s={a:n,b:r};return ll.runKernel(Es,s)}}),Lu=yl({all_:function(t,e=null,n=!1){const r={x:gl(t,"x","all","bool")},s={axis:e,keepDims:n};return ll.runKernel(Ts,r,s)}}),zu=yl({any_:function(t,e=null,n=!1){const r={x:gl(t,"x","any","bool")},s={axis:e,keepDims:n};return ll.runKernel(Rs,r,s)}}),Pu=yl({argMax_:function(t,e=0){const n={x:gl(t,"x","argMax")},r={axis:e};return ll.runKernel(Fs,n,r)}});function Bu(t,e,n,r,s="NHWC",i){return Uu(t,[...e,t[3]],n,i,r,null,null,Ju(s))}function Wu(t,e,n,r,s,i,a="channelsLast"){const[o,l]=Hu(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return Uu(t,u,n,r,s,i,!1,a)}function Vu(t,e,n,r,s,i,a="NDHWC"){const[o,l,u]=qu(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return Gu(t,c,n,r,s,!1,h,i)}function Uu(t,e,n,r,s,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[d,p,,f]=e,[m,g]=Hu(n),[b,y]=Hu(r),x=Ku(d,b),w=Ku(p,y),{padInfo:v,outHeight:k,outWidth:I}=function(t,e,n,r,s,i,a,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=ju(t,e,n));const i=t[1];return[Xu((t[0]-e+2*r)/n+1,s),Xu((i-e+2*r)/n+1,s)]}([e,n],i,r,t,o);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+i-e),o=Math.max(0,(h-1)*s+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Xu((e-i+d+p)/r+1,o),h=Xu((n-a+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,w,i,o),$=a?f*h:f;let C;return"channelsFirst"===o?C=[l,$,k,I]:"channelsLast"===o&&(C=[l,k,I,$]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:$,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:y,inShape:t,outShape:C,filterShape:e}}function Gu(t,e,n,r,s,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=t}const[p,f,m,,g]=e,[b,y,x]=qu(n),[w,v,k]=qu(r),I=Ku(p,w),$=Ku(f,v),C=Ku(m,k),{padInfo:N,outDepth:S,outHeight:E,outWidth:A}=function(t,e,n,r,s,i,a,o,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,s,i){null==s&&(s=ju(t,e,r));const a=t[1],o=t[2];return[Xu((t[0]-e+2*s)/r+1,i),Xu((a-e+2*s)/r+1,i),Xu((o-e+2*s)/r+1,i),1]}([e,n,r,1],o,0,s,t,c);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const t=(d-1)*s+o-e,c=(p-1)*i+l-n,m=(f-1)*a+u-r,g=Math.floor(t/2),b=t-g,y=Math.floor(c/2),x=c-y,w=Math.floor(m/2);h={top:y,bottom:x,left:w,right:m-w,front:g,back:b,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),p=Math.ceil((n-l+1)/i),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,x,I,$,C,o),T=i?g*d:g;let R;return"channelsFirst"===a?R=[l,T,S,E,A]:"channelsLast"===a&&(R=[l,S,E,A,T]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:S,outHeight:E,outWidth:A,outChannels:T,padInfo:N,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:$,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:R,filterShape:e}}function ju(t,e,n,r=1){const s=Ku(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function Hu(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function qu(t){return"number"==typeof t?[t,t,t]:t}function Ku(t,e){return e<=1?t:t+(t-1)*(e-1)}function Xu(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Yu(t){const[e,n,r]=Hu(t);return 1===e&&1===n&&1===r}function Zu(t,e){return Yu(t)||Yu(e)}function Ju(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const Qu=yl({reshape_:function(t,e){const n={x:gl(t,"x","reshape","string_or_numeric")},r={shape:e};return ll.runKernel(Ea,n,r)}}),tc=yl({avgPool_:function(t,e,n,r,s){const i=gl(t,"x","avgPool","float32");Br(Zu(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Br(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),null!=s&&Br(Hr(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=ll.runKernel(Ps,l,u);return c=Jl(c,i.dtype),o?Qu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ec=yl({avgPool3d_:function(t,e,n,r,s,i="NDHWC"){const a=gl(t,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=Qu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Br(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Br("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),null!=s&&Br(Hr(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let h=ll.runKernel(Ws,u,c);return h=Jl(h,o.dtype),l?Qu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),nc=yl({batchNorm_:function(t,e,n,r,s,i){null==i&&(i=.001);const a=gl(t,"x","batchNorm"),o=gl(e,"mean","batchNorm"),l=gl(n,"variance","batchNorm");let u,c;null!=s&&(u=gl(s,"scale","batchNorm")),null!=r&&(c=gl(r,"offset","batchNorm")),Br(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Br(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Br(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(t){let e;return e=0===t.rank||1===t.rank?Qu(t,[1,1,1,t.size]):2===t.rank?Qu(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Qu(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:i},p=ll.runKernel(Ti,h,d);return Qu(p,a.shape)}}),rc=yl({batchNorm2d_:function(t,e,n,r,s,i){const a=gl(t,"x","batchNorm"),o=gl(e,"mean","batchNorm"),l=gl(n,"variance","batchNorm");let u,c;return null!=s&&(u=gl(s,"scale","batchNorm")),null!=r&&(c=gl(r,"offset","batchNorm")),Br(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),Br(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Br(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&Br(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&Br(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),nc(a,o,l,c,u,i)}}),sc=yl({batchNorm3d_:function(t,e,n,r,s,i){const a=gl(t,"x","batchNorm"),o=gl(e,"mean","batchNorm"),l=gl(n,"variance","batchNorm");let u,c;return null!=s&&(u=gl(s,"scale","batchNorm")),null!=r&&(c=gl(r,"offset","batchNorm")),Br(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),Br(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Br(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&Br(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&Br(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),nc(a,o,l,c,u,i)}}),ic=yl({batchNorm4d_:function(t,e,n,r,s,i){const a=gl(t,"x","batchNorm"),o=gl(e,"mean","batchNorm"),l=gl(n,"variance","batchNorm");let u,c;return null!=s&&(u=gl(s,"scale","batchNorm")),null!=r&&(c=gl(r,"offset","batchNorm")),Br(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),Br(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Br(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&Br(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&Br(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),nc(a,o,l,c,u,i)}}),ac=yl({clipByValue_:function(t,e,n){const r=gl(t,"x","clipByValue");Br(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},i={clipValueMin:e,clipValueMax:n};return ll.runKernel(Ks,s,i)}}),oc=yl({concat_:function(t,e=0){Br(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=bl(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return Ql(n[0]);const r=n,s={axis:e};return ll.runKernel(Zs,r,s)}}),lc=yl({concat1d_:function(t){return oc(t,0)}}),uc=yl({concat2d_:function(t,e){return oc(t,e)}}),cc=yl({concat3d_:function(t,e){return oc(t,e)}}),hc=yl({concat4d_:function(t,e){return oc(t,e)}}),dc=yl({conv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=gl(t,"x","conv2d"),l=gl(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Br(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Br(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=a&&Br(Hr(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];Br(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Br(Zu(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=ll.runKernel(Js,d,p);return c?Qu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),pc=yl({conv1d_:function(t,e,n,r,s="NWC",i=1,a){const o=gl(t,"x","conv1d"),l=gl(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Qu(o,[1,o.shape[0],o.shape[1]])),Br(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Br(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=a&&Br(Hr(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),Br(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Br(Zu(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),Br("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Qu(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Qu(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=dc(d,h,[1,n],r,"NHWC",[1,i],a);return Qu(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),fc=yl({conv2DBackpropInput_:function(t,e,n,r,s,i="NHWC",a){Br(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=Qu(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),Br(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Br(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Br(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];Br(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Br(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=a&&Br(Hr(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},f=ll.runKernel(ti,d,p);return u?Qu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),mc=yl({conv2dTranspose_:function(t,e,n,r,s,i){const a=gl(t,"x","conv2dTranspose"),o=gl(e,"filter","conv2dTranspose");return fc(n,a,o,r,s,"NHWC",i)}}),gc=yl({conv3d_:function(t,e,n,r,s="NDHWC",i=[1,1,1]){const a=gl(t,"x","conv3d"),o=gl(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=Qu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Br(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Br(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Br(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Br(Zu(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Br("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:i},d=ll.runKernel(ei,c,h);return u?Qu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),bc=yl({depthwiseConv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=gl(t,"x","depthwiseConv2d"),l=gl(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Br(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Br(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),Br(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=a&&Br(Hr(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},p=ll.runKernel(ci,h,d);return c?Qu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),yc=yl({floorDiv_:function(t,e){let n=gl(t,"a","floorDiv"),r=gl(e,"b","floorDiv");[n,r]=tl(n,r);const s={a:n,b:r};return ll.runKernel(Ai,s)}}),xc=yl({div_:function(t,e){let n=gl(t,"a","div"),r=gl(e,"b","div");if([n,r]=tl(n,r),"int32"===n.dtype&&"int32"===r.dtype)return yc(n,r);const s={a:n,b:r};return ll.runKernel(bi,s,{})}}),wc=yl({elu_:function(t){const e={x:gl(t,"x","elu")};return ll.runKernel(yi,e)}});function vc(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=t[i]||1;(e[e.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function kc(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,a=e[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function Ic(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}const $c=yl({equal_:function(t,e){let n=gl(t,"a","equal"),r=gl(e,"b","equal");[n,r]=tl(n,r),Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(vi,s)}}),Cc=yl({expandDims_:function(t,e=0){const n=gl(t,"x","expandDims","string_or_numeric");Br(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:e};return ll.runKernel(Ii,r,s)}}),Nc=yl({tile_:function(t,e){const n=gl(t,"x","tile","string_or_numeric");Br(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r={x:n},s={reps:e};return ll.runKernel(so,r,s)}}),Sc=yl({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=Zl([t,e],r),i=t<=e?t:e;for(let t=0;t<i;++t)s.set(1,t,t);const a=Qu(s.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return Nc(Cc(a,0),[n[0],1,1]);if(2===n.length)return Nc(Cc(Cc(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Nc(Cc(Cc(Cc(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ec(t,e,n){const r={shape:t,value:e,dtype:n};return ll.runKernel(Ni,{},r)}const Ac=yl({floor_:function(t){const e={x:gl(t,"x","floor")};return ll.runKernel(Ei,e)}}),Tc=yl({gather_:function(t,e,n=0,r=0){const s={x:gl(t,"x","gather"),indices:gl(e,"indices","gather","int32")},i={axis:n,batchDims:r};return ll.runKernel(Ri,s,i)}}),Rc=yl({greater_:function(t,e){let n=gl(t,"a","greater"),r=gl(e,"b","greater");[n,r]=tl(n,r),Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(_i,s)}}),Fc=yl({greaterEqual_:function(t,e){let n=gl(t,"a","greaterEqual"),r=gl(e,"b","greaterEqual");[n,r]=tl(n,r),Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(Di,s)}}),_c=yl({leakyRelu_:function(t,e=.2){const n={x:gl(t,"x","leakyRelu")},r={alpha:e};return ll.runKernel(Wi,n,r)}}),Dc=yl({log_:function(t){const e={x:gl(t,"x","log")};return ll.runKernel(ji,e)}}),Mc=yl({exp_:function(t){const e={x:gl(t,"x","exp")};return ll.runKernel(ki,e)}}),Oc=yl({max_:function(t,e=null,n=!1){const r={x:gl(t,"x","max")},s={reductionIndices:e,keepDims:n};return ll.runKernel(Ji,r,s)}}),Lc=yl({mul_:function(t,e){let n=gl(t,"a","mul"),r=gl(e,"b","mul");[n,r]=tl(n,r);const s={a:n,b:r};return ll.runKernel(ha,s)}}),zc=yl({sub_:function(t,e){let n=gl(t,"a","sub"),r=gl(e,"b","sub");[n,r]=tl(n,r);const s={a:n,b:r};return ll.runKernel(Qa,s)}}),Pc=yl({sum_:function(t,e=null,n=!1){let r=gl(t,"x","sum");"bool"===r.dtype&&(r=Jl(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return ll.runKernel(qa,s,i)}}),Bc=yl({logSoftmax_:function(t,e=-1){const n=gl(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return Fu(((t,n)=>{const r=Oc(t,e,!0),s=zc(t,r),i=zc(Jl(s,"float32"),Dc(Pc(Mc(s),e,!0)));return n([i]),{value:i,gradFunc:(t,n)=>{const[r]=n,s=Mc(r);return zc(t,Lc(Pc(t,e,!0),s))}}}))(n)}}),Wc=yl({logicalAnd_:function(t,e){const n=gl(t,"a","logicalAnd","bool"),r=gl(e,"b","logicalAnd","bool");Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(qi,s)}}),Vc=yl({matMul_:function(t,e,n=!1,r=!1){let s=gl(t,"a","matMul"),i=gl(e,"b","matMul");[s,i]=tl(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return ll.runKernel(Us,a,o)}}),Uc=yl({maxPool_:function(t,e,n,r,s){const i=gl(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Br(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),Br(Zu(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&Br(Hr(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=ll.runKernel(ta,l,u);return o?Qu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Gc=yl({maxPool3d_:function(t,e=[1,1,1],n,r,s,i="NDHWC"){const a=gl(t,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=Qu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Br(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Br("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),null!=s&&Br(Hr(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},h=ll.runKernel(na,u,c);return l?Qu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),jc=yl({maximum_:function(t,e){let n=gl(t,"a","maximum"),r=gl(e,"b","maximum");[n,r]=tl(n,r),"bool"===n.dtype&&(n=Jl(n,"int32"),r=Jl(r,"int32")),Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(Qi,s)}}),Hc=yl({mean_:function(t,e=null,n=!1){const r={x:gl(t,"x","mean")},s={axis:e,keepDims:n};return ll.runKernel(ia,r,s)}}),qc=yl({min_:function(t,e=null,n=!1){const r={x:gl(t,"x","min")},s={axis:e,keepDims:n};return ll.runKernel(aa,r,s)}}),Kc=yl({minimum_:function(t,e){let n=gl(t,"a","minimum"),r=gl(e,"b","minimum");[n,r]=tl(n,r),"bool"===n.dtype&&(n=Jl(n,"int32"),r=Jl(r,"int32")),Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(oa,s)}});function Xc(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Yc(t,e,n){const r=t.length+e.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[i++]):s.push(e[a++]);return s}function Zc(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function Jc(t,e){return Yc(t,e.map((t=>1)),e)}function Qc(t,e,n){Br(Xc(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function th(t,e){if(Xc(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function eh(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function nh(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const rh=yl({square_:function(t){const e=gl(t,"x","square");return ll.runKernel("Square",{x:e},{})}}),sh=yl({moments_:function(t,e=null,n=!1){const r=Zr(e,(t=gl(t,"x","moments")).shape),s=Hc(t,r,n);let i=s.shape;n||(i=Jc(s.shape,r));const a=rh(zc(Jl(t,"float32"),Qu(s,i)));return{mean:s,variance:Hc(a,r,n)}}}),ih=yl({neg_:function(t){const e={x:gl(t,"x","neg")};return ll.runKernel(da,e)}}),ah=yl({notEqual_:function(t,e){let n=gl(t,"a","notEqual"),r=gl(e,"b","notEqual");[n,r]=tl(n,r),Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(pa,s)}}),oh=yl({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s={indices:gl(t,"indices","oneHot","int32")},i={depth:e,onValue:n,offValue:r};return ll.runKernel(ya,s,i)}});function lh(t,e="float32"){if("complex64"===e){const e=lh(t,"float32"),n=lh(t,"float32");return xl(e,n)}const n=ps(Gr(t),e);return ll.makeTensor(n,t,e)}function uh(t,e="float32"){if("complex64"===e){const e=uh(t,"float32"),n=lh(t,"float32");return xl(e,n)}const n=ds(Gr(t),e);return ll.makeTensor(n,t,e)}const ch=yl({onesLike_:function(t){const e={x:gl(t,"x","onesLike")};return ll.runKernel(ba,e)}}),hh=yl({pad_:function(t,e,n=0){const r=gl(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},i={x:r};return ll.runKernel(wa,i,s)}}),dh=yl({prelu_:function(t,e){const n={x:gl(t,"x","prelu"),alpha:gl(e,"alpha","prelu")};return ll.runKernel(ka,n)}});var ph=n(996);class fh{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=ph.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class mh{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=ph.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const gh=yl({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new fh(e,n,r,!1,s),a=Zl(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),bh=yl({randomUniform_:function(t,e=0,n=1,r="float32",s){const i=Zl(t,r),a=new mh(e,n,null,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),yh=yl({relu_:function(t){const e={x:gl(t,"x","relu")};return ll.runKernel(Sa,e)}}),xh=yl({reverse_:function(t,e){const n={x:gl(t,"x","reverse")},r={dims:e};return ll.runKernel(Da,n,r)}}),wh=yl({selu_:function(t){const e={x:gl(t,"x","selu")};return ll.runKernel(Pa,e)}}),vh=yl({separableConv2d_:function(t,e,n,r,s,i=[1,1],a="NHWC"){const o=gl(t,"x","separableConv2d"),l=gl(e,"depthwiseFilter","separableConv2d"),u=gl(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Br(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Br(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Br(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Br(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Br(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];Br(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=bc(c,l,r,s,a,i),m=dc(f,u,1,"valid",a);return h?Qu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),kh=yl({sigmoid_:function(t){const e={x:gl(t,"x","sigmoid")};return ll.runKernel(Ga,e)}}),Ih=yl({slice_:function(t,e,n){const r=gl(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:n};return ll.runKernel(Ba,s,i)}}),$h=yl({slice1d_:function(t,e,n){const r=gl(t,"x","slice1d");return Br(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Ih(r,[e],[n])}}),Ch=yl({slice2d_:function(t,e,n){const r=gl(t,"x","slice2d");return Br(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Ih(r,e,n)}}),Nh=yl({slice3d_:function(t,e,n){const r=gl(t,"x","slice3d");return Br(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Ih(r,e,n)}}),Sh=yl({slice4d_:function(t,e,n){const r=gl(t,"x","slice4d");return Br(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Ih(r,e,n)}}),Eh=yl({softmax_:function(t,e=-1){const n=gl(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return ll.runKernel(Ya,r,s)}}),Ah=yl({softplus_:function(t){const e={x:gl(t,"x","softplus")};return ll.runKernel(ja,e)}}),Th=yl({split_:function(t,e,n=0){const r={x:gl(t,"x","split")},s={numOrSizeSplits:e,axis:n};return ll.runKernel(Xa,r,s)}}),Rh=yl({sqrt_:function(t){const e={x:gl(t,"x","sqrt")};return ll.runKernel(Ha,e)}}),Fh=yl({squeeze_:function(t,e){const n=gl(t,"x","squeeze");return Qu(n,Jr(n.shape,e).newShape)}}),_h=yl({stack_:function(t,e=0){const n=bl(t,"tensors","stack","string_or_numeric");Br(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Br(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:e};return ll.runKernel(xa,r,s)}}),Dh=yl({tanh_:function(t){const e={x:gl(t,"x","tanh")};return ll.runKernel(ro,e)}});function Mh(t,e){Vr(t);const n=pl(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return wl(t,null,n,e)}const Oh=yl({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new fh(e,n,r,!0,s),a=Zl(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Lh=yl({unstack_:function(t,e=0){const n=gl(t,"x","unstack","string_or_numeric");Br(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:e};return ll.runKernel(uo,r,s)}}),zh=yl({broadcastTo_:function(t,e){let n=gl(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Qu(n,t)}const s=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Ql(n);const a={x:n},o={reps:i};return ll.runKernel(so,a,o)}}),Ph=yl({where_:function(t,e,n){const r=gl(e,"a","where"),s=gl(n,"b","where"),i=gl(t,"condition","where","bool"),a=Ic(r.shape,s.shape),o=zh(r,a),l=zh(s,a);1===i.rank&&Br(i.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==i.rank&&Wr(i.shape,l.shape,"Error in where: ");const u={condition:i,t:o,e:l};return ll.runKernel(za,u)}}),Bh=yl({zerosLike_:function(t){const e={x:gl(t,"x","zerosLike")};return ll.runKernel(ho,e)}}),Wh=yl({transpose_:function(t,e){const n=gl(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),Br(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{Br(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return ll.runKernel(oo,r,s)}}),Vh=yl({dropout_:function(t,e,n,r){const s=gl(t,"x","dropout");if(Br("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),Br(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Uo?s.clone():s;const i=function(t,e){if(null==e)return t.shape.slice();if(jr(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),a=1-e,o=xc(Ac(Ou(bh(i,0,1,"float32",r),a)),a);return Lc(s,o)}}),Uh=yl({imag_:function(t){const e={input:gl(t,"input","imag")};return ll.runKernel(Li,e)}}),Gh=yl({real_:function(t){const e={input:gl(t,"input","real")};return ll.runKernel(Ca,e)}}),jh=yl({fft_:function(t){Br("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return ll.runKernel(Ci,e)}}),Hh=yl({rfft_:function(t,e){Br("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,s=Ih(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=oc([t,lh(r)],t.shape.length-1),n=e}else s=t;const i=Bh(s),a=Qu(xl(s,i),[r,n]),o=jh(a),l=Math.floor(n/2)+1,u=Gh(o),c=Uh(o),h=Th(u,[l,n-l],u.shape.length-1),d=Th(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Qu(xl(h[0],d[0]),p)}}),qh=yl({ifft_:function(t){Br("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return ll.runKernel(Oi,e)}}),Kh=yl({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=Qu(t,[n,e]);r=qh(s)}else{const s=[n,2*(e-1)],i=Qu(Gh(t),[n,e]),a=Qu(Uh(t),[n,e]),o=xh(Ih(i,[0,1],[n,e-2]),1),l=Lc(xh(Ih(a,[0,1],[n,e-2]),1),_u(-1)),u=oc([i,o],1),c=oc([a,l],1),h=Qu(xl(u,c),[s[0],s[1]]);r=qh(h)}if(r=Gh(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=Qu(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),Xh=yl({conv2DBackpropFilter_:function(t,e,n,r,s,i="NHWC",a){let o=t;3===t.rank&&(o=Qu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Qu(e,[1,e.shape[0],e.shape[1],e.shape[2]])),Br(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Br(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Br(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];Br(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Br(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=a&&Br(Hr(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return ll.runKernel(Qs,h,d)}}),Yh=yl({relu6_:function(t){const e={x:gl(t,"x","relu6")};return ll.runKernel(_a,e)}}),Zh=yl({step_:function(t,e=0){const n={x:gl(t,"x","step")},r={alpha:e};return ll.runKernel(po,n,r)}});function Jh(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Lc(t,Zh(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Qh(t,e){let n=e;const r=kc(t.shape,e.shape);return r.length>0&&(n=Pc(n,r)),Qu(n,t.shape)}function td(t,e,n,r){if("linear"===e)return t;if("relu"===e)return yh(t);if("elu"===e)return wc(t);if("relu6"===e)return Yh(t);if("prelu"===e)return dh(t,n);if("leakyrelu"===e)return _c(t,r);throw new Error(`Unknown fused activation ${e}.`)}const ed=(t,e)=>!(t>0)||"linear"===e,nd=yl({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===ed(ll.state.gradientDepth,l)){let h=dc(t,e,n,r,s,i,a);return null!=o&&(h=Ou(h,o)),td(h,l,u,c)}const h=gl(t,"x","conv2d"),d=gl(e,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Qu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Br(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),Br(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=a&&Br(Hr(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),Br(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),Br(Zu(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Br("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=Uu(p.shape,d.shape,n,i,r,a);let g,b;null!=o&&(g=gl(o,"bias","fused conv2d"),[g]=tl(g,h),Ic(m.outShape,g.shape)),null!=u&&(b=gl(u,"prelu weights","fused conv2d"));const y=(t,e)=>{const[s,a,o,u]=e,c=Jh(t,o,l);Br(Yu(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[fc(a.shape,c,s,n,r),Xh(a,c,s.shape,n,r)];if(null!=u){const t=Qh(u,c);h.push(t)}return h},x={x:p,filter:d,bias:g,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return null==o?Fu(((t,e,n)=>{let r=ll.runKernel(go,x,w);return n([e,t,r]),f&&(r=Qu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):Fu(((t,e,n,r)=>{let s=ll.runKernel(go,x,w);return r([e,t,s,n]),f&&(s=Qu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,g)}}),rd=yl({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,i=[1,1],a){let o=t;3===t.rank&&(o=Qu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Qu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return ll.runKernel(hi,u,c)}}),sd=yl({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,i=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=Qu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:t},h=ll.runKernel(di,u,c);return l?Qu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});yl({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===ed(ll.state.gradientDepth,l)){let h=bc(t,e,n,r,s,i,a);return null!=o&&(h=Ou(h,o)),td(h,l,u,c)}const h=gl(t,"x","depthwiseConv2d"),d=gl(e,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Qu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Br(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),Br(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),Br(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==i&&(i=[1,1]),Br(Zu(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=a&&Br(Hr(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${r}.`));const m=Uu(p.shape,d.shape,n,i,r,a,!0);let g,b;null!=o&&(g=gl(o,"bias","fused conv2d"),[g]=tl(g,h),Ic(m.outShape,g.shape)),null!=u&&(b=gl(u,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{Br(Yu(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[s,o,u,c]=e,h=Jh(t,u,l),d=sd(o.shape,h,s,n,r,i,a),p=rd(o,h,s.shape,n,r,i,a);return null!=c?[d,p,Qh(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return null==o?Fu(((t,e,n)=>{let r=ll.runKernel(bo,x,w);return n([e,t,r]),f&&(r=Qu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):Fu(((t,e,n,r)=>{let s=ll.runKernel(bo,x,w);return r([e,t,s,n]),f&&(s=Qu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,g)}});const id=yl({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o}){if(!1===ed(ll.state.gradientDepth,i)){let l=Vc(t,e,n,r);return null!=s&&(l=Ou(l,s)),td(l,i,a,o)}let l=gl(t,"a","fused matMul"),u=gl(e,"b","fused matMul");[l,u]=tl(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Gr(f),b=Gr(m);Br(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),Br(jr(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),Br(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=l.shape.slice(0,-2).concat([d,p]),x=Qu(l,n?[g,c,d]:[g,d,c]),w=Qu(u,r?[b,p,h]:[b,h,p]);let v,k;null!=s&&(v=gl(s,"bias","fused matMul"),[v]=tl(v,l),Ic(y,v.shape)),null!=a&&(k=gl(a,"prelu weights","fused matMul"));const I=(t,e)=>{const[a,o,l,u]=e,c=Jh(Qu(t,l.shape),l,i);let h,d;return n||r?!n&&r?(h=Vc(c,o,!1,!1),d=Vc(c,a,!0,!1)):n&&!r?(h=Vc(o,c,!1,!0),d=Vc(a,c,!1,!1)):(h=Vc(o,c,!0,!0),d=Vc(c,a,!0,!0)):(h=Vc(c,o,!1,!0),d=Vc(a,c,!0,!1)),null!=s?[h,d,Qh(u,c)]:[h,d]},$={a:x,b:w,bias:v,preluActivationWeights:k},C={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};return null==s?Fu(((t,e,n)=>{const r=ll.runKernel(mo,$,C);return n([t,e,r]),{value:Qu(r,y),gradFunc:I}}))(x,w):Fu(((t,e,n,r)=>{const s=ll.runKernel(mo,$,C);return r([t,e,s,n]),{value:Qu(s,y),gradFunc:I}}))(x,w,v)}});function ad(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(a)}return Mh(s,"float32")}yl({hammingWindow_:function(t){return ad(t,.54,.46)}});const od=yl({hannWindow_:function(t){return ad(t,.5,.5)}});function ld(t,e,n){if(Vr(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=pl(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return wl(t,e,r,n)}const ud=yl({frame_:function(t,e,n,r=!1,s=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(Ih(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,o=oc([Ih(t,i,e-r),Ec([r],s)]);a.push(o),i+=n}return 0===a.length?ld([],[0,e]):Qu(oc(a),[a.length,e])}});function cd(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),Br(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Br(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),Br(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),Br(1===e.rank,(()=>"scores must be a 1D tensor")),Br(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),Br(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}function hd(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(e,t[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(t,e,n||dd)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function dd(t,e){return t>e?1:t<e?-1:0}function pd(t,e,n,r,s){return gd(t,e,n,r,s,0)}function fd(t,e,n,r,s,i){return gd(t,e,n,r,s,0,!1,i,!0)}function md(t,e,n,r,s,i){return gd(t,e,n,r,s,i,!0)}function gd(t,e,n,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(xd);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<s)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=bd(t,i,h[n]);if(a>=r){o=!0;break}if(e.score=e.score*yd(r,c,a),e.score<=s)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(i),d.push(e.score)):e.score>s&&hd(u,e,xd))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function bd(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(a,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function yd(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function xd(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}yl({stft_:function(t,e,n,r,s=od){null==r&&(r=function(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}(e));const i=ud(t,e,n),a=Lc(i,s(e)),o=[];for(let t=0;t<i.shape[0];t++)o.push(Hh(Ih(a,[t,0],[1,e]),r));return oc(o)}}),yl({cropAndResize_:function(t,e,n,r,s="bilinear",i=0){const a=gl(t,"image","cropAndResize"),o=gl(e,"boxes","cropAndResize","float32"),l=gl(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Br(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),Br(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Br(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Br(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Br(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Br("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:o,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return ll.runKernel(oi,c,h)}}),yl({flipLeftRight_:function(t){const e=gl(t,"image","flipLeftRight","float32");Br(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return ll.runKernel(Si,n,{})}}),yl({rotateWithOffset_:function(t,e,n=0,r=.5){const s=gl(t,"image","rotateWithOffset","float32");Br(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:e,fillValue:n,center:r};return ll.runKernel(fo,i,a)}}),yl({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=gl(t,"boxes","nonMaxSuppression"),a=gl(e,"scores","nonMaxSuppression"),o=cd(i,a,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return ll.runKernel(fa,{boxes:i,scores:a},l)}}),yl({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=gl(t,"boxes","nonMaxSuppression"),o=gl(e,"scores","nonMaxSuppression"),l=cd(a,o,n,r,s,i),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=ll.runKernel(ga,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),yl({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=gl(t,"boxes","nonMaxSuppression"),o=gl(e,"scores","nonMaxSuppression"),l=cd(a,o,n,r,s,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=ll.runKernel(ma,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const wd=yl({resizeBilinear_:function(t,e,n=!1,r=!1){const s=gl(t,"images","resizeBilinear");Br(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),Br(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),Br(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Qu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:e},u=ll.runKernel(Ra,o,l);return a?Qu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),vd=yl({resizeNearestNeighbor_:function(t,e,n=!1,r=!1){const s=gl(t,"images","resizeNearestNeighbor");Br(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),Br(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),Br("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Br(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Qu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:e},u=ll.runKernel(Aa,o,l);return a?Qu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});yl({transform_:function(t,e,n="nearest",r="constant",s=0,i){const a=gl(t,"image","transform","float32"),o=gl(e,"transforms","transform","float32");Br(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),Br(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Br(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return ll.runKernel(ao,l,u)}});const kd=yl({lessEqual_:function(t,e){let n=gl(t,"a","lessEqual"),r=gl(e,"b","lessEqual");[n,r]=tl(n,r),Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(Ui,s)}});function Id(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return ll.runKernel($a,{},s)}const $d=yl({bandPart_:function(t,e,n){Br(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),Br(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=gl(t,"a","bandPart");Br(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=Qu(Id(0,i,1,"int32"),[-1,1]),l=Id(0,a,1,"int32"),u=zc(o,l),c=Wc(kd(u,_u(+e,"int32")),Fc(u,_u(-n,"int32"))),h=lh([i,a],r.dtype);return Qu(_h(Lh(Qu(r,[-1,i,a])).map((t=>Ph(c,t,h)))),s)}}),Cd=yl({pow_:function(t,e){let n=gl(t,"base","pow"),r=gl(e,"exp","pow");[n,r]=tl(n,r);const s={a:n,b:r};return ll.runKernel(va,s)}});function Nd(t,e,n=null){if(0===t.rank)return Mu(t);if(1!==t.rank&&null===n)return Nd(Qu(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Pc(Mu(t),n);if(e===1/0)return Oc(Mu(t),n);if(e===-1/0)return qc(Mu(t),n);if("euclidean"===e||2===e)return Rh(Pc(Cd(Mu(t),_u(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Oc(Pc(Mu(t),n[0]),n[1]-1);if(e===1/0)return Oc(Pc(Mu(t),n[1]),n[0]);if(e===-1/0)return qc(Pc(Mu(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Rh(Pc(rh(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Sd=yl({norm_:function(t,e="euclidean",n=null,r=!1){const s=Nd(t=gl(t,"x","norm"),e,n);let i=s.shape;if(r){const e=Zr(n,t.shape);i=Jc(s.shape,e)}return Qu(s,i)}}),Ed=yl({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Br(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)Br(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Th(t,t.shape[0],0).map((t=>Fh(t,[0])));Br(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(ll.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Lc(Pc(Lc(n[r],t)),n[r]);t=zc(t,e)}return xc(t,Sd(t,"euclidean"))})));return e?_h(n,0):n}});function Ad(t,e=!1){return ll.tidy((()=>{Br(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=Sc(n),i=Ql(t);const a=ld([[1]],[1,1]);let o=Ql(a);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=i,l=o,u=s;[o,i,s]=ll.tidy((()=>{const e=Ih(i,[t,t],[n-t,1]),l=Sd(e),u=Ih(i,[t,t],[1,1]),c=Ph(Rc(u,0),ld([[-1]]),ld([[1]])),h=zc(u,Lc(c,l)),d=xc(e,h);o=1===d.shape[0]?Ql(a):oc([a,Ih(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=ih(xc(Vc(c,h),l)),f=Ih(i,[t,0],[n-t,r]),m=Lc(p,o),g=Wh(o);if(0===t)i=zc(f,Vc(m,Vc(g,f)));else{const e=zc(f,Vc(m,Vc(g,f)));i=oc([Ih(i,[0,0],[t,r]),e],0)}const b=Wh(m),y=Ih(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=zc(y,Vc(Vc(y,o),b));else{const e=zc(y,Vc(Vc(y,o),b));s=oc([Ih(s,[0,0],[n,t]),e],1)}return[o,i,s]})),Au([e,l,u])}return!e&&n>r&&(s=Ih(s,[0,0],[n,r]),i=Ih(i,[0,0],[r,r])),[s,i]}))}const Td=yl({qr_:function(t,e=!1){if(Br(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Ad(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=Lh(Qu(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach((t=>{const[n,r]=Ad(t,e);s.push(n),i.push(r)})),[Qu(_h(s,0),t.shape),Qu(_h(i,0),t.shape)]}}});var Rd;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Rd||(Rd={}));const Fd=yl({computeWeightedLoss_:function(t,e,n=Rd.SUM_BY_NONZERO_WEIGHTS){const r=gl(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=gl(e,"weights","computeWeightedLoss"));const i=null==s?r:Lc(r,s);if(n===Rd.NONE)return i;if(n===Rd.SUM)return Pc(i);if(n===Rd.MEAN){if(null==s)return Hc(i);{const t=r.size/s.size,e=xc(Pc(i),Pc(s));return t>1?xc(e,_u(t)):e}}if(n===Rd.SUM_BY_NONZERO_WEIGHTS){if(null==s)return xc(Pc(i),_u(r.size));{const t=Lc(s,uh(r.shape)),e=Jl(Pc(ah(t,_u(0))),"float32");return xc(Pc(i),e)}}throw Error(`Unknown reduction: ${n}`)}});yl({absoluteDifference_:function(t,e,n,r=Rd.SUM_BY_NONZERO_WEIGHTS){const s=gl(t,"labels","absoluteDifference"),i=gl(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=gl(n,"weights","absoluteDifference")),Wr(s.shape,i.shape,"Error in absoluteDifference: ");const o=Mu(zc(s,i));return Fd(o,a,r)}}),yl({cosineDistance_:function(t,e,n,r,s=Rd.SUM_BY_NONZERO_WEIGHTS){const i=gl(t,"labels","cosineDistance"),a=gl(e,"predictions","cosineDistance");let o=null;null!=r&&(o=gl(r,"weights","cosineDistance")),Wr(i.shape,a.shape,"Error in cosineDistance: ");const l=_u(1),u=zc(l,Pc(Lc(i,a),n,!0));return Fd(u,o,s)}}),yl({hingeLoss_:function(t,e,n,r=Rd.SUM_BY_NONZERO_WEIGHTS){let s=gl(t,"labels","hingeLoss");const i=gl(e,"predictions","hingeLoss");let a=null;null!=n&&(a=gl(n,"weights","hingeLoss")),Wr(s.shape,i.shape,"Error in hingeLoss: ");const o=_u(1);s=zc(Lc(_u(2),s),o);const l=yh(zc(o,Lc(s,i)));return Fd(l,a,r)}}),yl({huberLoss_:function(t,e,n,r=1,s=Rd.SUM_BY_NONZERO_WEIGHTS){const i=gl(t,"labels","huberLoss"),a=gl(e,"predictions","huberLoss");let o=null;null!=n&&(o=gl(n,"weights","huberLoss")),Wr(i.shape,a.shape,"Error in huberLoss: ");const l=_u(r),u=Mu(zc(a,i)),c=Kc(u,l),h=zc(u,c),d=Ou(Lc(_u(.5),rh(c)),Lc(l,h));return Fd(d,o,s)}}),yl({logLoss_:function(t,e,n,r=1e-7,s=Rd.SUM_BY_NONZERO_WEIGHTS){const i=gl(t,"labels","logLoss"),a=gl(e,"predictions","logLoss");let o=null;null!=n&&(o=gl(n,"weights","logLoss")),Wr(i.shape,a.shape,"Error in logLoss: ");const l=_u(1),u=_u(r),c=ih(Lc(i,Dc(Ou(a,u)))),h=Lc(zc(l,i),Dc(Ou(zc(l,a),u))),d=zc(c,h);return Fd(d,o,s)}});const _d=yl({squaredDifference_:function(t,e){let n=gl(t,"a","squaredDifference"),r=gl(e,"b","squaredDifference");[n,r]=tl(n,r),Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(Za,s,{})}});yl({meanSquaredError_:function(t,e,n,r=Rd.SUM_BY_NONZERO_WEIGHTS){const s=gl(t,"labels","meanSquaredError"),i=gl(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=gl(n,"weights","meanSquaredError")),Wr(s.shape,i.shape,"Error in meanSquaredError: ");const o=_d(s,i);return Fd(o,a,r)}});const Dd=yl({log1p_:function(t){const e={x:gl(t,"x","log1p")};return ll.runKernel(Hi,e)}});yl({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Rd.SUM_BY_NONZERO_WEIGHTS){let i=gl(t,"multiClassLabels","sigmoidCrossEntropy");const a=gl(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=gl(n,"weights","sigmoidCrossEntropy")),Wr(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=_u(r),e=_u(1),n=_u(.5);i=Ou(Lc(i,zc(e,t)),Lc(n,t))}const l=function(t,e){const n=gl(t,"labels","sigmoidCrossEntropyWithLogits"),r=gl(e,"logits","sigmoidCrossEntropyWithLogits");Wr(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=yh(r),i=Lc(r,n),a=Dd(Mc(ih(Mu(r))));return Ou(zc(s,i),a)}(i,a);return Fd(l,o,s)}});const Md=yl({logSumExp_:function(t,e=null,n=!1){const r=gl(t,"x","logSumExp"),s=Zr(e,r.shape),i=Oc(r,s,!0),a=zc(r,i),o=Mc(a),l=Pc(o,s),u=Dc(l),c=Ou(Qu(i,u.shape),u);if(n){const t=Jc(c.shape,s);return Qu(c,t)}return c}});yl({softmaxCrossEntropy_:function(t,e,n,r=0,s=Rd.SUM_BY_NONZERO_WEIGHTS){let i=gl(t,"onehotLabels","softmaxCrossEntropy");const a=gl(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=gl(n,"weights","softmaxCrossEntropy")),Wr(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=_u(r),e=_u(1),n=_u(i.shape[1]);i=Ou(Lc(i,zc(e,t)),xc(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Fu(((t,e,r)=>{const s=Md(e,[n],!0),i=zc(Jl(e,"float32"),s);r([t,i]);const a=ih(Lc(i,t));return{value:Pc(a,[n]),gradFunc:(t,e)=>{const[r,s]=e,i=Jc(t.shape,[n]);return[Lc(Qu(t,i),zc(Jl(r,"float32"),Mc(s))),Lc(Qu(t,i),zc(Mc(s),Jl(r,"float32")))]}}}))(t,e)}(i,a);return Fd(l,o,s)}});const Od={bandPart:$d,gramSchmidt:Ed,qr:Td};class Ld extends Du{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ll.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ll.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Eu((()=>Bh(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Eu((()=>Bh(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;Eu((()=>{const t=Ou(Lc(i,this.rho),Lc(rh(s),1-this.rho)),e=Lc(xc(Rh(Ou(a,this.epsilon)),Rh(Ou(i,this.epsilon))),s),n=Ou(Lc(a,this.rho),Lc(rh(e),1-this.rho));i.assign(t),a.assign(n);const o=Ou(Lc(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Au(this.accumulatedGrads.map((t=>t.variable))),Au(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Ld.className="Adadelta",Cu(Ld);class zd extends Du{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ll.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Eu((()=>Ec(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;Eu((()=>{const t=Ou(i,rh(s));i.assign(t);const e=Ou(Lc(xc(s,Rh(Ou(t,ll.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Au(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}zd.className="Adagrad",Cu(zd);class Pd extends Du{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Eu((()=>{this.accBeta1=_u(e).variable(),this.accBeta2=_u(n).variable()})),null==r&&(this.epsilon=ll.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Eu((()=>{const n=zc(1,this.accBeta1),r=zc(1,this.accBeta2);e.forEach(((e,s)=>{const i=ll.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Eu((()=>Bh(i).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:Eu((()=>Bh(i).variable(!1)))});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=Ou(Lc(o,this.beta1),Lc(a,1-this.beta1)),c=Ou(Lc(l,this.beta2),Lc(rh(a),1-this.beta2)),h=xc(u,n),d=xc(c,r);o.assign(u),l.assign(c);const p=Ou(Lc(xc(h,Ou(Rh(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(Lc(this.accBeta1,this.beta1)),this.accBeta2.assign(Lc(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Au(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Au(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Eu((()=>{this.accBeta1.assign(Cd(this.beta1,this.iterations_+1)),this.accBeta2.assign(Cd(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Pd.className="Adam",Cu(Pd);class Bd extends Du{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Eu((()=>{this.iteration=_u(0).variable(),this.accBeta1=_u(e).variable()})),null==r&&(this.epsilon=ll.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Eu((()=>{const n=zc(1,this.accBeta1),r=xc(-this.learningRate,Ou(Lc(this.iteration,this.decay),1));e.forEach(((e,s)=>{const i=ll.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Bh(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:Bh(i).variable(!1)});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=Ou(Lc(o,this.beta1),Lc(a,1-this.beta1)),c=Lc(l,this.beta2),h=Mu(a),d=jc(c,h);o.assign(u),l.assign(d);const p=Ou(Lc(xc(r,n),xc(u,Ou(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(Ou(this.iteration,1)),this.accBeta1.assign(Lc(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Au(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Au(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Bd.className="Adamax",Cu(Bd);class Wd extends Du{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=ll.registeredVariables[e];Eu((()=>{const t=Ou(Lc(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Tu(_u(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Wd.className="SGD",Cu(Wd);class Vd extends Wd{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=_u(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ll.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Eu((()=>Bh(r).variable(t)))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&Eu((()=>{let t;const e=Ou(Lc(this.m,s),i);t=this.useNesterov?Ou(Lc(this.c,Ou(i,Lc(e,this.m))),r):Ou(Lc(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Au(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Vd.className="Momentum",Cu(Vd);class Ud extends Du{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ll.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ll.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Eu((()=>Bh(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Eu((()=>Bh(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Eu((()=>Bh(r).variable(s)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Eu((()=>{const t=Ou(Lc(a,this.decay),Lc(rh(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Ou(Lc(e,this.decay),Lc(i,1-this.decay)),l=xc(Lc(i,this.learningRate),Rh(zc(t,Ou(rh(s),this.epsilon)))),u=Ou(Lc(o,this.momentum),l);a.assign(t),e.assign(s),o.assign(u);const c=zc(r,u);r.assign(c)}else{const t=Ou(Lc(a,this.decay),Lc(rh(i),1-this.decay)),e=Ou(Lc(o,this.momentum),xc(Lc(i,this.learningRate),Rh(Ou(t,this.epsilon))));a.assign(t),o.assign(e);const n=zc(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Au(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Au(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Au(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Ud.className="RMSProp",Cu(Ud);class Gd{static sgd(t){return new Wd(t)}static momentum(t,e,n=!1){return new Vd(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Ud(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new Pd(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Ld(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new Bd(t,e,n,r,s)}static adagrad(t,e=.1){return new zd(t,e)}}const jd={sgd:Gd.sgd,momentum:Gd.momentum,adadelta:Gd.adadelta,adagrad:Gd.adagrad,rmsprop:Gd.rmsprop,adamax:Gd.adamax,adam:Gd.adam},Hd="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function qd(){return new Promise((t=>Hd((()=>t()))))}function Kd(t,e){const n=t[0].length;t.forEach(((t,e)=>{Br(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),Br(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let i=0;i<n;i++)Br(i===e||t[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Xd(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const Yd=30;function Zd(t){return t<=Yd?t:ls(t,Math.floor(Math.sqrt(t)))}function Jd(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Qd(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function tp(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function ep(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function np(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function rp(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function sp(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===Gr(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,i=s[s.length-1];let a=1;for(let t=0;t<s.length-1;++t)a*=s[t];const o=t.shape,l=s.slice();l.pop();let u=1;for(let t=i;t<n;++t)u*=o[t],l.push(o[t]);const c=[...us(t.shape).map((t=>t/u)),1].slice(0,i);return[l,a,u,c]}function ip(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(i+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function ap(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}ip(n,e,t)}function op(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let a=1;for(let t=s;t<i;++t)a*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:Gr(e.shape)/o,sliceSize:a,strides:[...us(n.slice(0,s)),1],outputSize:Gr(n)}}const lp=1.7580993408473768,up=1.0507009873554805,cp=.3275911,hp=.254829592,dp=-.284496736,pp=1.421413741,fp=-1.453152027,mp=1.061405429;function gp(...t){ws().getBool("IS_TEST")||console.warn(...t)}function bp(...t){ws().getBool("IS_TEST")||console.log(...t)}function yp(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function xp(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function wp(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function vp(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function kp(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Ip(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function $p(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function Cp(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function Np(t,e,n=0){let r=[];if("number"==typeof e)Br(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{Br(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}Br(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}function Sp(t,e){let n,r=!1;for(t<=Yd?(n=t,r=!0):n=ls(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=ls(t,n+1);return n}function Ep(t,e,n){const r=[],s=t.length;for(let i=0;i<s;i++)i!==e?r.push(t[i]):r.push(n);return r}function Ap(t,e,n,r){const s=e.shape.length,i=t.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const a=t.shape[n],o=[];let l=1,u=1,c=1;for(let e=0;e<r;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=r;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=r;t<s;t++)o.push(e.shape[t]);for(let e=n+1;e<i;e++)o.push(t.shape[e]),c*=t.shape[e];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function Tp(t){try{return t.map((t=>To(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Rp(t){return t.map((t=>Ao(t)))}function Fp(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=Zl(t,"int32"),s=Zl([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=r.indexToLoc(n[e]),a=e*t.length;s.values.set(i,a)}return s.toTensor()}const _p={kernelName:Cs,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(t,Zh(Jl(n,"float32"),-1))}}},Dp={kernelName:Ns,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=rh(Jl(n,"float32")),r=Rh(zc(_u(1),e));return ih(xc(t,r))}}}},Mp={kernelName:Ss,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Rh(zc(rh(Jl(n,"float32")),1));return xc(t,e)}}}},Op={kernelName:Es,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ic(n.shape,r.shape);return{a:()=>{let e=t;const r=kc(n.shape,s);return r.length>0&&(e=Pc(e,r)),Qu(e,n.shape)},b:()=>{let e=t;const n=kc(r.shape,s);return n.length>0&&(e=Pc(e,n)),Qu(e,r.shape)}}}},Lp={kernelName:As,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},zp={kernelName:Fs,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bh(n)}}},Pp={kernelName:_s,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bh(n)}}},Bp={kernelName:Ds,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xc(t,Rh(zc(_u(1),rh(Jl(n,"float32")))))}}},Wp={kernelName:Ms,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Rh(Ou(_u(1),rh(Jl(n,"float32"))));return xc(t,e)}}}},Vp={kernelName:zs,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ic(n.shape,r.shape);return{a:()=>{const e=Ou(rh(n),rh(r));let i=Lc(t,xc(r,e));const a=kc(n.shape,s);return a.length>0&&(i=Pc(i,a)),Qu(i,n.shape)},b:()=>{const e=Ou(rh(n),rh(r));let i=ih(Lc(t,xc(n,e)));const a=kc(r.shape,s);return a.length>0&&(i=Pc(i,a)),Qu(i,r.shape)}}}},Up={kernelName:Os,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xc(t,Ou(rh(Jl(n,"float32")),1))}}},Gp={kernelName:Ls,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xc(t,zc(_u(1),rh(Jl(n,"float32"))))}}},jp=yl({avgPool3dGrad_:function(t,e,n,r,s,i){const a=gl(t,"dy","avgPool3dGrad"),o=gl(e,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=Qu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Br(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Br(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=i&&Br(Hr(s),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:i},p=ll.runKernel(Vs,h,d);return c?Qu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Hp={kernelName:Ws,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>jp(t,r,s,i,a,o)}}},qp=yl({avgPoolGrad_:function(t,e,n,r,s){const i=gl(t,"dy","avgPoolGrad"),a=gl(e,"input","avgPoolGrad");Br(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=Qu(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Br(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Br(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=ll.runKernel(Bs,c,h);return u?Qu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Kp={kernelName:Ps,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:a}=n;return{x:()=>qp(t,r,s,i,a)}}},Xp={kernelName:Us,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Vc(t,s,!1,!1),b:()=>Vc(t,r,!0,!1)}:i&&!a?{a:()=>Vc(s,t,!1,!0),b:()=>Vc(r,t,!1,!1)}:{a:()=>Vc(s,t,!0,!0),b:()=>Vc(t,r,!0,!0)}:{a:()=>Vc(t,s,!1,!0),b:()=>Vc(r,t,!0,!1)}}},Yp=yl({spaceToBatchND_:function(t,e,n){const r=gl(t,"x","spaceToBatchND");Br(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),Br(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),Br(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},i={blockShape:e,paddings:n};return ll.runKernel(Ka,s,i)}}),Zp={kernelName:Gs,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Yp(t,r,s)}}},Jp={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let t=s.length-1;t>=0;t--)if(s[t]===i[t])a[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>Pc(t,o,!0)}}},Qp={kernelName:Hs,gradFunc:t=>({x:()=>t.clone()})},tf={kernelName:qs,gradFunc:t=>({x:()=>Bh(t)})},ef={kernelName:Ks,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>Ph(Wc(Fc(r,s),kd(r,i)),t,Bh(t))}}},nf={kernelName:Ys,inputsToSave:["x"],gradFunc:_p.gradFunc},rf={kernelName:Zs,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,i=Zr(s,e[0].shape)[0],a=r.map((t=>t[i]));return Th(t,a,i).map((t=>()=>t))}},sf={kernelName:Js,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return Br(Yu(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>fc(r.shape,t,s,a,o,l),filter:()=>Xh(r,t,s.shape,a,o,l)}}},af={kernelName:ti,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>dc(t,s,i,a,o,1,l),filter:()=>Xh(t,r,s.shape,i,a,o,l)}}},of=yl({conv3DBackpropFilter_:function(t,e,n,r,s){let i=t;4===t.rank&&(i=Qu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=Qu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),Br(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),Br(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),Br(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Br(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),Br(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:r,pad:s,filterShape:n};return ll.runKernel(ni,o,l)}}),lf=yl({conv3DBackpropInput_:function(t,e,n,r,s){Br(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=Qu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];Br(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),Br(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),Br(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Br(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Br(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:s,strides:r,inputShape:i},d=ll.runKernel(ri,c,h);return o?Qu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),uf={kernelName:ei,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i}=n;Br(Yu(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=e;return{x:()=>lf(a.shape,t,o,s,i),filter:()=>of(a,t,o.shape,s,i)}}},cf=yl({sin_:function(t){const e={x:gl(t,"x","sin")};return ll.runKernel(Wa,e)}}),hf={kernelName:si,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(ih(cf(Jl(n,"float32"))),t)}}},df=yl({sinh_:function(t){const e={x:gl(t,"x","sinh")};return ll.runKernel(Va,e)}}),pf={kernelName:ii,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(df(Jl(n,"float32")),t)}}},ff=yl({cumsum_:function(t,e=0,n=!1,r=!1){const s={x:gl(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:r};return ll.runKernel(ai,s,i)}}),mf={kernelName:ai,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const e=th([s],r.rank);let n=ff(t,s,i,!a);return null!=e&&(n=Wh(n,e)),n}}}},gf={kernelName:ci,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;Br(Yu(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return Br(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Br(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Br(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Br(Zu(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=a&&Br(Hr(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`)),{x:()=>sd(l.shape,t,u,s,i,r,a),filter:()=>rd(l,t,u.shape,s,i,r,a)}}},bf={kernelName:fi,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,i={x:r,filter:s,dy:t},a={x:r,filter:s,dy:t};return{x:()=>ll.runKernel(mi,i,n),filter:()=>ll.runKernel(gi,a,n)}}},yf={kernelName:yi,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>ll.runKernel(xi,r)}}},xf={kernelName:wi,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Lc(Mc(ih(rh(n))),2/Math.sqrt(Math.PI));return{x:()=>Lc(t,r)}}},wf={kernelName:ki,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(t,n)}}},vf={kernelName:Ii,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Qu(t,n.shape)}}},kf={kernelName:$i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(t,Mc(n))}}},If={kernelName:Ei,gradFunc:t=>({x:()=>Bh(t)})},$f={kernelName:Ai,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ic(n.shape,r.shape);return{a:()=>{const e=xc(t,Jl(r,"float32")),i=kc(n.shape,s);return i.length>0?Qu(Pc(e,i),n.shape):e},b:()=>{let e=Lc(t,Jl(n,"float32"));const i=kc(r.shape,s);i.length>0&&(e=Qu(Pc(e,i),r.shape));const a=rh(r);return ih(xc(e,Jl(a,"float32")))}}}},Cf=yl({rsqrt_:function(t){const e={x:gl(t,"x","rsqrt")};return ll.runKernel(Oa,e)}}),Nf={kernelName:Ti,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=e,l=null==o?_u(1):o,u=kc(i.shape,s.shape),c=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=zc(s,i),d=Lc(t,l),p=Cf(Ou(a,_u(r))),f=Lc(Lc(Lc(p,p),p),_u(-.5));return{x:()=>1===i.rank?Qu(Lc(Lc(t,Nc(Qu(p,[1,1,1,i.shape[0]]),c)),l),s.shape):Qu(Lc(Lc(t,p),l),s.shape),mean:()=>{let t=Lc(Lc(p,_u(-1)),d);return 1===i.rank&&(t=Pc(t,u)),Qu(t,i.shape)},variance:()=>{let t=Lc(Lc(f,h),d);return 1===i.rank&&(t=Pc(t,u)),Qu(t,i.shape)},scale:()=>{const e=Lc(h,p);let n=Lc(t,e);return 1===i.rank&&(n=Pc(n,u)),Qu(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=Pc(e,u)),Qu(e,i.shape)}}}},Sf=yl({unsortedSegmentSum_:function(t,e,n){const r=gl(t,"x","unsortedSegmentSum"),s=gl(e,"segmentIds","unsortedSegmentSum","int32");Br(Hr(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return ll.runKernel(co,i,a)}}),Ef={kernelName:Ri,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:i}=n,a=Zr(i,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),c=u.length,h=Af(0,l),d=Af(l+1,l+1+c),p=Tf([o,[n],u]),f=Qu(t,p),m=Qu(s,[n]),g=Tf([[l],h,d]),b=Wh(f,g);let y=Sf(b,m,r.shape[a]);const x=eh(g);return y=Wh(y,x),y},indices:()=>s}}};function Af(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Tf(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Rf={kernelName:Di,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Bh(n),b:()=>Bh(r)}}},Ff={kernelName:Mi,gradFunc:t=>({x:()=>Jl(t,"float32")})},_f={kernelName:zi,gradFunc:t=>({x:()=>Bh(t)})},Df={kernelName:Pi,gradFunc:t=>({x:()=>Bh(t)})},Mf={kernelName:Bi,gradFunc:t=>({x:()=>Bh(t)})},Of={kernelName:Wi,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:s}=n,i=Rc(r,0);return{x:()=>Ph(i,t,Lc(t,s))}}},Lf={kernelName:Hi,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xc(t,Ou(n,1))}}},zf={kernelName:ji,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xc(t,Jl(n,"float32"))}}},Pf={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=Mc(r);return zc(t,Lc(Pc(t,s,!0),e))}}}},Bf=yl({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:a};return ll.runKernel(Zi,o,l)}}),Wf={kernelName:Yi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Bf(r,s,t,i,a,o,l)}}};function Vf(t,e,n,r){return e.rank<n.rank&&(e=Qu(e,Jc(e.shape,r))),t.rank<n.rank&&(t=Qu(t,Jc(t.shape,r))),{x:()=>Lc(t,Jl($c(n,e),t.dtype))}}const Uf={kernelName:Ji,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,i=e[0],a=Vf(t,e[1],i,Zr(s,i.shape));return{x:()=>a.x()}}},Gf=yl({less_:function(t,e){let n=gl(t,"a","less"),r=gl(e,"b","less");[n,r]=tl(n,r),Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(Vi,s)}}),jf={kernelName:Qi,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Lc(t,Jl(Fc(n,r),"float32")),b:()=>Lc(t,Jl(Gf(n,r),"float32"))}}},Hf=yl({maxPool3dGrad_:function(t,e,n,r,s,i,a){const o=gl(t,"dy","maxPool3dGrad"),l=gl(e,"input","maxPool3dGrad"),u=gl(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Qu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Qu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Br(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),Br(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Br(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=a&&Br(Hr(i),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const f={dy:c,input:h,output:d},m={filterSize:r,strides:s,pad:i,dimRoundingMode:a},g=ll.runKernel(ra,f,m);return p?Qu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),qf={kernelName:na,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>Hf(t,r,s,i,a,o,l)}}},Kf=yl({maxPoolGrad_:function(t,e,n,r,s,i,a){const o=gl(t,"dy","maxPoolGrad"),l=gl(e,"input","maxPoolGrad"),u=gl(n,"output","maxPoolGrad");Br(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Br(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Br(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=a&&Br(Hr(i),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return ll.runKernel(ea,c,h)}}),Xf={kernelName:ta,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Kf(t,r,s,i,a,o)}}},Yf={kernelName:ia,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n,i=Zr(s,r.shape),a=Gr(Zc(r.shape,i)[1]);return{x:()=>{const e=r.shape.slice();i.forEach((t=>{e[t]=1}));const n=Qu(t,e);return xc(Lc(n,uh(r.shape,"float32")),a)}}}},Zf={kernelName:aa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[i,a]=e,o=Vf(t,a,i,Zr(s,i.shape));return{x:()=>o.x()}}},Jf={kernelName:oa,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Lc(t,Jl(kd(n,r),"float32")),b:()=>Lc(t,Jl(Rc(n,r),"float32"))}}},Qf={kernelName:la,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>Ih(t,i,r.shape)}}},tm={kernelName:ua,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ic(n.shape,r.shape);return{a:()=>{const e=kc(n.shape,s);return e.length>0?Qu(Pc(t,e),n.shape):t},b:()=>{const e=Lc(t,ih(Ac(xc(n,r)))),i=kc(r.shape,s);return i.length>0?Qu(Pc(e,i),r.shape):e}}}},em={kernelName:ha,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ic(n.shape,r.shape);return{a:()=>{const e=Lc(t,Jl(r,"float32")),i=kc(n.shape,s);return i.length>0?Qu(Pc(e,i),n.shape):e},b:()=>{const e=Lc(t,Jl(n,"float32")),i=kc(r.shape,s);return i.length>0?Qu(Pc(e,i),r.shape):e}}}},nm={kernelName:da,gradFunc:t=>({x:()=>ih(t)})},rm={kernelName:ya,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>lh(n.shape,"float32")}}},sm={kernelName:ba,gradFunc:t=>({x:()=>Bh(t)})},im={kernelName:xa,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return Lh(t,r).map((t=>()=>t))}},am={kernelName:wa,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>Ih(t,i,r.shape)}}},om={kernelName:va,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,i=n,a=r,o=Ic(i.shape,a.shape);return{a:()=>{const e=Jl(a,"float32");let n=Lc(t,Lc(e,Cd(i,zc(e,_u(1)))));const r=kc(i.shape,o);return r.length>0&&(n=Pc(n,r)),Qu(n,i.shape)},b:()=>{const e=Rc(i,0),n=Ph(e,Dc(i),Bh(i));let r=Lc(t,Lc(s,n));const l=kc(a.shape,o);return l.length>0&&(r=Pc(r,l)),Qu(r,a.shape)}}}},lm={kernelName:ka,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=Rc(n,0);return{x:()=>Ph(s,t,Lc(t,r)),alpha:()=>{let e=Ph(s,Bh(t),Lc(t,n));const i=kc(r.shape,t.shape);return i.length>0&&(e=Pc(e,i)),Qu(e,r.shape)}}}},um={kernelName:bi,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ic(n.shape,r.shape);return{a:()=>{const e=xc(t,Jl(r,"float32")),i=kc(n.shape,s);return i.length>0?Qu(Pc(e,i),n.shape):e},b:()=>{let e=Lc(t,Jl(n,"float32"));const i=kc(r.shape,s);i.length>0&&(e=Qu(Pc(e,i),r.shape));const a=rh(r);return ih(xc(e,Jl(a,"float32")))}}}},cm={kernelName:Na,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xc(t,ih(rh(n)))}}},hm={kernelName:_a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Lc(kd(n,6),Zh(n));return{x:()=>Lc(t,Jl(r,"float32"))}}},dm={kernelName:Sa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(t,Jl(Zh(n),"float32"))}}},pm={kernelName:Ea,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qu(t,n.shape)}}},fm={kernelName:Ra,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>ll.runKernel(Fa,s,n)}}},mm={kernelName:Aa,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>ll.runKernel(Ta,s,n)}}},gm={kernelName:Da,gradFunc:(t,e,n)=>{const{dims:r}=n,s=Zr(r,t.shape);return{x:()=>xh(t,s)}}},bm={kernelName:Ma,gradFunc:t=>({x:()=>Bh(t)})},ym={kernelName:Oa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ih(xc(t,Lc(Cd(n,1.5),2)))}}},xm=yl({logicalNot_:function(t){const e={x:gl(t,"x","logicalNot","bool")};return ll.runKernel(Ki,e)}}),wm={kernelName:za,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Jl(Bh(n),"float32"),t:()=>Lc(t,Jl(n,t.dtype)),e:()=>Lc(t,Jl(xm(n),t.dtype))}}},vm={kernelName:Pa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Rc(n,_u(0)),r=_u(lp),s=_u(up),i=Lc(t,s),a=Lc(Lc(t,r),Mc(Jl(n,"float32")));return Ph(e,i,a)}}}},km={kernelName:Ga,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(t,Lc(n,zc(_u(1),n)))}}},Im={kernelName:Ua,gradFunc:t=>({x:()=>Bh(t)})},$m=yl({cos_:function(t){const e={x:gl(t,"x","cos")};return ll.runKernel(si,e)}}),Cm={kernelName:Wa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc($m(Jl(n,"float32")),t)}}},Nm=yl({cosh_:function(t){const e={x:gl(t,"x","cosh")};return ll.runKernel(ii,e)}}),Sm={kernelName:Va,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(Nm(Jl(n,"float32")),t)}}},Em={kernelName:Ba,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:i}=n,a=r.shape,[o,l]=vu(r,s,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>hh(t,u)}}},Am={kernelName:Ya,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,i=Lc(t,r);return{logits:()=>zc(i,Lc(Pc(i,[s],!0),r))}}},Tm={kernelName:ja,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(t,kh(n))}}},Rm=yl({batchToSpaceND_:function(t,e,n){const r=gl(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));Br(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),Br(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),Br(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const i={x:r},a={blockShape:e,crops:n};return ll.runKernel(Gs,i,a)}}),Fm={kernelName:Ka,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Rm(t,r,s)}}},_m={kernelName:Xa,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>oc(t,r)}}},Dm=[_p,Dp,Mp,Op,Lp,zp,Pp,Bp,Wp,Vp,Up,Gp,Hp,Kp,Xp,Zp,Jp,Qp,tf,ef,nf,rf,af,sf,uf,hf,pf,mf,gf,bf,um,yf,xf,wf,vf,kf,$f,If,Nf,Ef,Rf,Ff,_f,Df,Mf,Of,Lf,zf,Pf,Wf,Uf,Uf,jf,qf,Xf,Yf,Zf,Jf,Qf,tm,em,nm,rm,sm,im,am,am,om,lm,cm,hm,dm,pm,fm,mm,gm,bm,ym,wm,vm,km,Im,Cm,Sm,Em,Am,Tm,Fm,Fm,_m,_m,{kernelName:Ha,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xc(t,Lc(Rh(Jl(n,"float32")),2))}}},{kernelName:Za,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=_u(2);return{a:()=>Lc(t,Lc(s,zc(n,r))),b:()=>Lc(t,Lc(s,zc(r,n)))}}},{kernelName:Ja,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(t,Lc(Jl(n,"float32"),2))}}},{kernelName:po,gradFunc:t=>({x:()=>Bh(t)})},{kernelName:Qa,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ic(n.shape,r.shape);return{a:()=>{let e=t;const r=kc(n.shape,s);return r.length>0&&(e=Pc(e,r)),Qu(e,n.shape)},b:()=>{let e=t;const n=kc(r.shape,s);return n.length>0&&(e=Pc(e,n)),Qu(ih(e),r.shape)}}}},{kernelName:qa,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:i}=n;Zr(i,r.shape).forEach((t=>{s[t]=1}));const a=Qu(t,s),o=Lc(a,uh(r.shape,"float32"));return{x:()=>o}}},{kernelName:no,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xc(t,rh($m(n)))}}},{kernelName:ro,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lc(zc(_u(1),rh(n)),t)}}},{kernelName:so,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=Bh(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Ou(e,Ih(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=Ou(e,Ih(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)e=Ou(e,Ih(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)e=Ou(e,Ih(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:oo,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,i=eh(s);return{x:()=>Wh(t,i)}}},{kernelName:uo,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>_h(t,s)}}},{kernelName:co,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=jc(e,Bh(e)),r=Tc(t,n);let s=Fc(e,_u(0,"int32"));const i=r.rank-s.rank;for(let t=0;t<i;++t)s=Cc(s,t+1);s=Wc(s,uh(r.shape,"bool"));const a=Bh(r);return Ph(s,r,a)}(t,n)}}},{kernelName:ho,gradFunc:t=>({x:()=>Bh(t)})}];for(const t of Dm)$o(t);Go().prototype.abs=function(){return this.throwIfDisposed(),Mu(this)};const Mm=yl({acos_:function(t){const e={x:gl(t,"x","acos")};return ll.runKernel(Ns,e)}});Go().prototype.acos=function(){return this.throwIfDisposed(),Mm(this)};const Om=yl({acosh_:function(t){const e={x:gl(t,"x","acosh")};return ll.runKernel(Ss,e)}});Go().prototype.acosh=function(){return this.throwIfDisposed(),Om(this)},Go().prototype.add=function(t){return this.throwIfDisposed(),Ou(this,t)},Go().prototype.all=function(t,e){return this.throwIfDisposed(),Lu(this,t,e)},Go().prototype.any=function(t,e){return this.throwIfDisposed(),zu(this,t,e)},Go().prototype.argMax=function(t){return this.throwIfDisposed(),Pu(this,t)};const Lm=yl({argMin_:function(t,e=0){const n={x:gl(t,"x","argMin")},r={axis:e};return ll.runKernel(_s,n,r)}});Go().prototype.argMin=function(t){return this.throwIfDisposed(),Lm(this,t)},Go().prototype.asScalar=function(){return this.throwIfDisposed(),Br(1===this.size,(()=>"The array must have only 1 element.")),Qu(this,[])},Go().prototype.asType=function(t){return this.throwIfDisposed(),Jl(this,t)},Go().prototype.as1D=function(){return this.throwIfDisposed(),Qu(this,[this.size])},Go().prototype.as2D=function(t,e){return this.throwIfDisposed(),Qu(this,[t,e])},Go().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Qu(this,[t,e,n])},Go().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Qu(this,[t,e,n,r])},Go().prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),Qu(this,[t,e,n,r,s])};const zm=yl({asin_:function(t){const e={x:gl(t,"x","asin")};return ll.runKernel(Ds,e)}});Go().prototype.asin=function(){return this.throwIfDisposed(),zm(this)};const Pm=yl({asinh_:function(t){const e={x:gl(t,"x","asinh")};return ll.runKernel(Ms,e)}});Go().prototype.asinh=function(){return this.throwIfDisposed(),Pm(this)};const Bm=yl({atan_:function(t){const e={x:gl(t,"x","atan")};return ll.runKernel(Os,e)}});Go().prototype.atan=function(){return this.throwIfDisposed(),Bm(this)};const Wm=yl({atan2_:function(t,e){let n=gl(t,"a","atan2"),r=gl(e,"b","atan2");[n,r]=tl(n,r);const s={a:n,b:r};return ll.runKernel(zs,s)}});Go().prototype.atan2=function(t){return this.throwIfDisposed(),Wm(this,t)};const Vm=yl({atanh_:function(t){const e={x:gl(t,"x","atanh")};return ll.runKernel(Ls,e)}});Go().prototype.atanh=function(){return this.throwIfDisposed(),Vm(this)},Go().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),tc(this,t,e,n,r)},Go().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Rm(this,t,e)},Go().prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),nc(this,t,e,n,r,s)},Go().prototype.broadcastTo=function(t){return this.throwIfDisposed(),zh(this,t)},Go().prototype.cast=function(t){return this.throwIfDisposed(),Jl(this,t)};const Um=yl({ceil_:function(t){const e={x:gl(t,"x","ceil")};return ll.runKernel(qs,e)}});Go().prototype.ceil=function(){return this.throwIfDisposed(),Um(this)},Go().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ac(this,t,e)},Go().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Uo&&(t=[t]),oc([this,...t],e)},Go().prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),pc(this,t,e,n,r,s,i)},Go().prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),mc(this,t,e,n,r,s)},Go().prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),dc(this,t,e,n,r,s,i)},Go().prototype.cos=function(){return this.throwIfDisposed(),$m(this)},Go().prototype.cosh=function(){return this.throwIfDisposed(),Nm(this)},Go().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),ff(this,t,e,n)};const Gm=yl({depthToSpace_:function(t,e,n="NHWC"){const r=gl(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];Br(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),Br(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),Br(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:e,dataFormat:n};return ll.runKernel(ui,o,l)}});Go().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Gm(this,t,e)},Go().prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),bc(this,t,e,n,r,s,i)};const jm=yl({dilation2d_:function(t,e,n,r,s=[1,1],i="NHWC"){const a=gl(t,"x","dilation2d"),o=gl(e,"filter","dilation2d");Br(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),Br(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Br("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=Qu(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=ll.runKernel(fi,c,h);return u?Qu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Go().prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),jm(this,t,e,n,r,s)};const Hm=yl({divNoNan_:function(t,e){let n=gl(t,"a","div"),r=gl(e,"b","div");[n,r]=tl(n,r);const s=xc(n,r),i=Bh(s),a=$c(r,i);return Ph(a,i,s)}});Go().prototype.divNoNan=function(t){return this.throwIfDisposed(),Hm(this,t)},Go().prototype.div=function(t){return this.throwIfDisposed(),xc(this,t)};const qm=yl({dot_:function(t,e){const n=gl(t,"t1","dot"),r=gl(e,"t2","dot");Br(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(Br(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const t=Qu(n,[1,-1]),e=Qu(r,[-1,1]),s=Vc(t,e);return Qu(s,[])}if(1===n.rank&&2===r.rank){const t=Qu(n,[1,-1]),e=Qu(r,[r.shape[0],r.shape[1]]),s=Vc(t,e);return Qu(s,[s.size])}if(2===n.rank&&1===r.rank){const t=Qu(r,[-1,1]),e=Vc(n,t);return Qu(e,[e.size])}{const t=Qu(r,[r.shape[0],r.shape[1]]);return Vc(n,t)}}});Go().prototype.dot=function(t){return this.throwIfDisposed(),qm(this,t)},Go().prototype.elu=function(){return this.throwIfDisposed(),wc(this)},Go().prototype.equal=function(t){return this.throwIfDisposed(),$c(this,t)};const Km=yl({erf_:function(t){let e=gl(t,"x","erf");Br("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Jl(e,"float32"));const n={x:e};return ll.runKernel(wi,n)}});Go().prototype.erf=function(){return this.throwIfDisposed(),Km(this)},Go().prototype.exp=function(){return this.throwIfDisposed(),Mc(this)},Go().prototype.expandDims=function(t){return this.throwIfDisposed(),Cc(this,t)};const Xm=yl({expm1_:function(t){const e={x:gl(t,"x","expm1")};return ll.runKernel($i,e)}});Go().prototype.expm1=function(){return this.throwIfDisposed(),Xm(this)},Go().prototype.fft=function(){return this.throwIfDisposed(),jh(this)},Go().prototype.flatten=function(){return this.throwIfDisposed(),Qu(this,[this.size])},Go().prototype.floor=function(){return this.throwIfDisposed(),Ac(this)},Go().prototype.floorDiv=function(t){return this.throwIfDisposed(),yc(this,t)},Go().prototype.gather=function(t,e){return this.throwIfDisposed(),Tc(this,t,e)},Go().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Fc(this,t)},Go().prototype.greater=function(t){return this.throwIfDisposed(),Rc(this,t)},Go().prototype.ifft=function(){return this.throwIfDisposed(),qh(this)},Go().prototype.irfft=function(){return this.throwIfDisposed(),Kh(this)};const Ym=yl({isFinite_:function(t){const e={x:gl(t,"x","isFinite")};return ll.runKernel(zi,e)}});Go().prototype.isFinite=function(){return this.throwIfDisposed(),Ym(this)};const Zm=yl({isInf_:function(t){const e={x:gl(t,"x","isInf")};return ll.runKernel(Pi,e)}});Go().prototype.isInf=function(){return this.throwIfDisposed(),Zm(this)};const Jm=yl({isNaN_:function(t){const e={x:gl(t,"x","isNaN")};return ll.runKernel(Bi,e)}});Go().prototype.isNaN=function(){return this.throwIfDisposed(),Jm(this)},Go().prototype.leakyRelu=function(t){return this.throwIfDisposed(),_c(this,t)},Go().prototype.lessEqual=function(t){return this.throwIfDisposed(),kd(this,t)},Go().prototype.less=function(t){return this.throwIfDisposed(),Gf(this,t)};const Qm=yl({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const i=gl(t,"x","localResponseNormalization");Br(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),Br(Hr(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:r,beta:s},c=ll.runKernel(Yi,l,u);return o?Qu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Go().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Qm(this,t,e,n,r)};const tg=yl({logSigmoid_:function(t){const e=gl(t,"x","logSigmoid");return Fu((t=>({value:ih(Ah(ih(t))),gradFunc:e=>Lc(e,kh(ih(t)))})))(e)}});Go().prototype.logSigmoid=function(){return this.throwIfDisposed(),tg(this)},Go().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Bc(this,t)},Go().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Md(this,t,e)},Go().prototype.log=function(){return this.throwIfDisposed(),Dc(this)},Go().prototype.log1p=function(){return this.throwIfDisposed(),Dd(this)},Go().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Wc(this,t)},Go().prototype.logicalNot=function(){return this.throwIfDisposed(),xm(this)};const eg=yl({logicalOr_:function(t,e){const n=gl(t,"a","logicalOr","bool"),r=gl(e,"b","logicalOr","bool");Ic(n.shape,r.shape);const s={a:n,b:r};return ll.runKernel(Xi,s)}});Go().prototype.logicalOr=function(t){return this.throwIfDisposed(),eg(this,t)};const ng=yl({logicalXor_:function(t,e){const n=gl(t,"a","logicalXor","bool"),r=gl(e,"b","logicalXor","bool");return Ic(n.shape,r.shape),Wc(eg(t,e),xm(Wc(t,e)))}});Go().prototype.logicalXor=function(t){return this.throwIfDisposed(),ng(this,t)},Go().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Vc(this,t,e,n)},Go().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Uc(this,t,e,n,r)},Go().prototype.max=function(t,e){return this.throwIfDisposed(),Oc(this,t,e)},Go().prototype.maximum=function(t){return this.throwIfDisposed(),jc(this,t)},Go().prototype.mean=function(t,e){return this.throwIfDisposed(),Hc(this,t,e)},Go().prototype.min=function(t,e){return this.throwIfDisposed(),qc(this,t,e)},Go().prototype.minimum=function(t){return this.throwIfDisposed(),Kc(this,t)};const rg=yl({mirrorPad_:function(t,e,n){Br("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=gl(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Br(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)Br(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Br(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape ${r.shape}`));const i={paddings:e,mode:n},a={x:r};return ll.runKernel(la,a,i)}});Go().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),rg(this,t,e)};const sg=yl({mod_:function(t,e){let n=gl(t,"a","mod"),r=gl(e,"b","mod");[n,r]=tl(n,r);const s={a:n,b:r};return ll.runKernel(ua,s)}});Go().prototype.mod=function(t){return this.throwIfDisposed(),sg(this,t)},Go().prototype.mul=function(t){return this.throwIfDisposed(),Lc(this,t)},Go().prototype.neg=function(){return this.throwIfDisposed(),ih(this)},Go().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Sd(this,t,e,n)},Go().prototype.notEqual=function(t){return this.throwIfDisposed(),ah(this,t)},Go().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),oh(this,t,e,n)},Go().prototype.onesLike=function(){return this.throwIfDisposed(),ch(this)},Go().prototype.pad=function(t,e){return this.throwIfDisposed(),hh(this,t,e)};const ig=yl({pool_:function(t,e,n,r,s,i){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const a=gl(t,"x","maxPool");let o=a,l=!1;3===a.rank&&(l=!0,o=Qu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Br(Zu(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const u=Wu(o.shape,e,i,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),i=t.concat(r,s),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=s.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[r[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([u.inHeight,u.inWidth],c,h),m=d?r:"valid",g=d?o:Yp(o,c,p),b=("avg"===n?()=>tc(g,e,i,m):()=>Uc(g,e,i,m))(),y=d?b:Rm(b,c,f);return l?Qu(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});Go().prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),ig(this,t,e,n,r,s)},Go().prototype.pow=function(t){return this.throwIfDisposed(),Cd(this,t)},Go().prototype.prelu=function(t){return this.throwIfDisposed(),dh(this,t)};const ag=yl({prod_:function(t,e=null,n=!1){let r=gl(t,"x","prod");"bool"===r.dtype&&(r=Jl(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return ll.runKernel(Ia,s,i)}});Go().prototype.prod=function(t,e){return this.throwIfDisposed(),ag(this,t,e)};const og=yl({reciprocal_:function(t){const e={x:gl(t,"x","reciprocal")};return ll.runKernel(Na,e)}});Go().prototype.reciprocal=function(){return this.throwIfDisposed(),og(this)},Go().prototype.relu=function(){return this.throwIfDisposed(),yh(this)},Go().prototype.relu6=function(){return this.throwIfDisposed(),Yh(this)},Go().prototype.reshapeAs=function(t){return this.throwIfDisposed(),Qu(this,t.shape)},Go().prototype.reshape=function(t){return this.throwIfDisposed(),Qu(this,t)},Go().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),wd(this,t,e,n)},Go().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),vd(this,t,e,n)},Go().prototype.reverse=function(t){return this.throwIfDisposed(),xh(this,t)},Go().prototype.rfft=function(){return this.throwIfDisposed(),Hh(this)};const lg=yl({round_:function(t){const e={x:gl(t,"x","round")};return ll.runKernel(Ma,e)}});Go().prototype.round=function(){return this.throwIfDisposed(),lg(this)},Go().prototype.rsqrt=function(){return this.throwIfDisposed(),Cf(this)},Go().prototype.selu=function(){return this.throwIfDisposed(),wh(this)},Go().prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),vh(this,t,e,n,r,s,i)},Go().prototype.sigmoid=function(){return this.throwIfDisposed(),kh(this)};const ug=yl({sign_:function(t){const e={x:gl(t,"x","sign")};return ll.runKernel(Ua,e)}});Go().prototype.sign=function(){return this.throwIfDisposed(),ug(this)},Go().prototype.sin=function(){return this.throwIfDisposed(),cf(this)},Go().prototype.sinh=function(){return this.throwIfDisposed(),df(this)},Go().prototype.slice=function(t,e){return this.throwIfDisposed(),Ih(this,t,e)},Go().prototype.softmax=function(t){return this.throwIfDisposed(),Eh(this,t)},Go().prototype.softplus=function(){return this.throwIfDisposed(),Ah(this)},Go().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Yp(this,t,e)},Go().prototype.split=function(t,e){return this.throwIfDisposed(),Th(this,t,e)},Go().prototype.sqrt=function(){return this.throwIfDisposed(),Rh(this)},Go().prototype.square=function(){return this.throwIfDisposed(),rh(this)},Go().prototype.squaredDifference=function(t){return this.throwIfDisposed(),_d(this,t)},Go().prototype.squeeze=function(t){return this.throwIfDisposed(),Fh(this,t)},Go().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Uo?[this,t]:[this,...t];return _h(n,e)},Go().prototype.step=function(t){return this.throwIfDisposed(),Zh(this,t)};const cg=yl({stridedSlice_:function(t,e,n,r,s=0,i=0,a=0,o=0,l=0){const u={x:gl(t,"x","stridedSlice")},c={begin:e,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return ll.runKernel(eo,u,c)}});Go().prototype.stridedSlice=function(t,e,n,r,s,i,a,o){return this.throwIfDisposed(),cg(this,t,e,n,r,s,i,a,o)},Go().prototype.sub=function(t){return this.throwIfDisposed(),zc(this,t)},Go().prototype.sum=function(t,e){return this.throwIfDisposed(),Pc(this,t,e)};const hg=yl({tan_:function(t){const e={x:gl(t,"x","tan")};return ll.runKernel(no,e)}});Go().prototype.tan=function(){return this.throwIfDisposed(),hg(this)},Go().prototype.tanh=function(){return this.throwIfDisposed(),Dh(this)},Go().prototype.tile=function(t){return this.throwIfDisposed(),Nc(this,t)},Go().prototype.toBool=function(){return this.throwIfDisposed(),Jl(this,"bool")},Go().prototype.toFloat=function(){return this.throwIfDisposed(),Jl(this,"float32")},Go().prototype.toInt=function(){return this.throwIfDisposed(),Jl(this,"int32")};const dg=yl({topk_:function(t,e=1,n=!0){const r=gl(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},a={k:e,sorted:n},[o,l]=ll.runKernel(io,i,a);return{values:o,indices:l}}});Go().prototype.topk=function(t,e){return this.throwIfDisposed(),dg(this,t,e)},Go().prototype.transpose=function(t){return this.throwIfDisposed(),Wh(this,t)};const pg=yl({unique_:function(t,e=0){const n=gl(t,"x","unique","string_or_numeric");Br(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[i,a]=ll.runKernel(lo,r,s);return{values:i,indices:a}}});let fg;function mg(){return null==fg&&(fg=ll.backend.epsilon()),fg}Go().prototype.unique=function(t){return this.throwIfDisposed(),pg(this,t)},Go().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Sf(this,t,e)},Go().prototype.unstack=function(t){return this.throwIfDisposed(),Lh(this,t)},Go().prototype.where=function(t,e){return this.throwIfDisposed(),Ph(t,this,e)},Go().prototype.zerosLike=function(){return this.throwIfDisposed(),Bh(this)};class gg extends Error{constructor(t){super(t),Object.setPrototypeOf(this,gg.prototype)}}class bg extends Error{constructor(t){super(t),Object.setPrototypeOf(this,bg.prototype)}}class yg extends Error{constructor(t){super(t),Object.setPrototypeOf(this,yg.prototype)}}class xg extends Error{constructor(t){super(t),Object.setPrototypeOf(this,xg.prototype)}}class wg extends Error{constructor(t){super(t),Object.setPrototypeOf(this,wg.prototype)}}function vg(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function kg(t,e){if(!t)throw new wg(e)}function Ig(t,e){let n=0;for(const r of t)r===e&&n++;return n}function $g(t){return 1===t.length?t[0]:t}function Cg(t){return Array.isArray(t)?t:[t]}function Ng(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Sg(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let Eg={};function Ag(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Tg(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>Tg(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Tg(e):t[n]=e.value)}}}function Rg(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in Eg)i=Eg[s];else if(i=e[s],null==i)throw new yg(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new yg(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in Eg?[o,l]=Eg.className:a in e&&([o,l]=e[a]),null==o)throw new yg(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(Eg))t[e]=Eg[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},Eg);for(const t of Object.keys(n))Eg[t]=n[t];Tg(i.config);const r=l(o,i.config,n,s);return Eg=Object.assign({},e),r}{const t=Object.assign({},Eg);for(const t of Object.keys(n))Eg[t]=n[t];const e=new o(i.config);return Eg=Object.assign({},t),e}}}function Fg(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function _g(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Dg(t){if(null==t)throw new yg(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Mg(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new yg(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Og(t,e,n=0,r=1/0){return kg(n>=0),kg(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function Lg(t,e){Array.isArray(t)?(Br(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>Lg(t,`element ${n+1} of ${e}`)))):Br(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${zg(t)}.`))}function zg(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>zg(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Pg(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Bg(t,e){return Eu((()=>Rh(Pc(Lc(t,t),e,!0))))}class Wg extends Iu{getConfig(){return{}}}class Vg extends Wg{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Eu((()=>{const e=Bg(t,this.axis),n=ac(e,0,this.maxValue);return Lc(t,xc(n,Ou(mg(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Vg.className="MaxNorm",Cu(Vg);class Ug extends Wg{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Eu((()=>xc(t,Ou(mg(),Bg(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Ug.className="UnitNorm",Cu(Ug);class Gg extends Wg{apply(t){return yh(t)}}Gg.className="NonNeg",Cu(Gg);class jg extends Wg{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Eu((()=>{const e=Bg(t,this.axis),n=Ou(Lc(this.rate,ac(e,this.minValue,this.maxValue)),Lc(1-this.rate,e));return Lc(t,xc(n,Ou(mg(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}jg.className="MinMaxNorm",Cu(jg);const Hg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function qg(t){return Ag(t)}function Kg(t,e={}){return Rg(t,$u.getMap().classNameMap,e,"constraint")}function Xg(t){return null==t?null:"string"==typeof t?Kg({className:t in Hg?Hg[t]:t,config:{}}):t instanceof Wg?t:Kg(t)}const Yg=["channelsFirst","channelsLast"],Zg=["nearest","bilinear"],Jg=["valid","same","causal"],Qg=["max","avg"],tb=["sum","mul","concat","ave"],eb=new Map;function nb(t){Mg(Yg,"DataFormat",t)}function rb(t){Mg(Jg,"PaddingMode",t)}function sb(t){Mg(Qg,"PoolMode",t)}const ib=[];function ab(t,e){ib.push(t);try{const t=e();return ib.pop(),t}catch(t){throw ib.pop(),t}}function ob(t){if(!cb(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===ib.length?"":ib.join("/")+"/")+t}function lb(t){if(!cb(t))throw new Error("Not a valid tensor name: '"+t+"'");eb.has(t)||eb.set(t,0);const e=eb.get(t);if(eb.set(t,eb.get(t)+1),e>0){const n=`${t}_${e}`;return eb.set(n,1),n}return t}const ub=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function cb(t){return!!t.match(ub)}function hb(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function db(t){return Mh(t=Array.isArray(t)?new Float32Array(t):t)}function pb(t){return qc(db(t)).dataSync()[0]}function fb(t){return Oc(db(t)).dataSync()[0]}function mb(t,e){if(e<t)throw new yg(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function gb(t,e){return t.asType(e)}function bb(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function yb(t,e,n){return Eu((()=>{switch(t.rank){case 1:return $h(t,e,n);case 2:return Ch(t,[e,0],[n,t.shape[1]]);case 3:return Nh(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Sh(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Ih(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Ih(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new yg(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function xb(t,e,n){return Eu((()=>{switch(t.rank){case 1:return $h(t,e,n);case 2:return Ch(t,[0,e],[t.shape[0],n]);case 3:return Nh(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Sh(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new yg(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function wb(t,e,n,r){return Eu((()=>{switch(t.rank){case 1:return $h(t,e,n);case 2:switch(r){case 1:return yb(t,e,n);case 2:return xb(t,e,n);default:throw new yg(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return yb(t,e,n);case 2:return Nh(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return xb(t,e,n);default:throw new yg(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return yb(t,e,n);case 2:return Sh(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Sh(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return xb(t,e,n);default:throw new yg(`The axis is not within the rank of the tensor ${r}`)}default:throw new yg(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function vb(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),oc(t,e)}function kb(t,e){switch(t.rank){case 1:return lc([t,e]);case 2:return uc([t,e],0);case 3:return cc([t,e],0);case 4:return hc([t,e],0);default:throw new yg(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Ib(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new yg(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Nc(t,e)}function $b(t,e=0,n=1,r,s){return gh(t,e,n,r,s)}function Cb(t,e,n,r){if(t.rank<2||e.rank<2)throw new xg(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new xg(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return id({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Eb(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),i=s.pop();t=t.reshape([-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([l,-1]);const h=[...s,...u];return id({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Eb(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Nb(t,e,n){return Eu((()=>(e=Array.isArray(e)?Mh(e,"int32"):e.toInt(),Tc(t,e,n))))}function Sb(t){return Lc(t,t)}function Eb(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new yg(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new yg(`Unsupported input rank by biasAdd: ${e.rank}`)}function Ab(t,e,n){return Eu((()=>(null==n&&(n="channelsLast"),nb(n),t.add(Eb(t.rank,e,n)))))}function Tb(t,e,n,r){return Eu((()=>Vh(t,e,n,r)))}function Rb(t,e,n=!1){return n?t():e()}const Fb=["fanIn","fanOut","fanAvg"],_b=["normal","uniform","truncatedNormal"];class Db extends Iu{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Mb extends Db{apply(t,e){return lh(t,e)}}Mb.className="Zeros",Cu(Mb);class Ob extends Db{apply(t,e){return uh(t,e)}}Ob.className="Ones",Cu(Ob);class Lb extends Db{constructor(t){if(super(),"object"!=typeof t)throw new yg(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new yg(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Eu((()=>Lc(_u(this.value),uh(t,e))))}getConfig(){return{value:this.value}}}Lb.className="Constant",Cu(Lb);class zb extends Db{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return bh(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}zb.className="RandomUniform",Cu(zb);class Pb extends Db{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new xg(`randomNormal does not support dType ${e}.`);return $b(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Pb.className="RandomNormal",Cu(Pb);class Bb extends Db{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new xg(`truncatedNormal does not support dType ${e}.`);return Oh(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Bb.className="TruncatedNormal",Cu(Bb);class Wb extends Db{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Eu((()=>{if(2!==t.length||t[0]!==t[1])throw new yg("Identity matrix initializer can only be used for 2D square matrices.");return Lc(this.gain,Sc(t[0]))}))}getConfig(){return{gain:this.gain}}}Wb.className="Identity",Cu(Wb);class Vb extends Db{constructor(t){if(super(),t.scale<0)throw new yg(`scale must be a positive float. Got: ${t.scale}`);this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,function(t){Mg(Fb,"FanMode",t)}(this.mode),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Mg(_b,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(nb(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=hb(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=hb(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=hb(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new xg(`${this.getClassName()} does not support dType ${e}.`);return Oh(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return bh(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Vb.className="VarianceScaling",Cu(Vb);class Ub extends Vb{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Vb.className}}Ub.className="GlorotUniform",Cu(Ub);class Gb extends Vb{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Vb.className}}Gb.className="GlorotNormal",Cu(Gb);class jb extends Vb{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Vb.className}}jb.className="HeNormal",Cu(jb);class Hb extends Vb{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Vb.className}}Hb.className="HeUniform",Cu(Hb);class qb extends Vb{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Vb.className}}qb.className="LeCunNormal",Cu(qb);class Kb extends Vb{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Vb.className}}Kb.className="LeCunNormal",Cu(Kb);class Xb extends Db{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new xg("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Eu((()=>{if(t.length<2)throw new xg("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=$b(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Od.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Lc(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Xb.className="Orthogonal",Cu(Xb);const Yb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Zb(t,e={}){return Rg(t,$u.getMap().classNameMap,e,"initializer")}function Jb(t){return Ag(t)}function Qb(t){if("string"==typeof t){const e=t in Yb?Yb[t]:t;if("GlorotNormal"===e)return new Gb;if("GlorotUniform"===e)return new Ub;if("HeNormal"===e)return new jb;if("HeUniform"===e)return new Hb;if("LeCunNormal"===e)return new qb;if("LeCunUniform"===e)return new Kb;{const t={};return t.className=e,t.config={},Zb(t)}}return t instanceof Db?t:Zb(t)}let ty=0;function ey(){return ty++}const ny={};function ry(t=""){return t in ny||(ny[t]=0),ny[t]+=1,t+ny[t].toString()}function sy(t){return Array.isArray(t)&&Array.isArray(t[0])}function iy(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function ay(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new yg(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function oy(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new yg(`Expected exactly 1 Shape; got ${t.length}`)}return t}function ly(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class uy{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=ey(),n=null==n?"Variable":n,this.originalName=ob(n),this.name=lb(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return ll.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function cy(t){return t.map((t=>t.read()))}function hy(t){t.forEach((t=>{t[0].write(t[1])}))}class dy{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class py{constructor(t,e,n,r,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=ey(),null!=i&&(this.originalName=ob(i),this.name=lb(this.originalName)),this.rank=e.length}}let fy=0;class my{constructor(t,e){this.callArgs=e,this.id=fy++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let gy=0;class by extends Iu{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=gy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Ng(t)+"_"+ry(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new bg(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new yg(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return $g(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return $g(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new gg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new gg(`Layer ${this.name} is not connected, no input to return.`);return $g(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new gg(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new gg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return $g(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Cg(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Cg(this.inputSpec);if(t.length!==e.length)throw new yg(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new yg(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new yg(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new yg(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new yg(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],a=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new yg(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new yg(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Cg(t);let r=!0;for(const t of n)if(!(t instanceof py)){r=!1;break}let s=!0;for(const t of n)if(t instanceof py){s=!1;break}if(r===s)throw new yg("Arguments to apply() must be all SymbolicTensors or all Tensors");return ab(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Cg(t))e.push(n.shape);this.build($g(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Cg(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=$g(i),null!=this.activityRegularizer)throw new xg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=Cg(t);const e=[];for(const n of t)e.push(n.shape);return $g(e)}(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new py(i,n,this,Cg(t),e,this.name,r))):new py(i,r,this,Cg(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new xg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new gg(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new gg(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new bg(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ly(this.weights)}build(t){this.built=!0}getWeights(t=!1){return cy(t?this.trainableWeights:this.weights)}setWeights(t){Eu((()=>{const e=this.weights;if(e.length!==t.length)throw new yg(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=cy(e);for(let s=0;s<r.length;++s){const i=r[s],a=e[s],o=t[s];if(!jr(i.shape,o.shape))throw new yg(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}hy(n)}))}addWeight(t,e,n,r,s,i,a){if(-1!==this._addedWeightNames.indexOf(t))throw new yg(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Qb("zeros"));const o=r.apply(e,n),l=new uy(o,n,t,i,a);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Cg(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,i,a=null){const o=Cg(t);e=Cg(e),n=Cg(n),r=Cg(r),s=iy(s),i=iy(i);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new my({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function yy(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=yy(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class xy extends by{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:ry("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new yg("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new yg("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new yg("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new py(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new my({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new yg(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function wy(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const i=t[s];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Au(r)}}function vy(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var ky;xy.className="InputLayer",Cu(xy),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(ky||(ky={}));class Iy{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class $y{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Cy extends Iy{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=Eu((()=>Ou(this.totals[t],Lc(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Eu((()=>{const n=Lc(xc(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Tu(e[t])})))}}class Ny extends Iy{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const a=s[i];t.push(a.data()),e.push(r),n.push(i)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class Sy extends Iy{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");is(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=Eo();return(...s)=>{const i=Eo();return i-r<e||(r=i,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await wy(n),r.push(this.yield(t,e,n))),r.push(qd()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await wy(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await wy(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(qd()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await wy(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await wy(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(qd()):is(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await wy(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await wy(t),await this.trainEnd(t))}}function Ey(t,e){return null==t&&(t={}),t instanceof Iy?[t]:Array.isArray(t)&&t[0]instanceof Iy?t:Cg(t).map((t=>new Sy(t,e)))}class Ay{constructor(){}static registerCallbackConstructor(t,e){Br(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Ay.checkForDuplicate(e),null==Ay.constructors[t]&&(Ay.constructors[t]=[]),Ay.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Ay.constructors)Ay.constructors[+e].forEach((e=>{if(e===t)throw new yg("Duplicate callback constructor.")}))}static clear(){Ay.constructors={}}static createCallbacks(t){const e=[];for(const n in Ay.constructors){const r=+n;t>=r&&e.push(...Ay.constructors[r])}return e.map((t=>new t))}}function Ty(t,e,n,r,s,i,a,o,l){const u=new Ny,c=[new Cy,...Ay.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new $y(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Ry(t,e={},n=!1){return Rg(t,$u.getMap().classNameMap,e,"layer",n)}function Fy(t,e){return Eu((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Pc(Sb(t),e,!0),r=Ec(n.shape,mg()),s=Rh(jc(n,r));return xc(t,s)}))}function _y(t,e){return Eu((()=>Hc(Sb(zc(e,t)),-1)))}function Dy(t,e){return Eu((()=>Hc(Mu(zc(e,t)),-1)))}function My(t,e){return Eu((()=>{const n=zc(t,e),r=ac(Mu(t),mg(),Number.MAX_VALUE),s=Mu(xc(n,r));return Lc(100,Hc(s,-1))}))}function Oy(t,e,n=!1){return Eu((()=>{if(n)e=Eh(e);else{const t=Pc(e,e.shape.length-1,!0);e=xc(e,t)}return e=ac(e,mg(),1-mg()),ih(Pc(Lc(t.toFloat(),Dc(e)),e.shape.length-1))}))}function Ly(t,e,n=!1){return Eu((()=>{const r=Ac(function(t){const e=[hb(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=ac(e,mg(),1-mg())).shape;return Oy(oh(r,s[s.length-1]).reshape(s),e,n)}))}function zy(t,e){return Eu((()=>{let n;return n=ac(e,mg(),1-mg()),n=Dc(xc(n,zc(1,n))),Hc(function(t,e){if(!jr(t.shape,e.shape))throw new yg(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Eu((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function Py(t,e){return Eu((()=>{const n=Fy(t,-1),r=Fy(e,-1),s=Lc(n,r);return ih(Pc(s,-1))}))}Ay.constructors={};const By={meanSquaredError:_y,meanAbsoluteError:Dy,meanAbsolutePercentageError:My,meanSquaredLogarithmicError:function(t,e){return Eu((()=>{const n=ac(e,mg(),Number.MAX_VALUE),r=Dc(Ou(1,n)),s=ac(t,mg(),Number.MAX_VALUE),i=Dc(Ou(1,s));return Hc(Sb(zc(r,i)),-1)}))},squaredHinge:function(t,e){return Eu((()=>{const n=jc(0,zc(1,Lc(t,e)));return Hc(Sb(n),-1)}))},hinge:function(t,e){return Eu((()=>{const n=jc(0,zc(1,Lc(t,e)));return Hc(n,-1)}))},categoricalHinge:function(t,e){return Eu((()=>{const n=Pc(Lc(t,e),-1),r=Oc(Lc(zc(1,t),e),-1);return jc(0,Ou(1,zc(r,n)))}))},logcosh:function(t,e){return Eu((()=>{const n=Math.log(2),r=zc(e,t),s=zc(Ou(r,Ah(Lc(-2,r))),n);return Hc(s,-1)}))},categoricalCrossentropy:Oy,sparseCategoricalCrossentropy:Ly,binaryCrossentropy:zy,kullbackLeiblerDivergence:function(t,e){return Eu((()=>{const n=ac(t,mg(),1),r=ac(e,mg(),1);return Pc(Lc(t,Dc(xc(n,r))),-1)}))},poisson:function(t,e){return Eu((()=>{const n=Dc(Ou(mg(),e));return Hc(zc(e,Lc(t,n)),-1)}))},cosineProximity:Py};function Wy(t){if("string"==typeof t){if(t in By)return By[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new yg(e)}return t}function Vy(t,e){return Eu((()=>{const n=Lc(.5,ch(e)),r=gb(Rc(e,n),t.dtype);return Hc($c(t,r),-1)}))}function Uy(t,e){return Eu((()=>gb($c(Pu(t,-1),Pu(e,-1)),"float32")))}function Gy(t,e){return zy(t,e)}function jy(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),$c(t,e).asType("float32")}const Hy=Oy,qy=Ly,Ky={binaryAccuracy:Vy,categoricalAccuracy:Uy,precision:function(t,e){return Eu((()=>{const n=function(t,e){return Eu((()=>Wc(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),r=function(t,e){return Eu((()=>Wc(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),s=n.add(r);return Ph(Rc(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:Hy,sparseCategoricalCrossentropy:qy,mse:_y,MSE:_y,mae:Dy,MAE:Dy,mape:My,MAPE:My,cosine:Py};function Xy(t){if("string"==typeof t&&t in Ky)return Ky[t];if("string"!=typeof t&&null!=t)return t;throw new yg(`Unknown metric ${t}`)}function Yy(t){if(kg(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(By))if(By[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Ky))if(Ky[n]===t){e=n;break}return void 0!==e?e:t.name}}function Zy(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Jy(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Jy(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Jy(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Jy(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Qy(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function tx(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Qy([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function ex(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const i=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];i.push(`${n}[${r}][${s}]`)}const a=t.name,o=t.getClassName(),l=0===i.length?"":i[0];Qy([`${a} (${o})`,s,t.countParams().toString(),l],e,r);for(let t=1;t<i.length;++t)Qy(["","","",i[t]],e,r)}function nx(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function rx(t,e){if(null===t)return null;if("string"==typeof t)return Sg(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];nx(e,s,r)?n.push(r):n.push(rx(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Sg(n);e[t]=rx(r,t)}}return e}}function sx(t,e){if(null==t)return null;if("string"==typeof t)return Ng(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];nx(e,s,r)?n.push(r):n.push(sx(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[Ng(n)]="name"!==n&&"className"!==n||"string"!=typeof r?sx(r,n):r}return e}}class ix{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof ix)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new yg(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Jl(e,t.dtype)}catch(n){throw new yg(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof py){if(null==this.id2Value[t.id])throw new yg(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new yg(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof py){if(null==this.id2Value[t.id])throw new yg(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new yg(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Au(this.id2Mask)}}const ax={},ox={};function lx(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,d;if(null==ax[c]){const t=function(t,e){Br(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=cx(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of t){const{sorted:t,recipientMap:a}=cx(i,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:ux(r)}}(a,e);h=t.sorted,d=t.recipientCounts,ax[c]=h,ox[c]=d}h=ax[c],d={},s||Object.assign(d,ox[c]);const p=new ix(e);for(let t=0;t<h.length;++t){if(null!=r){const t=Su().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const i=h[t],a=i.sourceLayer;if(a instanceof xy)continue;const u=[],c=[],f=[];let m=!1;for(const t of i.inputs){const n=p.getValue(t),r=p.getMask(t);u.push(n),c.push(r),null!=r&&(m=!0),s||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Cg(a.apply(u,n));let b=null;a.supportsMasking&&(b=a.computeMask(u,c));const y=hx(i),x=Array.isArray(y)?y:[y];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],g[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}s||Au(f)}return p.disposeMasks(),i?l:l[0]}function ux(t){const e={};for(const n in t)e[n]=t[n].size;return e}function cx(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:r,recipientMap:s}}function hx(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class dx extends by{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=ry(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],_g(this.inputs).length!==this.inputs.length)throw new yg(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);_g(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;kg(0===n,"input layer has >1 nodes"),kg(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof xy))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},i={},a=[],o=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new bg(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(dx.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const r=u.inputTensors[t],s=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(r,e,n,s,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=a.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];i=Math.max(i,a),r[t.outboundLayer.id]=i,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],a=t.nodeIndices[r],o=s.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(s[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(Fg);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],r=i[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof dx&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(Fg);const f=this.inputs.slice(),m=[];for(const t of p)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new bg(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new bg(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new my({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new yg("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new yg(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let i=r;if(null==n[r]){const t=r.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])s.push([n[i],t[r]]);else if(e)throw new yg(`Provided weight data has no target variable: ${r}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new yg(`${t.length} of ${r} weights are not set: ${t}`)}hy(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.3.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=sx(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Eu((()=>{t=Cg(t);const n=new ix;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return lx(this.outputs,n,e)}))}computeMask(t,e){return Eu((()=>{let n;return t=Cg(t),n=null==e?vg(null,t.length):Cg(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=iy(t);if(e.length!==this.inputLayers.length)throw new yg(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Fg);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${s.name}_${i}_${a}`];r.push(o)}const s=iy(e.computeOutputShape($g(r))),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${i}_${t}`]=s[t]}}const s=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;i.push(s)}for(let t=0;t<i.length;t++){const e=i[t];kg(e in n),s.push(n[e])}return $g(s)}runInternalGraph(t,e){null==e&&(e=vg(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=t[r],a=e[r];n[s.id]=[i,a]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Fg);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=Cg(e.call(t,u)),l=Cg(e.computeMask(t,n)),r=[t],a=[n]}else r=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=Cg(e.call(r,u)),l=Cg(e.computeMask(r,a));if(e.activityRegularizer)throw new xg("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],i=l[t];n[e.id]=[r,i]}}}}const s=[],i=[],a=[];for(const t of this.outputs){kg(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];a.push(e.shape),s.push(e),i.push(r)}return[s,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof dx?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=dx.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new yg(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new yg("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new yg(`No such layer: ${t}`)}calculateLosses(){return Eu((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=dx.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=dx.nodeKey(t,n);let a={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let l=e[dx.nodeKey(s,i)];null==l&&(l=0),t.push([s.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=r,a.config=s,a.inboundNodes=i,n.push(a)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],i=dx.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,a,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],i=dx.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,a,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let r;for(const i of e){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(t,e);const c=s[o];if(c.inboundNodes.length<=l)return void a(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply($g(n),r)}function l(t){const n=t.name,i=Ry(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new yg(`Corrupted configuration, expected array for nodeData: ${t}`);a(i,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!Dg(i);)for(const t of c){const e=s[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];kg(e in s);const i=s[e].inboundNodes[n].outputTensors;h.push(i[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];kg(e in s);const i=s[e].inboundNodes[n].outputTensors;d.push(i[r])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new yg("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Eu((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function px(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function fx(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Eu((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Au(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),Mh(s,"float32")}return null}function mx(t,e){return Lc(t,e)}function gx(t,e){let n,r;const s=e;n=s.xs,r=s.ys,Br(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const i=bx("input",t.inputNames,n),a=bx("output",t.outputNames,r),o=i[0].shape[0];Br(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),Br(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<i.length;e++)Br(i[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)Br(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:i,ys:a}}function bx(t,e,n){if(n instanceof Uo)return[n];if(Array.isArray(n))return Br(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new yg(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function yx(t){return"function"==typeof t.iterator}function xx(t){Br(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function wx(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>yb(t,e,n-e))):yb(t,e,n-e)}function vx(t,e){return Eu((()=>null==t?null:Array.isArray(t)?t.map((t=>vx(t,e))):Nb(t,"int32"===e.dtype?e:e.toInt())))}function kx(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function Ix(t){const e=[];t instanceof Uo&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(bb(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function $x(t,e){if(null==t)return;const n=[];if(e instanceof Uo)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof Uo)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function Cx(t){return Array.isArray(t)}function Nx(t){return!function(t){return t instanceof Uo}(t)&&!Cx(t)}function Sx(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Cx(t)&&t.length>0)e=!0;else if(Nx(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new yg(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(Nx(t)){t=t,i=[];for(const n of e){if(null==t[n])throw new yg(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(Cx(t)){if((t=t).length!==e.length)throw new yg(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(t=t,e.length>1)throw new yg(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=Ix(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new yg(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l>=0&&o!==l)throw new yg(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${a.shape}].`)}}return i}function Ex(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new yg(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new yg(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new yg(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new yg(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class Ax extends dx{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new yg("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let a;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),Qy(i,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?tx(o[t],n,r):ex(o[t],n,a,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?ly(t.collectedTrainableWeights):ly(t.trainableWeights),e}(t),u=ly(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>jd.adagrad(.01),Adadelta:()=>jd.adadelta(1,.95,mg()),Adam:()=>jd.adam(.001,.9,.999,mg()),Adamax:()=>jd.adamax(.002,.9,.999,mg(),0),RMSProp:()=>jd.rmsprop(.001,.9,0,mg()),SGD:()=>jd.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new yg(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Du))throw new yg("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new yg(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Wy(t)))}else{const n=Wy(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new yg(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Wy(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ab("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};ab("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===zy?-1!==["accuracy","acc"].indexOf(a)?r=Vy:-1!==["crossentropy","ce"].indexOf(a)&&(r=Gy):this.lossFunctions[t]===Ly?-1!==["accuracy","acc"].indexOf(a)?r=jy:-1!==["crossentropy","ce"].indexOf(a)&&(r=qy):-1!==["accuracy","acc"].indexOf(a)?r=Uy:-1!==["crossentropy","ce"].indexOf(a)&&(r=Hy),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else{const t=Xy(a);i=t,n=""+Yy(a)}let e;ab(n,(()=>{e=i})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;xx(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const i=s[0].concat(s[1]);this.makeTestFunction();const a=this.testFunction;return $g(this.testLoop(a,i,r,n.verbose,n.steps))}finally{$x(s[0],t),$x(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new xg("Verbose mode is not implemented yet.");Br(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await a.next();if(i=Eu((()=>{if(e.value){const{xs:n,ys:r}=gx(t,e.value),a=n.concat(r),u=Eu((()=>s(a)));if(Au(a),0===l)for(let t=0;t<u.length;++t)i.push(_u(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=Eu((()=>Ou(i[t],Lc(c,e)))),l>0&&Au(n)}Au(u),o+=c,++l}return i})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=xc(i[t],o),Au(e)}return $g(i)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new yg(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new yg(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new yg("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new ix;if(t instanceof Uo&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new yg(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new yg(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const a=lx(s,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=vg(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((t=>t.name));for(let r=0;r<t.length;++r){const a=i.indexOf(t[r]);if(-1!==a&&(e[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new yg(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Eu((()=>{const r=this.checkNumSamples(t);if(n)throw new xg("Verbose predictLoop() is not implemented yet.");const s=kx(r,e),i=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)Eu((()=>{const n=s[e][0],r=s[e][1],i=wx(t,n,r),a=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)a.push({key:this.inputs[t],value:i[t]});else a.push({key:this.inputs[0],value:i});const o=new ix(a);return lx(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return $g(i.map((t=>oc(t,0))))}))}predict(t,e={}){const n=Ix(t);Ex(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return xx(r),this.predictLoop(n,r)}finally{$x(n,t)}}predictOnBatch(t){Ex(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new bg("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Ly?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=_g(t.map((t=>t.shape[0])));r.sort();const s=_g(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new yg(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new yg(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!jr(r,s))throw new yg(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=Sx(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Sx(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[_y,zy,Oy];for(let s=0;s<t.length;++s){const i=t[s],a=e[s],o=n[s];if(null!=a){if(a===Oy&&1===i.shape[i.shape.length-1])throw new yg(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new yg(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new yg(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=px(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await fx(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,r=0,s){return Eu((()=>{const i=this.checkNumSamples(e,n,s,"steps"),a=[];if(r>0)throw new xg("Verbose mode is not implemented yet.");if(null!=s)throw new xg("steps mode in testLoop() is not implemented yet");{const r=kx(i,n),s=Mh(mb(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=yb(s,i,o-i),u=vx(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(_u(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=Ou(a[t],Lc(o-i,e))}}for(let t=0;t<a.length;++t)a[t]=xc(a[t],i)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;Ig(t,r)>1&&(s+=`_${Ig(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new ix(t),o=lx(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=mx(n,s[t]));const i=Hc(n);e.push(i),l=0===t?n:Ou(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=Hc(e(r[s],o[s]))}Tu(n),i.push(n)}return l=Hc(l),this.calculateLosses().forEach((t=>{l=Ou(l,t)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>Eu((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const a=new ix(i),o=lx(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=Hc(r(s[t],o[t]));n=0===t?i:Ou(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=Hc(n(s[r],o[r]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,a,o,l,u,c;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;xx(h);const d=!1,p=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,d,h);s=p[0],i=p[1],c=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new xg("validationData including sample weights is not supported yet."):new yg(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);a=r.validationData[0],o=r.validationData[1];const e=!0,n=await t.standardizeUserData(a,o,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=wx(s,t,e),s=wx(s,0,t),u=wx(i,t,e),i=wx(i,0,t),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);const g=s.concat(i).concat(c);t.checkTrainableWeightsConsistency();const b=t.makeTrainFunction(),y=t.getDedupedMetricsNames();let x,w;m?(t.makeTestFunction(),x=t.testFunction,w=y.slice().concat(y.map((t=>"val_"+t)))):(x=null,f=[],w=y.slice());const v=Ey(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,i,a,o,l,u,c,h,d,p,f){null==s&&(s=32),null==i&&(i=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=t.checkNumSamples(n,s,p,"steps_per_epoch");let b;null!=g&&(b=mb(0,g)),null==a&&(a=1);const{callbackList:y,history:x}=Ty(o,a,i,d,g,p,s,m,h);y.setModel(t),t.history=x,await y.onTrainBegin(),t.stopTraining_=!1;for(let a=d;a<i;++a){await y.onEpochBegin(a);const i={};{if("batch"===c)throw new xg("batch shuffling is not implemneted yet");c&&Lr(b);const a=Mh(b),o=kx(g,s);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),Eu((()=>{const d=o[c][0],p=o[c][1],f=yb(a,d,p-d);h.batch=c,h.size=p-d;const g=vx(n,f),b=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=b[t];h[e]=n,Tu(n)}if(c===o.length-1&&m){const e=t.testLoop(l,u,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];Tu(s),i["val_"+n]=s}}})),await y.onBatchEnd(c,h),vy(h),t.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,i),t.stopTraining_)break}return await y.onTrainEnd(),await t.history.syncData(),t.history}(t,b,g,y,h,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch,null)}finally{t.isTraining=!1,$x(s,e),$x(i,n),$x(l,a),$x(u,o),null!=c&&Au(c)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(Br(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Br(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Br(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Br(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Br(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(yx(n.validationData))Br(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new xg("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=Ey(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Ty(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await m.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=gx(t,e.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const e=px(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await fx(s[t],null,e[t]))}const u=r.concat(s).concat(a),p=o(u);Au(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];i[e]=n,Tu(n)}await d.onBatchEnd(h,i),vy(i),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=yx(n.validationData)?Cg(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Cg(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),a=[];for(const t of i){const e=await t.data();a.push(e[0])}return Au(i),$g(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Su().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Su().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Ng(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Ng(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Ng(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ng(Yy(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Ng(Yy(t))));{const t={};for(const e in this.metrics)t[e]=Ng(Yy(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Ry(rx(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Sg(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Sg(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Sg(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>Sg(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Sg(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,Sl.getSaveHandlers(n));if(0===e.length)throw new yg(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new yg(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new yg("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await vl(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.3.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await vl(await this.optimizer.getWeights(),t);r.specs.push(...n),r.data=Cl([r.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Zy(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)}setUserDefinedMetadata(t){Zy(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ax.className="Model",Cu(Ax);class Tx extends Ax{}Tx.className="Functional",Cu(Tx);class Rx extends Ax{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:ry("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new yg(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Rx||t instanceof Ax;let n;if(e){if(n=t,1!==n.outputs.length)throw new yg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new yg("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new yg("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new yg("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new xy({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new yg(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new yg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=yy(this.outputs[0])}this.inboundNodes=[],new my({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:vg(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(oy(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ax({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new bg("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new bg("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new bg("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new bg("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new yg("Legacy serialization format not supported yet.");s=e}else Br(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof Rx))throw new xg(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of s){const e=Ry(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new yg("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new yg("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Rx.className="Sequential",Cu(Rx);class Fx extends Iu{getConfig(){return{}}}class _x extends Fx{apply(t,e=1){return function(t,e=1){if(1!==e)throw new xg(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return wc(t)}(t,e)}}_x.className="elu",Cu(_x);class Dx extends Fx{apply(t){return wh(t)}}Dx.className="selu",Cu(Dx);class Mx extends Fx{apply(t){return yh(t)}}Mx.className="relu",Cu(Mx);class Ox extends Fx{apply(t){return Eu((()=>Kc(6,yh(t))))}}Ox.className="relu6",Cu(Ox);class Lx extends Fx{apply(t){return t}}Lx.className="linear",Cu(Lx);class zx extends Fx{apply(t){return kh(t)}}zx.className="sigmoid",Cu(zx);class Px extends Fx{apply(t){return function(t){return Eu((()=>{const e=Ou(.5,Lc(.2,t));return ac(e,0,1)}))}(t)}}Px.className="hardSigmoid",Cu(Px);class Bx extends Fx{apply(t){return Ah(t)}}Bx.className="softplus",Cu(Bx);class Wx extends Fx{apply(t){return function(t){return Eu((()=>xc(t,Mu(t).add(1))))}(t)}}Wx.className="softsign",Cu(Wx);class Vx extends Fx{apply(t){return Dh(t)}}Vx.className="tanh",Cu(Vx);class Ux extends Fx{apply(t,e=-1){return Eh(t,e)}}Ux.className="softmax",Cu(Ux);class Gx extends Fx{apply(t,e=-1){return Bc(t,e)}}Gx.className="logSoftmax",Cu(Gx);class jx extends Fx{apply(t,e=1){return Eu((()=>kh(t.mul(e)).mul(t)))}}function Hx(t){return t.getClassName()}function qx(t,e={}){return Rg(t,$u.getMap().classNameMap,e,"activation")}function Kx(t){if(null==t){return qx({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},qx(e)}return t instanceof Fx?t:qx(t)}jx.className="swish",Cu(jx);class Xx extends Iu{}class Yx extends Xx{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Eu((()=>{let e=lh([1]);return this.hasL1&&(e=Ou(e,Pc(Lc(this.l1,Mu(t))))),this.hasL2&&(e=Ou(e,Pc(Lc(this.l2,Sb(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Yx.className="L1L2",Cu(Yx);const Zx={l1l2:"L1L2"};function Jx(t){return Ag(t)}function Qx(t,e={}){return Rg(t,$u.getMap().classNameMap,e,"regularizer")}function tw(t){return null==t?null:"string"==typeof t?Qx({className:t in Zx?Zx[t]:t,config:{}}):t instanceof Xx?t:Qx(t)}class ew extends by{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=ay(t);let n=yh(t);return null!=this.maxValue&&(n=ac(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}ew.className="ReLU",Cu(ew);class nw extends by{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ay(t);return _c(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}nw.className="LeakyReLU",Cu(nw);class rw extends by{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Qb(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=tw(t.alphaRegularizer),this.alphaConstraint=Xg(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new yg(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=oy(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new dy({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=ay(t),dh(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Jb(this.alphaInitializer),alphaRegularizer:Jx(this.alphaRegularizer),alphaConstraint:qg(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}rw.className="PReLU",Cu(rw);class sw extends by{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new xg(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ay(t);return wc(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}sw.className="ELU",Cu(sw);class iw extends by{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=ay(t);return n.mul(gb(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}iw.className="ThresholdedReLU",Cu(iw);class aw extends by{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Ux).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=ay(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function ow(t,e,n){if("number"==typeof t)return vg(t,e);if(t.length!==e)throw new yg(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const i=t[s];if((r=i)!==parseInt(r.toString(),10))throw new yg(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t;var r}function lw(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function uw(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+fb([n-e,0]);else{if("same"!==r)throw new yg(`Unsupport padding mode: ${r}.`);t*=e}return t}function cw(t,e){return Eu((()=>(nb(e),"channelsFirst"===e?Wh(t,[0,2,3,1]):t)))}function hw(t,e){return Eu((()=>(nb(e),"channelsFirst"===e?Wh(t,[0,2,3,4,1]):t)))}function dw(t,e,n,r=[1,1],s="valid",i,a,o=null){return Eu((()=>{if(null==i&&(i="channelsLast"),nb(i),3!==t.rank&&4!==t.rank)throw new yg(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new yg(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=cw(t,i);if("causal"===s)throw new xg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=nd({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=Wh(l,[0,3,1,2])),l}))}aw.className="Softmax",Cu(aw);class pw extends by{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",pw.verifyArgs(e),this.rank=t,Lg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new xg(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ow(e.kernelSize,t,"kernelSize"),this.strides=ow(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,rb(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,nb(this.dataFormat),this.activation=Kx(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Qb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Xg(e.biasConstraint),this.biasRegularizer=tw(e.biasRegularizer),this.activityRegularizer=tw(e.activityRegularizer),this.dilationRate=ow(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new yg(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new yg(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new yg(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(kg("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Og(t.kernelSize,"number",1,3))throw new yg(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Hx(this.activation),useBias:this.useBias,biasInitializer:Jb(this.biasInitializer),biasRegularizer:Jx(this.biasRegularizer),activityRegularizer:Jx(this.activityRegularizer),biasConstraint:qg(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class fw extends pw{constructor(t,e){super(t,e),this.kernel=null,fw.verifyArgs(e),this.filters=e.filters,Lg(this.filters,"filters"),this.kernelInitializer=Qb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Xg(e.kernelConstraint),this.kernelRegularizer=tw(e.kernelRegularizer)}build(t){t=oy(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new yg(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Eu((()=>{let e;t=ay(t);const n=null==this.bias?null:this.bias.read(),r=Pg(this.activation.getClassName());if(null!=r&&2===this.rank)e=dw(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",i,a=1){return Eu((()=>{if(null==i&&(i="channelsLast"),nb(i),3!==t.shape.length)throw new yg(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new yg(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new yg(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=Wh(t,[0,2,1])),"causal"===s)throw new xg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=pc(t,e,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=Ab(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=dw(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new xg("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",i,a){return Eu((()=>{if(null==i&&(i="channelsLast"),nb(i),4!==t.rank&&5!==t.rank)throw new yg(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new yg(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=hw(t,i);if("causal"===s)throw new xg("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=gc(o,e,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=Ab(o,n)),"channelsFirst"===i&&(o=Wh(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=oy(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=lw(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Jb(this.kernelInitializer),kernelRegularizer:Jx(this.kernelRegularizer),kernelConstraint:qg(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new yg(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class mw extends fw{constructor(t){super(2,t),mw.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Og(t.kernelSize,"number",1,2))throw new yg(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}mw.className="Conv2D",Cu(mw);class gw extends fw{constructor(t){super(3,t),gw.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new yg(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}gw.className="Conv3D",Cu(gw);class bw extends mw{constructor(t){if(super(t),this.inputSpec=[new dy({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new yg(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=oy(t)).length)throw new yg("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new yg("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new dy({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Eu((()=>{let e=ay(t);if(4!==e.shape.length)throw new yg(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,uw(a,c,l,this.padding),uw(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Wh(e,[0,2,3,1]));let p=mc(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Wh(p,[0,3,1,2])),null!=this.bias&&(p=Ab(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=oy(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=uw(e[r],o,i,this.padding),e[s]=uw(e[s],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}bw.className="Conv2DTranspose",Cu(bw);class yw extends fw{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new yg("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new yg("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new yg(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Qb(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=tw(e.depthwiseRegularizer),this.depthwiseConstraint=Xg(e.depthwiseConstraint),this.pointwiseInitializer=Qb(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=tw(e.pointwiseRegularizer),this.pointwiseConstraint=Xg(e.pointwiseConstraint)}build(t){if((t=oy(t)).length<this.rank+2)throw new yg(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new yg(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new dy({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Eu((()=>{let e;if(t=ay(t),1===this.rank)throw new xg("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Wh(t,[0,2,3,1])),e=vh(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Ab(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Wh(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Jb(this.depthwiseInitializer),t.pointwiseInitializer=Jb(this.pointwiseInitializer),t.depthwiseRegularizer=Jx(this.depthwiseRegularizer),t.pointwiseRegularizer=Jx(this.pointwiseRegularizer),t.depthwiseConstraint=qg(this.depthwiseConstraint),t.pointwiseConstraint=qg(this.pointwiseConstraint),t}}yw.className="SeparableConv";class xw extends yw{constructor(t){super(2,t)}}xw.className="SeparableConv2D",Cu(xw);class ww extends fw{constructor(t){super(1,t),ww.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Og(t.kernelSize,"number",1,1))throw new yg(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}ww.className="Conv1D",Cu(ww);class vw extends by{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Eu((()=>{if(t=ay(t),"channelsLast"===this.dataFormat){const e=wb(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return wb(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=wb(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return wb(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}vw.className="Cropping2D",Cu(vw);class kw extends by{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,nb(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,function(t){Mg(Zg,"InterpolationFormat",t)}(this.interpolation)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Eu((()=>{let e=ay(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Wh(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r]);return Wh(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}kw.className="UpSampling2D",Cu(kw);class Iw extends pw{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Qb(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Xg(t.depthwiseConstraint),this.depthwiseRegularizer=tw(t.depthwiseRegularizer)}build(t){if((t=oy(t)).length<4)throw new yg(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new yg(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Eu((()=>{let e=function(t,e,n=[1,1],r="valid",s,i){return Eu((()=>{null==s&&(s="channelsLast"),nb(s);let a=cw(t,s);if(4!==t.rank)throw new yg(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new yg(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=bc(a,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=Wh(a,[0,3,1,2])),a}))}(t=ay(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Ab(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=oy(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=lw(e,this.kernelSize[0],this.padding,this.strides[0]),i=lw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,i]:[t[0],s,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Jb(this.depthwiseInitializer),t.depthwiseRegularizer=Jx(this.depthwiseRegularizer),t.depthwiseConstraint=qg(this.depthwiseRegularizer),t}}function $w(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new yg("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function Cw(t,e,n,r=!1,s,i,a=!1,o=!1){return Eu((()=>{const l=e.shape.length;if(l<3)throw new yg(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(mb(2,l));if(e=Wh(e,u),null!=i)throw new xg("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=Cc(s,-1)),s=Wh(s,u)),r&&(e=xh(e,0),null!=s&&(s=xh(s,0)));const c=[];let h,d=n;const p=e.shape[0],f=Lh(e);let m,g;null!=s&&(m=Lh(s));for(let e=0;e<p;++e){const n=f[e],r=Eu((()=>t(n,d)));if(null==s)h=r[0],d=r[1];else{const t=Eu((()=>{const t=m[e],n=ch(t).sub(t);return{output:r[0].mul(t).add(d[0].mul(n)),newStates:d.map(((e,s)=>r[1][s].mul(t).add(e.mul(n))))}}));h=t.output,d=t.newStates}o&&c.push(h)}return o&&(g=_h(c,1)),[h,g,d]}))}Iw.className="DepthwiseConv2D",Cu(Iw);class Nw extends by{constructor(t){let e;if(super(t),null==t.cell)throw new yg("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Dw({cells:t.cell}):t.cell,null==e.stateSize)throw new yg("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new dy({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?mb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){sy(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return Eu((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new xg("Constants support is not implemented in RNN yet.");sy(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new dy({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!jr(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new yg(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new dy({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Eu((()=>{if(!this.stateful)throw new gg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new yg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>lh([n,t]))):this.states_=[lh([n,this.cell.stateSize])];else if(null==t)Au(this.states_),null!=this.keptStates&&(Au(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>lh([n,t]))):this.states_[0]=lh([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new yg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Au(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!jr(r.shape,i))throw new yg(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>Tu(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=$w(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new dy({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof py){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Eu((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=ay(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new yg(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=Cw(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return Eu((()=>{let e=lh(t.shape);return e=Pc(e,[1,2]),e=bb(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?Ib(e,[1,t]):e)):this.cell.stateSize>1?[Ib(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Nw.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Ry(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Nw.className="RNN",Cu(Nw);class Sw extends by{}class Ew extends Sw{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Lg(this.units,"units"),this.activation=Kx(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Qb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qb(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tw(t.kernelRegularizer),this.recurrentRegularizer=tw(t.recurrentRegularizer),this.biasRegularizer=tw(t.biasRegularizer),this.kernelConstraint=Xg(t.kernelConstraint),this.recurrentConstraint=Xg(t.recurrentConstraint),this.biasConstraint=Xg(t.biasConstraint),this.dropout=pb([1,fb([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=pb([1,fb([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=oy(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Eu((()=>{if(2!==(t=t).length)throw new yg(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mw({ones:()=>ch(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mw({ones:()=>ch(n),rate:this.recurrentDropout,training:r}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=Cb(null!=i?Lc(t,i):t,this.kernel.read()),null!=this.bias&&(s=Ab(s,this.bias.read())),null!=a&&(n=Lc(n,a));let o=Ou(s,Cb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Hx(this.activation),useBias:this.useBias,kernelInitializer:Jb(this.kernelInitializer),recurrentInitializer:Jb(this.recurrentInitializer),biasInitializer:Jb(this.biasInitializer),kernelRegularizer:Jx(this.kernelRegularizer),recurrentRegularizer:Jx(this.recurrentRegularizer),biasRegularizer:Jx(this.biasRegularizer),activityRegularizer:Jx(this.activityRegularizer),kernelConstraint:qg(this.kernelConstraint),recurrentConstraint:qg(this.recurrentConstraint),biasConstraint:qg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Ew.className="SimpleRNNCell",Cu(Ew);class Aw extends Nw{constructor(t){t.cell=new Ew(t),super(t)}call(t,e){return Eu((()=>{null!=this.cell.dropoutMask&&(Au(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Au(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}Aw.className="SimpleRNN",Cu(Aw);class Tw extends Sw{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new yg("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Lg(this.units,"units"),this.activation=Kx(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Kx(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Qb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qb(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tw(t.kernelRegularizer),this.recurrentRegularizer=tw(t.recurrentRegularizer),this.biasRegularizer=tw(t.biasRegularizer),this.kernelConstraint=Xg(t.kernelConstraint),this.recurrentConstraint=Xg(t.recurrentConstraint),this.biasConstraint=Xg(t.biasConstraint),this.dropout=pb([1,fb([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=pb([1,fb([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=oy(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Eu((()=>{if(2!==(t=t).length)throw new yg(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mw({ones:()=>ch(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mw({ones:()=>ch(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=Lc(t,s[0]));let u=Cb(t,this.kernel.read());this.useBias&&(u=Ab(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Lc(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=Th(c,[2*this.units,this.units],c.rank-1),p=Cb(r,h),[f,m,g]=Th(u,3,u.rank-1),[b,y]=Th(p,2,p.rank-1);a=this.recurrentActivation.apply(Ou(f,b)),o=this.recurrentActivation.apply(Ou(m,y));const x=Cb(Lc(o,r),d);l=this.activation.apply(Ou(g,x));const w=Ou(Lc(a,r),Lc(Ou(1,ih(a)),l));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Hx(this.activation),recurrentActivation:Hx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Jb(this.kernelInitializer),recurrentInitializer:Jb(this.recurrentInitializer),biasInitializer:Jb(this.biasInitializer),kernelRegularizer:Jx(this.kernelRegularizer),recurrentRegularizer:Jx(this.recurrentRegularizer),biasRegularizer:Jx(this.biasRegularizer),activityRegularizer:Jx(this.activityRegularizer),kernelConstraint:qg(this.kernelConstraint),recurrentConstraint:qg(this.recurrentConstraint),biasConstraint:qg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Tw.className="GRUCell",Cu(Tw);class Rw extends Nw{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Tw(t),super(t)}call(t,e){return Eu((()=>{null!=this.cell.dropoutMask&&(Au(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Au(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Rw.className="GRU",Cu(Rw);class Fw extends Sw{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Lg(this.units,"units"),this.activation=Kx(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Kx(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Qb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qb(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=tw(t.kernelRegularizer),this.recurrentRegularizer=tw(t.recurrentRegularizer),this.biasRegularizer=tw(t.biasRegularizer),this.kernelConstraint=Xg(t.kernelConstraint),this.recurrentConstraint=Xg(t.recurrentConstraint),this.biasConstraint=Xg(t.biasConstraint),this.dropout=pb([1,fb([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=pb([1,fb([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=oy(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Db{apply(e,r){const s=t.apply([n]),i=(new Ob).apply([n]),a=t.apply([2*n]);return kb(kb(s,i),a)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Eu((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new yg(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mw({ones:()=>ch(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mw({ones:()=>ch(r),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=Lc(t,i[0]));let h=Cb(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Lc(r,a[0])),h=Ou(h,Cb(r,this.recurrentKernel.read())),this.useBias&&(h=Ab(h,this.bias.read()));const[d,p,f,m]=Th(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Ou(Lc(l,s),Lc(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Lc(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Hx(this.activation),recurrentActivation:Hx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Jb(this.kernelInitializer),recurrentInitializer:Jb(this.recurrentInitializer),biasInitializer:Jb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Jx(this.kernelRegularizer),recurrentRegularizer:Jx(this.recurrentRegularizer),biasRegularizer:Jx(this.biasRegularizer),activityRegularizer:Jx(this.activityRegularizer),kernelConstraint:qg(this.kernelConstraint),recurrentConstraint:qg(this.recurrentConstraint),biasConstraint:qg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Fw.className="LSTMCell",Cu(Fw);class _w extends Nw{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Fw(t),super(t)}call(t,e){return Eu((()=>{null!=this.cell.dropoutMask&&(Au(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Au(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}_w.className="LSTM",Cu(_w);class Dw extends Sw{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Eu((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;sy(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{ab(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(Ry(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return cy(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}hy(e)}}function Mw(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,i=()=>Tb(e(),n),a=()=>Rb(i,e,r);return!s||s<=1?Tu(a().clone()):Array(s).fill(void 0).map(a).map((t=>Tu(t.clone())))}Dw.className="StackedRNNCells",Cu(Dw);var Ow,Lw,zw,Pw;class Bw extends Nw{constructor(t){if(t.unroll)throw new xg("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new xg("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new dy({ndim:5})]}call(t,e){return Eu((()=>{if(null!=this.cell.dropoutMask&&(Au(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Au(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new yg("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Eu((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=lh([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){Eu((()=>{if(!this.stateful)throw new gg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new yg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>lh(s))):this.states_=[lh(s)];else if(null==t)Au(this.states_),null!=this.keptStates&&(Au(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>lh(s))):this.states_[0]=lh(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new yg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Au(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!jr(n.shape,r))throw new yg(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Tu(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=lw(l,r[0],s,i[0],a[0]),h=lw(u,r[1],s,i[1],a[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Bw.className="ConvRNN2D";class Ww extends Fw{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,Lg(this.filters,"filters"),this.kernelSize=ow(n,2,"kernelSize"),this.kernelSize.forEach((t=>Lg(t,"kernelSize"))),this.strides=ow(r||1,2,"strides"),this.strides.forEach((t=>Lg(t,"strides"))),this.padding=s||"valid",rb(this.padding),this.dataFormat=i||"channelsLast",nb(this.dataFormat),this.dilationRate=ow(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>Lg(t,"dilationRate")))}build(t){var e;t=oy(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new yg(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends Db{apply(t,e){return vb([n.apply([r]),uh([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Eu((()=>{if(3!==t.length)throw new yg(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mw({ones:()=>ch(r),rate:this.dropout,training:n,count:4}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Lc(e[n],t):t;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mw({ones:()=>ch(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[b,y,x,w]=Th(this.kernel.read(),4,3),[v,k,I,$]=this.useBias?Th(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,v,this.padding),u=this.inputConv(u,y,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,$,this.padding);const[C,N,S,E]=Th(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,N),m=this.recurrentConv(m,S),g=this.recurrentConv(g,E);const A=this.recurrentActivation.apply(Ou(l,p)),T=this.recurrentActivation.apply(Ou(u,f)),R=Ou(Lc(T,i),Lc(A,this.activation.apply(Ou(c,m)))),F=Lc(this.recurrentActivation.apply(Ou(h,g)),this.activation.apply(R));return[F,F,R]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=dc(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ab(s,n,this.dataFormat):s}recurrentConv(t,e){return dc(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ww.className="ConvLSTM2DCell",Cu(Ww);class Vw extends Bw{constructor(t){const e=new Ww(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Vw.className="ConvLSTM2D",Cu(Vw);class Uw extends by{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Eu((()=>{this.invokeCallHook(t,e);const n=ay(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Rb((()=>Tb(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Uw.className="Dropout",Cu(Uw);class Gw extends Uw{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Gw.className="SpatialDropout1D",Cu(Gw);class jw extends by{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Lg(this.units,"units"),this.activation=Kx(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Qb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Qb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Xg(t.kernelConstraint),this.biasConstraint=Xg(t.biasConstraint),this.kernelRegularizer=tw(t.kernelRegularizer),this.biasRegularizer=tw(t.biasRegularizer),this.activityRegularizer=tw(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=oy(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=oy(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Eu((()=>{this.invokeCallHook(t,e);const n=ay(t),r=Pg(this.activation.getClassName());let s;return null!=r?s=Cb(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Cb(n,this.kernel.read()),null!=this.bias&&(s=Ab(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Hx(this.activation),useBias:this.useBias,kernelInitializer:Jb(this.kernelInitializer),biasInitializer:Jb(this.biasInitializer),kernelRegularizer:Jx(this.kernelRegularizer),biasRegularizer:Jx(this.biasRegularizer),activityRegularizer:Jx(this.activityRegularizer),kernelConstraint:qg(this.kernelConstraint),biasConstraint:qg(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}jw.className="Dense",Cu(jw);class Hw extends by{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=oy(t);for(const e of t.slice(1))if(null==e)throw new yg(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],hb(t,1)]}call(t,e){return Eu((()=>{this.invokeCallHook(t,e);let n=ay(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new yg(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],hb(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Hw.className="Flatten",Cu(Hw);class qw extends by{constructor(t){super(t),this.supportsMasking=!0,this.activation=Kx(t.activation)}call(t,e){return Eu((()=>{this.invokeCallHook(t,e);const n=ay(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Hx(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}qw.className="Activation",Cu(qw);class Kw extends by{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Eu((()=>{return t=ay(t),e=t,n=this.n,Eu((()=>{if(2!==e.shape.length)throw new yg(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Ib(bb(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Kw.className="RepeatVector",Cu(Kw);class Xw extends by{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==i)throw new yg("Can only specifiy one unknown dimension.");i=t}else s*=e}const a=hb(t);if(null!==i){if(0===s||a%s!=0)throw new yg(n);r[i]=a/s}else if(a!==s)throw new yg(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Eu((()=>{this.invokeCallHook(t,e);const n=ay(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Xw.className="Reshape",Cu(Xw);class Yw extends by{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=mb(1,t.dims.length+1);if(!jr(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new dy({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=oy(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return Wh(ay(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Yw.className="Permute",Cu(Yw);class Zw extends by{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=ay(t);return zu(ah(n,this.maskValue),-1)}call(t,e){return Eu((()=>{this.invokeCallHook(t,e);const n=ay(t),r=zu(ah(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Zw.className="Masking",Cu(Zw);class Jw extends by{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Cg(t.inputLength))}this.inputDim=t.inputDim,Lg(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Lg(this.outputDim,"outputDim"),this.embeddingsInitializer=Qb(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=tw(t.embeddingsRegularizer),this.activityRegularizer=tw(t.activityRegularizer),this.embeddingsConstraint=Xg(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Eu((()=>this.maskZero?(t=ay(t),ah(t,Bh(t))):null))}computeOutputShape(t){if(t=oy(t),null==this.inputLength)return[...t,this.outputDim];const e=Cg(this.inputLength);if(e.length!==t.length-1)throw new yg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new yg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Eu((()=>{this.invokeCallHook(t,e);let n=ay(t);return"int32"!==n.dtype&&(n=gb(n,"int32")),Nb(this.embeddings.read(),n.as1D()).reshape(oy(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Jb(this.embeddingsInitializer),embeddingsRegularizer:Jx(this.embeddingsRegularizer),activityRegularizer:Jx(this.activityRegularizer),embeddingsConstraint:qg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Jw.className="Embedding",Cu(Jw);class Qw extends by{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new xg}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new yg("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[oy(t)]),(t=t).length<2)throw new yg(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=_g(e),e.length>1)throw new yg(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===_g(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Eu((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=fb(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=bb(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],i=t.slice(1).concat([s]);let a=r.reshape([s].concat(hb(t.slice(1))));a=Wh(a,[1,0]),a=a.reshape(i),e.push(a),n=!0}else if(t>1){const s=mb(1,t).concat([0]);e.push(Wh(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=Wh(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(mb(0,s-1));r=Wh(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=_g(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Eu((()=>{if(null==e)return null;if(!Array.isArray(e))throw new yg("`mask` should be an Array");if(!Array.isArray(t))throw new yg("`inputs` should be an Array");if(e.length!==t.length)throw new yg(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:Cc(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Wc(n,e[t]);return n}))}}class tv extends Qw{constructor(t){super(t)}mergeFunction(t){return Eu((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ou(e,t[n]);return e}))}}tv.className="Add",Cu(tv);class ev extends Qw{constructor(t){super(t)}mergeFunction(t){return Eu((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Lc(e,t[n]);return e}))}}ev.className="Multiply",Cu(ev);class nv extends Qw{constructor(t){super(t)}mergeFunction(t){return Eu((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ou(e,t[n]);return Lc(1/t.length,e)}))}}nv.className="Average",Cu(nv);class rv extends Qw{constructor(t){super(t)}mergeFunction(t){return Eu((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=jc(e,t[n]);return e}))}}rv.className="Maximum",Cu(rv);class sv extends Qw{constructor(t){super(t)}mergeFunction(t){return Eu((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Kc(e,t[n]);return e}))}}sv.className="Minimum",Cu(sv);class iv extends Qw{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new yg("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(jr(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new yg("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Eu((()=>vb(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new yg("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new yg("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new yg("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new yg(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Eu((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(ch(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(Cc(e[n],-1)):r.push(e[n]);const s=oc(r,this.axis);return Lu(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function av(t,e){for(;t<0;)t+=e;return t}iv.className="Concatenate",Cu(iv);class ov extends Qw{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){Br(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new xg("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new yg(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new yg(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>av(e,t[n].shape.length))):[av(this.axes,n.shape.length),av(this.axes,r.shape.length)],this.normalize&&(n=Fy(n,e[0]),r=Fy(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new xg("batchDot is not implemented for tensors of 4D or higher rank yet");if(Br(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),Br(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new xg("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return Eu((()=>{let n,a;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;a=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[av(this.axes,t.length),av(this.axes,e.length)],n}computeOutputShape(t){Br(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new xg("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}ov.className="Dot",Cu(ov);class lv extends by{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Eu((()=>{this.invokeCallHook(t,e);const n=ay(t);return Rb((()=>$b(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}lv.className="GaussianNoise",Cu(lv);class uv extends by{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Eu((()=>{this.invokeCallHook(t,e);const n=ay(t);return this.rate>0&&this.rate<1?Rb((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul($b(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}uv.className="GaussianDropout",Cu(uv);class cv extends by{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ay(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Eu((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Rb((()=>{const e=ay(t),r=-1.7580993408473766;let s=Fc(bh(n),this.rate);s=gb(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-i*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(i).add(a)}),(()=>ay(t)),e.training||!1)}return t}))}}function hv(t,e,n,r,s,i=.001){let a;if(2===t.rank)a=rc(t,e,n,r,s,i);else if(3===t.rank)a=sc(t,e,n,r,s,i);else{if(4!==t.rank)throw new xg(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=ic(t,e,n,r,s,i)}return a}cv.className="AlphaDropout",Cu(cv);class dv extends by{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Qb(t.betaInitializer||"zeros"),this.gammaInitializer=Qb(t.gammaInitializer||"ones"),this.movingMeanInitializer=Qb(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Qb(t.movingVarianceInitializer||"ones"),this.betaConstraint=Xg(t.betaConstraint),this.gammaConstraint=Xg(t.gammaConstraint),this.betaRegularizer=tw(t.betaRegularizer),this.gammaRegularizer=tw(t.gammaRegularizer)}build(t){t=oy(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new yg(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new dy({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Eu((()=>{const n=null!=e.training&&e.training,r=ay(t),s=r.shape,i=s.length,a=mb(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=vg(1,i);l[o]=s[o];const u=a.slice();u.sort();const c=!jr(u,mb(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return hv(r,t,e,n,s,this.epsilon)}return hv(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,r,s=.001){return jr(r.slice().sort(),mb(0,t.rank-1))?function(t,e,n,r,s=.001){return Eu((()=>{const i=sh(t,r),a=i.mean,o=i.variance;return[hv(t,a,o,n,e,s),a,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return Eu((()=>{const i=sh(t,r),a=i.mean,o=i.variance,l=[];for(const e of mb(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=a.reshape(l),c=o.reshape(l),h=null==e?null:e.reshape(l),d=null==n?null:n.reshape(l);return[hv(t,u,c,d,h,s),a,o]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{Eu((()=>{const r=1-n,s=t.read(),i=s.sub(e).mul(r);t.write(s.sub(i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Jb(this.betaInitializer),gammaInitializer:Jb(this.gammaInitializer),movingMeanInitializer:Jb(this.movingMeanInitializer),movingVarianceInitializer:Jb(this.movingVarianceInitializer),betaRegularizer:Jx(this.betaRegularizer),gammaRegularizer:Jx(this.gammaRegularizer),betaConstraint:qg(this.betaConstraint),gammaConstraint:qg(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}dv.className="BatchNormalization",Cu(dv);class pv extends by{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Qb(t.betaInitializer||"zeros"),this.gammaInitializer=Qb(t.gammaInitializer||"ones"),this.betaRegularizer=tw(t.betaRegularizer),this.gammaRegularizer=tw(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=oy(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==_g(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=ay(t),r=n.shape,s=r.length;return Eu((()=>{let{mean:t,variance:e}=sh(n,this.axis,!0);const i=vg(1,s);for(const t of this.axis)i[t]=r[t];const a=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(i):t;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),c.push(1)):(u.push(1),c.push(r[t]));return t=t.tile(u),e=e.tile(u),o=o.tile(c),l=l.tile(c),hv(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Jb(this.betaInitializer),gammaInitializer:Jb(this.gammaInitializer),betaRegularizer:Jx(this.betaRegularizer),gammaRegularizer:Jx(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}pv.className="LayerNormalization",Cu(pv);class fv extends by{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new yg(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new yg(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new yg(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new dy({ndim:4})]}computeOutputShape(t){let e,n;return t=oy(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Eu((()=>{return e=ay(t),n=this.padding,r=this.dataFormat,Eu((()=>{if(4!==e.rank)throw new yg(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new yg("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new yg(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],hh(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function mv(t,e,n,r,s,i){return Eu((()=>{let a;nb(s),sb(i),rb(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=cw(t,s);const o="same"===r?"same":"valid";return a="max"===i?Uc(t,e,n,o):tc(t,e,n,o),"channelsFirst"===s&&(a=Wh(a,[0,3,1,2])),a}))}function gv(t,e,n,r,s,i){return Eu((()=>{let a;nb(s),sb(i),rb(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=hw(t,s);const o="same"===r?"same":"valid";return a="max"===i?Gc(t,e,n,o):ec(t,e,n,o),"channelsFirst"===s&&(a=Wh(a,[0,4,1,2,3])),a}))}fv.className="ZeroPadding2D",Cu(fv);class bv extends by{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new yg(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Lg(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new yg(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Lg(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,rb(this.padding),this.inputSpec=[new dy({ndim:3})]}computeOutputShape(t){const e=lw((t=oy(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Eu((()=>{this.invokeCallHook(t,e),t=bb(ay(t),2);const n=this.poolingFunction(ay(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Fh(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class yv extends bv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nb(s),rb(r),mv(t,e,n,r,s,"max")}}yv.className="MaxPooling1D",Cu(yv);class xv extends bv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nb(s),rb(r),mv(t,e,n,r,s,"avg")}}xv.className="AveragePooling1D",Cu(xv);class wv extends by{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new yg(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Lg(this.poolSize,"poolSize"),Lg(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,nb(this.dataFormat),rb(this.padding),this.inputSpec=[new dy({ndim:4})]}computeOutputShape(t){t=oy(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=lw(e,this.poolSize[0],this.padding,this.strides[0]),n=lw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Eu((()=>(this.invokeCallHook(t,e),this.poolingFunction(ay(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class vv extends wv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nb(s),rb(r),mv(t,e,n,r,s,"max")}}vv.className="MaxPooling2D",Cu(vv);class kv extends wv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nb(s),rb(r),mv(t,e,n,r,s,"avg")}}kv.className="AveragePooling2D",Cu(kv);class Iv extends by{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new yg(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Lg(this.poolSize,"poolSize"),Lg(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,nb(this.dataFormat),rb(this.padding),this.inputSpec=[new dy({ndim:5})]}computeOutputShape(t){t=oy(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=lw(e,this.poolSize[0],this.padding,this.strides[0]),n=lw(n,this.poolSize[1],this.padding,this.strides[1]),r=lw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Eu((()=>(this.invokeCallHook(t,e),this.poolingFunction(ay(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class $v extends Iv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nb(s),rb(r),gv(t,e,n,r,s,"max")}}$v.className="MaxPooling3D",Cu($v);class Cv extends Iv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nb(s),rb(r),gv(t,e,n,r,s,"avg")}}Cv.className="AveragePooling3D",Cu(Cv);class Nv extends by{constructor(t){super(t),this.inputSpec=[new dy({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new xg}}class Sv extends Nv{constructor(t){super(t||{})}call(t,e){return Eu((()=>{const e=ay(t);return Hc(e,1)}))}}Sv.className="GlobalAveragePooling1D",Cu(Sv);class Ev extends Nv{constructor(t){super(t||{})}call(t,e){return Eu((()=>{const e=ay(t);return Oc(e,1)}))}}Ev.className="GlobalMaxPooling1D",Cu(Ev);class Av extends by{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,nb(this.dataFormat),this.inputSpec=[new dy({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new xg}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Tv extends Av{call(t,e){return Eu((()=>{const e=ay(t);return"channelsLast"===this.dataFormat?Hc(e,[1,2]):Hc(e,[2,3])}))}}Tv.className="GlobalAveragePooling2D",Cu(Tv);class Rv extends Av{call(t,e){return Eu((()=>{const e=ay(t);return"channelsLast"===this.dataFormat?Oc(e,[1,2]):Oc(e,[2,3])}))}}Rv.className="GlobalMaxPooling2D",Cu(Rv);class Fv extends by{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Ry(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class _v extends Fv{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=oy(t)).length<3)throw new yg(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=oy(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Eu((()=>Cw(((t,n)=>[ay(this.layer.call(t,e)),[]]),t=ay(t),[],!1,null,null,!1,!0)[1]))}}_v.className="TimeDistributed",Cu(_v);class Dv extends Fv{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Ry(n),e.goBackwards=!0!==e.goBackwards;const r={};if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Ry(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,function(t){Mg(tb,"BidirectionalMergeMode",t)}(this.mergeMode),t.weights)throw new xg("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):$g(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=$w(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new yg("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map((t=>new dy({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new xg("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof py;for(const t of i)if(t instanceof py!==o)throw new yg("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Eu((()=>{const n=e.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=xh(s,1)),"concat"===this.mergeMode?a=vb([r,s]):"sum"===this.mergeMode?a=Ou(r,s):"ave"===this.mergeMode?a=Lc(.5,Ou(r,s)):"mul"===this.mergeMode?a=Lc(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ab(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),ab(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Ry(e.layer);if(delete e.layer,null!=e.numConstants)throw new xg("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function Mv(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Pv(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const a=Mv(t[i],e,n,r);s[i]=a}return r.delete(t),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function Ov(t,e=zv){return Lv(t,e)}function Lv(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Pv(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=Lv(t.map((t=>t[i])),e,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function zv(t){return null===t?null:Pv(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Pv(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Uo))}function Bv(t){return Mv(t,Wv)}function Wv(t){return t instanceof Uo?{value:t.clone(),recurse:!1}:Pv(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}Dv.className="Bidirectional",Cu(Dv),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Ow||(Ow={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Lw||(Lw={}));class Vv{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Uv extends Vv{constructor(){super(Uv.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Uv.INITIAL_CAPACITY=32;class Gv{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Qv(this,t)}filter(t){return new Zv(this,t)}map(t){return new Jv(this,t)}mapAsync(t){return new tk(this,t)}serialMapAsync(t){return new tk(this,t).serial()}flatmap(t){return new nk(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Yv(this,t,e)}columnMajorBatch(t,e=!0,n=zv){return this.rowMajorBatch(t,e).map((t=>Ov(t,n)))}concatenate(t,e){return new rk(new jv([this,t]),e)}take(t){return t<0||null==t?this:new Xv(this,t)}skip(t){return t<0||null==t?this:new Kv(this,t)}prefetch(t){return new sk(this,t)}shuffle(t,e){return new ik(this,t,e)}serial(){return new qv(this)}}class jv extends Gv{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Bv(t),done:!1}}}class Hv extends Gv{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class qv extends Gv{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Kv extends Gv{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Au(t.value)}return this.upstream.next()}}class Xv extends Gv{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Yv extends Gv{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Zv extends Gv{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Au(t.value)}}}class Jv extends Gv{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=nl(t.value),n=this.transform(t.value),r=nl(n);for(const t of e)el(t,r)||t.dispose();return{value:n,done:!1}}}class Qv extends Gv{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class tk extends Gv{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=nl(t.value),n=await this.transform(t.value),r=nl(n);for(const t of e)el(t,r)||t.dispose();return{value:n,done:!1}}}class ek extends Gv{constructor(){super(),this.outputQueue=new Uv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class nk extends ek{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=nl(t.value),n=this.transform(t.value),r=nl(n);this.outputQueue.pushAll(n);for(const t of e)el(t,r)||t.dispose();return!0}}class rk extends Gv{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(Pw=zw||(zw={}))[Pw.FAIL=0]="FAIL",Pw[Pw.SHORTEST=1]="SHORTEST",Pw[Pw.LONGEST=2]="LONGEST";class sk extends Gv{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Vv(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class ik extends sk{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Tr.alea(n||Eo().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class ak{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return Br(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),ok((async()=>(await n.iterator()).columnMajorBatch(t,e,lk)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,ok((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,ok((async()=>(await e.iterator()).filter((e=>Eu((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return ok((async()=>(await e.iterator()).map((e=>Eu((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return ok((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return ok((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,ok((async()=>{return n=(s=async()=>({value:await e.iterator(),done:!1}),new Hv(s)).take(t),new rk(n,r);var n,r,s}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,ok((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Tr.alea(e||Eo().toString());return ok((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,ok((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ok(t,e=null){return new class extends ak{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function lk(t){if(null===t)return null;return null==(e=t[0])||function(t){return null===t||"object"!=typeof t&&"function"!=typeof t}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof Uo||ns(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Uo?_h(t):wl(e=t,n,pl(e,r),r);var e,n,r}(t),recurse:!1}:{value:null,recurse:!0};var e}function uk(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&Br("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}ak.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const ck=Fp;class hk extends Mr{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Dr(this,Nu())}nextDataId(){return hk.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,ws().get("IS_NODE")&&gp("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&ss(n[0])){const s=n.map((t=>Ao(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,s){this.data.set(t,{values:e,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?yp(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>To(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Zl(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Nu().makeTensorFromDataId(r,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Eo();return t(),{kernelMs:Eo()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){uk([t],"where");const e=this.readSync(t.dataId);return ck(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function dk(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(uk(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=Gr(a.shape),c=n||a.dtype,h=ts(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],s);return o.makeTensorInfo(a.shape,c,h)}}function pk(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(uk(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,c=e(l,u,s);return o.makeTensorInfo(a.shape,u,c)}}hk.nextDataId=0,Ru("cpu",(()=>new hk),1);const fk=dk(yi,(t=>t>=0?t:Math.exp(t)-1)),mk={kernelName:yi,backendName:"cpu",kernelFunc:fk};function gk(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const bk={kernelName:Mi,backendName:"cpu",kernelFunc:gk};function yk(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r;uk([s],"leakyRelu");const a=Gr(s.shape),o=n.data.get(s.dataId).values,l=Qr("float32",a);for(let t=0;t<o.length;t++)l[t]=o[t]<0?i*o[t]:o[t];return n.makeTensorInfo(s.shape,"float32",l)}const xk={kernelName:Wi,backendName:"cpu",kernelFunc:yk};function wk(t){return(e,n,r,s,i)=>{const a=Ic(e,n),o=a.length,l=us(a),u=Qr(i,Gr(a)),c=e.length,h=n.length,d=us(e),p=us(n),f=vc(e,a),m=vc(n,a);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<u.length;++e){const n=bs(e,o,l),i=n.slice(-c);f.forEach((t=>i[t]=0));const a=gs(i,c,d),g=n.slice(-h);m.forEach((t=>g[t]=0));const b=gs(g,h,p);u[e]=t(r[a],s[b])}return[u,a]}}const vk=wk(((t,e)=>t<0?e*t:t));function kk(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;uk([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,l]=vk(r.shape,s.shape,i,a,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const Ik={kernelName:ka,backendName:"cpu",kernelFunc:kk},$k=dk(Sa,(t=>Math.max(0,t))),Ck={kernelName:Sa,backendName:"cpu",kernelFunc:$k},Nk=dk(_a,(t=>Math.min(Math.max(0,t),6))),Sk={kernelName:_a,backendName:"cpu",kernelFunc:Nk};function Ek(t,e,n,r,s){if("linear"===n)return gk({inputs:{x:e},backend:t});if("relu"===n)return $k({inputs:{x:e},backend:t});if("elu"===n)return fk({inputs:{x:e},backend:t});if("relu6"===n)return Nk({inputs:{x:e},backend:t});if("prelu"===n)return kk({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return yk({inputs:{x:e},backend:t,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Ak(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const Tk={kernelName:Xs,backendName:"cpu",kernelFunc:Ak};function Rk(t,e,n="float32"){if("complex64"===n)return Ak({inputs:{real:Rk(t,e,"float32"),imag:Rk(t,e,"float32")},backend:t});const r=ps(Gr(e),n);return t.makeTensorInfo(e,n,r)}function Fk(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const _k={kernelName:Ca,backendName:"cpu",kernelFunc:Fk};function Dk(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return gk({inputs:{x:s},backend:n});const t=Rk(n,s.shape,s.dtype),e=Dk({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Ak({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=Fk({inputs:{input:s},backend:n}),e=Dk({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!es(s.dtype,i)){const t=gk({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===i){const t=n.data.get(s.dataId).values,e=So([0],s.dtype),[r,i]=wk(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const Mk={kernelName:Hs,backendName:"cpu",kernelFunc:Dk};function Ok(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:a}=n,o=s;uk([i,a],t);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c=r||i.dtype,[h,d]=e(i.shape,a.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:t,backend:s})=>{const{a:i,b:a}=t,o=s;if("complex64"===i.dtype||"complex64"===a.dtype){const t=Dk({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=Dk({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,y]=n(i.shape,a.shape,l,u,f,m),x=o.makeTensorInfo(y,"float32",g),w=o.makeTensorInfo(y,"float32",b),v=Ak({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const t=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,s=r||i.dtype,[l,u]=e(i.shape,a.shape,t,n,s);return o.makeTensorInfo(u,s,l)}}}function Lk(t){return(e,n,r,s,i,a)=>{const o=Ic(e,n),l=Gr(o),u=o.length,c=us(o),h=Qr("float32",l),d=Qr("float32",l),p=vc(e,o),f=vc(n,o),m=yp(r,s),g=yp(i,a),b=e.length,y=us(e),x=n.length,w=us(n);if(p.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%m.length,r=e%g.length,s=t(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[e]=s.real,d[e]=s.imag}else for(let e=0;e<h.length;e++){const n=bs(e,u,c),r=n.slice(-b);p.forEach((t=>r[t]=0));const s=gs(r,b,y),i=n.slice(-x);f.forEach((t=>i[t]=0));const a=gs(i,x,w),o=t(m[2*s],m[2*s+1],g[2*a],g[2*a+1]);h[e]=o.real,d[e]=o.imag}return[h,d,o]}}const zk=wk(((t,e)=>t+e)),Pk=Lk(((t,e,n,r)=>({real:t+n,imag:e+r}))),Bk=Ok(Es,zk,Pk),Wk={kernelName:Es,backendName:"cpu",kernelFunc:Bk};function Vk(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,a=Gr(s.shape),o=Yr(i,a),l=Gr(o);Br(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Uk={kernelName:Ea,backendName:"cpu",kernelFunc:Vk};function Gk(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;uk([s,i],"matMul");const l=s.shape.length,u=i.shape.length,c=a?s.shape[l-2]:s.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],d=a?s.shape[l-1]:s.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],f=s.shape.slice(0,-2),m=i.shape.slice(0,-2),g=Gr(f),b=Gr(m);Br(l>=2&&u>=2&&(g===b||1===g||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const y=(g>b?s.shape.slice(0,-2):i.shape.slice(0,-2)).concat([d,p]);Br(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const x=o?[b,p,h]:[b,h,p],w=Vk({inputs:{x:s},backend:n,attrs:{shape:a?[g,c,d]:[g,d,c]}}),v=Vk({inputs:{x:i},backend:n,attrs:{shape:x}}),k=a?w.shape[1]:w.shape[2],I=a?w.shape[2]:w.shape[1],$=o?v.shape[1]:v.shape[2],C=Math.max(g,b),N=n.data.get(w.dataId).values,S=n.data.get(v.dataId).values,E=us(w.shape),A=us(v.shape),[T,R,F]=a?[E[0],1,E[1]]:[E[0],E[1],1],[_,D,M]=o?[1,A[1],A[0]]:[A[1],1,A[0]],O=I*$,L=Zl([C,I,$],w.dtype),z=L.values,P=n.blockSize;for(let t=0;t<C;t++)for(let e=0;e<I;e+=P)for(let n=0;n<$;n+=P)for(let r=0;r<k;r+=P){const s=Math.min(e+P,I),i=Math.min(n+P,$),a=Math.min(r+P,k);for(let o=e;o<s;o++)for(let e=n;e<i;e++){let n=0;for(let s=r;s<a;s++){const r=Math.min(t,g-1)*T,i=Math.min(t,b-1)*M;n+=N[r+o*R+s*F]*S[s*_+e*D+i]}z[t*O+(o*$+e)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(y,L.dtype,L.values)}const jk={kernelName:Us,backendName:"cpu",kernelFunc:Gk},Hk={kernelName:mo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=Gk({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=Bk({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=Ek(n,d,c,o,h),m.push(d),d=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return d}};function qk(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Kk={kernelName:Cs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;uk(e,"abs");let r=new Float32Array(Gr(e.shape));return r=qk(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,"float32")}},Xk=dk(Ns,(t=>Math.acos(t))),Yk={kernelName:Ns,backendName:"cpu",kernelFunc:Xk},Zk=dk(Ss,(t=>Math.acosh(t))),Jk={kernelName:Ss,backendName:"cpu",kernelFunc:Zk},Qk={kernelName:As,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;uk(e,"addN");const s=r.map((t=>n.data.get(t.dataId).values)),i=Zl(r[0].shape,r[0].dtype),a=i.values;for(let t=0;t<r.length;t++){const e=s[t];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function tI(t,e,n,r,s){const i=e.length,a=Gr(e),o=us(e),l=us(s),u=Qr(n,Gr(s));for(let e=0;e<a;++e){const n=bs(e,i,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[gs(s,i,l)]=t[e]}return u}function eI(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:i}=n;uk(s,"transpose");const a=s.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=s.shape[i[t]];const l=tI(r.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const nI={kernelName:oo,backendName:"cpu",kernelFunc:eI},rI={kernelName:Ts,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;uk(s,"all");const o=Zr(i,s.shape);let l=o;const u=th(l,s.shape.length);let c=s;null!=u&&(c=eI({inputs:{x:s},backend:n,attrs:{perm:u}}),l=nh(l.length,s.shape.length)),Qc("all",l,c.shape.length);const[h,d]=Zc(c.shape,l),p=Gr(d),f=ps(Gr(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n&&r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=Vk({inputs:{x:g},backend:n,attrs:{shape:Jc(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},sI={kernelName:Rs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;uk(s,"any");const o=Zr(i,s.shape);let l=o;const u=th(l,s.shape.length);let c=s;null!=u&&(c=eI({inputs:{x:s},backend:n,attrs:{perm:u}}),l=nh(l.length,s.shape.length)),Qc("any",l,c.shape.length);const[h,d]=Zc(c.shape,l),p=Gr(d),f=ps(Gr(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n||r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=Vk({inputs:{x:g},backend:n,attrs:{shape:Jc(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},iI={kernelName:Fs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;uk(s,"argMax");let a=Zr(i,s.shape);const o=th(a,s.shape.length);let l=s;const u=[];null!=o&&(l=eI({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=nh(a.length,l.shape.length)),a=[a[0]],Qc("argMax",a,l.shape.length);const[c,h]=Zc(l.shape,a),d=ps(Gr(c),"int32"),p=Gr(h),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const s=f[e+t];s>n&&(n=s,r=t)}d[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",d)}},aI={kernelName:_s,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;uk(s,"argMin");let a=Zr(i,s.shape);const o=th(a,s.shape.length);let l=s;const u=[];null!=o&&(l=eI({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=nh(a.length,l.shape.length)),a=[a[0]],Qc("argMin",a,l.shape.length);const[c,h]=Zc(l.shape,a),d=ps(Gr(c),"int32"),p=Gr(h),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const s=f[e+t];s<n&&(n=s,r=t)}d[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",d)}},oI=dk(Ds,(t=>Math.asin(t))),lI={kernelName:Ds,backendName:"cpu",kernelFunc:oI},uI=dk(Ms,(t=>Math.asinh(t))),cI={kernelName:Ms,backendName:"cpu",kernelFunc:uI},hI=dk(Os,(t=>Math.atan(t))),dI={kernelName:Os,backendName:"cpu",kernelFunc:hI},pI=wk(((t,e)=>Math.atan2(t,e))),fI=Ok(zs,pI),mI={kernelName:zs,backendName:"cpu",kernelFunc:fI},gI=dk(Ls,(t=>Math.atanh(t))),bI={kernelName:Ls,backendName:"cpu",kernelFunc:gI};function yI(t,e,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Zl(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*b,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let b=0;b<s.outHeight;++b){const w=b*a-d,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=n+b*y;for(let n=0;n<s.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let b=f,y=0,w=0;for(let n=v;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<d;n+=u){const a=t[s+n*r[2]+e];"max"===i&&a>b?b=a:"avg"===i&&(y+=a,w++)}if(isNaN(b))break}g[I+n*x+e]="avg"===i?y/w:b}}}return m}function xI(t,e,n,r,s=!1,i=!1){const a=Zl(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Zl(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const y=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<y;n+=u){const a=n-g;for(let o=p;o<x;o+=c){const l=o-h,u=m.get(t,n,o,e);u>w&&(w=u,v=s?i?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:a*d+l)}}a.set(v,t,n,o,e)}}return a}function wI(t,e,n,r,s,i){const a=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,y="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Zl(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],$=s.outShape[4];for(let e=0;e<s.batchSize;++e){const n=e*v,x=e*r[0];for(let e=0;e<s.inChannels;++e)for(let v=0;v<s.outDepth;++v){const C=v*a-m;let N=C;for(;N<0;)N+=u;const S=Math.min(s.inDepth,d+C),E=n+v*k;for(let n=0;n<s.outHeight;++n){const a=n*o-g;let d=a;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+a),v=E+n*I;for(let n=0;n<s.outWidth;++n){const a=n*l-b;let o=a;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+a),g=v+n*$;let k=y,I=0,C=0;for(let n=N;n<S;n+=u){const s=x+n*r[1];for(let n=d;n<m;n+=c){const a=s+n*r[2];for(let n=o;n<p;n+=h){const s=t[a+n*r[3]+e];if("max"===i&&s>k?k=s:"avg"===i&&(I+=s,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+e]="avg"===i?I/C:k}}}}return x}const vI={kernelName:Ps,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;uk(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;Br(Zu(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Wu(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&jr(u.inShape,u.outShape))c=gk({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=us(s.shape),r=yI(t,s.shape,s.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},kI={kernelName:Ws,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;uk(s,"avgPool3d");const c=Vu(s.shape,i,a,1,o,l,u),h=wI(n.data.get(s.dataId).values,s.shape,s.dtype,us(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},II={kernelName:Vs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;uk([s,i],"avgPool3DGrad");const c=Vu(i.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,$=k-1-c.padInfo.left,C=v-1-c.padInfo.top,N=Zl(i.shape,"float32"),S=1/(f*m*g),E=n.bufferSync(s);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const i=n-I,a=r-C,o=s-$;let l=0;for(let n=0;n<w;n+=b){const r=(i+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=y){const s=(a+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const i=(o+n)/p;i<0||i>=c.outWidth||Math.floor(i)!==i||(l+=E.get(t,r,s,i,e))}}}N.set(l*S,t,n,r,s,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},$I={kernelName:Bs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i;uk([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Wu(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,w=b-1-c.padInfo.top,v=Zl(a.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,$=Zl(s.shape,"float32",I);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,i=r-x;let a=0;for(let n=0;n<b;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=g){const s=(i+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(a+=$.get(t,r,s,e))}}v.set(a*k,t,n,r,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},CI={kernelName:Ti,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:i,offset:a,mean:o,variance:l}=e;Br(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Br(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Br(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),uk([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,b=p.length,y=d.length,x=h.length;let w=0,v=0,k=0,I=0;for(let t=0;t<c.length;++t)m[t]=f[w++]+(c[t]-h[v++])*p[k++]/Math.sqrt(d[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=b&&(k=0),I>=y&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function NI(t,e,n,r,s){const i=xu(r,e,n),a=Gr(n),o=us(r);if(i){const n=wu(e,o);return"string"===s?t.slice(n,n+a):t.subarray(n,n+a)}const l=Zl(r,s,"string"===s?Tp(t):t),u=Zl(n,s);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),r=n.map(((t,n)=>t+e[n]));u.set(l.get(...r),...n)}return"string"===s?Rp(u.values):u.values}function SI(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:a}=r;uk(s,"slice");const[o,l]=vu(s,i,a);ou(s,o,l);const u=NI(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const EI={kernelName:Ba,backendName:"cpu",kernelFunc:SI},AI={kernelName:Gs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:a}=r;uk([s],"batchToSpaceND");const o=i.reduce(((t,e)=>t*e)),l=Qd(s.shape,i,o),u=tp(l.length,i.length),c=ep(s.shape,i,o),h=np(a,i.length),d=rp(c,a,i.length),p=Vk({inputs:{x:s},backend:n,attrs:{shape:l}}),f=eI({inputs:{x:p},backend:n,attrs:{perm:u}}),m=Vk({inputs:{x:f},backend:n,attrs:{shape:c}}),g=SI({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function TI(t,e,n,r,s){const i=Gr(r),a=ps(s,n);for(let n=0;n<t.length;n++){const r=t[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(a[r]+=i>0?e[n]:1)}return a}function RI(t,e,n,r=!1){const s=t.shape[0],i=t.shape[1],a=Zl([s,n],e.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=t.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?a.set(1,o,i):e.size>0?a.set(a.get(o,i)+e.get(o,s),o,i):a.set(a.get(o,i)+1,o,i))}return a}const FI={kernelName:js,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a}=r,o=TI(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}};function _I(t){return(e,n,r)=>{const s=Qr(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}const DI=_I((t=>Math.ceil(t))),MI=pk(qs,DI),OI={kernelName:qs,backendName:"cpu",kernelFunc:MI},LI=dk(Ks,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),zI={kernelName:Ks,backendName:"cpu",kernelFunc:LI},PI={kernelName:Ys,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(Gr(e.shape)),s=n.data.get(e.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let t=0;t<o.length;t++){const e=o[t],n=l[t];r[t]=Math.hypot(e,n)}return n.makeOutput(r,e.shape,"float32")}};function BI(t,e,n,r){const s=ts(n,Gr(e));if(r&&"string"!==n){let e=0;t.forEach((t=>{const n=Gr(t.shape);s.set(t.vals,e),e+=n}))}else{let r=0;t.forEach((t=>{const i="string"===n?Tp(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+r;for(let e=0;e<t.shape[1];++e)s[o+e]=i[a++]}r+=t.shape[1]}))}return s}function WI(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const VI={kernelName:Li,backendName:"cpu",kernelFunc:WI};function UI(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=Zr(s,e[0].shape)[0];let a=Xd(e.map((t=>t.shape)),i);if(0===Gr(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>Gr(t.shape)>0));if(1===o.length)return gk({inputs:{x:o[0]},backend:n});if(Kd(o.map((t=>t.shape)),i),"complex64"===o[0].dtype){const t=o.map((t=>Fk({inputs:{input:t},backend:n}))),e=o.map((t=>WI({inputs:{input:t},backend:n}))),r=UI({inputs:t,backend:n,attrs:{axis:i}}),s=UI({inputs:e,backend:n,attrs:{axis:i}}),a=Ak({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const l=o.map((t=>{const e=Gr(t.shape.slice(i));return Vk({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),u=l.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));a=Xd(l.map((t=>t.shape)),1);const c=1===l[0].shape[0],h=BI(u,a,e[0].dtype,c),d=Xd(o.map((t=>t.shape)),i),p=n.makeTensorInfo(d,e[0].dtype,h);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}const GI={kernelName:Zs,backendName:"cpu",kernelFunc:UI};function jI(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;uk([s,i],"conv2d");const h=Ju(l),d=Uu(s.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new Po(d.outShape,s.dtype),v=us(s.shape),k=us(i.shape),I=v[0],$=x?v[1]:v[2],C=x?v[2]:1,N=x?1:v[1],S=w.strides[0],E=x?w.strides[1]:w.strides[2],A=x?w.strides[2]:1,T=x?1:w.strides[1],R=n.data.get(s.dataId).values,F=n.data.get(i.dataId).values,_=w.values;for(let t=0;t<d.batchSize;++t){const e=t*I,n=t*S;for(let t=0;t<d.outHeight;++t){const r=n+t*E,s=t*d.strideHeight-y;for(let t=0;t<p;++t){const n=s+t*m;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*$;for(let t=0;t<d.outWidth;++t){const e=r+t*A,n=t*d.strideWidth-b;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=d.inWidth)continue;const s=a+r*C;let o=i+t*k[1];for(let t=0;t<d.inChannels;++t){const n=R[s+t*N];for(let t=0;t<d.outChannels;++t)_[e+t*T]+=n*F[o+t];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,_)}const HI={kernelName:Js,backendName:"cpu",kernelFunc:jI},qI={kernelName:Qs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;uk([s,i],"conv2dBackpropFilter");const h=Ju(l),d=Uu(s.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,y=new Po(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new Po(s.shape,s.dtype,v),$=new Po(i.shape,i.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((w-t)/p)),n=Math.min(d.outHeight,(d.inHeight+w-t)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),i=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*p-w;for(let t=s;t<i;++t){const n=r+t*f-x;l+=b?I.get(u,e,n,a)*$.get(u,c,t,o):I.get(u,a,e,n)*$.get(u,o,c,t)}}y.set(l,t,r,a,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},KI={kernelName:ti,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;uk([s,i],"conv2dBackpropInput");const h=us(i.shape),d=us(s.shape);let p=Ju(u);const f=Uu(a,i.shape,o,1,l,c,!1,p),m=new Po(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,y=n.data.get(i.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:$,inChannels:C,inHeight:N,inWidth:S,outChannels:E,outHeight:A,outWidth:T,strideHeight:R,strideWidth:F}=f;p=f.dataFormat;const _=I-1-f.padInfo.top,D=$-1-f.padInfo.left,M="channelsLast"===p,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let t=0;t<k;++t)for(let e=0;e<C;++e)for(let n=0;n<N;++n){const r=n-_,s=Math.max(0,Math.ceil(r/R)),i=Math.min(A,(I+r)/R);for(let a=0;a<S;++a){const o=a-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min(T,($+o)/F);let c=0;for(let n=s;n<i;++n){const s=n*R-r;for(let r=l;r<u;++r){const i=B*t+W*n+V*r,a=x*(I-1-s)+w*($-1-(r*F-o))+v*e;for(let t=0;t<E;++t)c+=b[i+U*t]*y[a+t]}}g[O*t+L*n+z*a+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},XI={kernelName:ei,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r;uk([s,i],"conv3d");const u=Gu(s.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,y=g.left,x=g.top,w=new Po(u.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=w.values,$=us(s.shape),C=us(i.shape);for(let t=0;t<u.batchSize;++t){const e=t*$[0],n=t*w.strides[0];for(let t=0;t<u.outDepth;++t){const r=n+t*w.strides[1],s=t*u.strideDepth-b;for(let t=0;t<c;++t){const n=s+t*p;if(n<0||n>=u.inDepth)continue;const i=t*C[0],a=e+n*$[1];for(let t=0;t<u.outHeight;++t){const e=r+t*w.strides[2],n=t*u.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=u.inHeight)continue;const s=i+t*C[1],o=a+r*$[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,r=t*u.strideWidth-y;for(let t=0;t<d;++t){const e=r+t*m;if(e<0||e>=u.inWidth)continue;const i=s+t*C[2],a=o+e*u.inChannels;let l=i;for(let t=0;t<u.inChannels;++t){const e=v[a+t];for(let t=0;t<u.outChannels;++t)I[n+t]+=e*k[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},YI={kernelName:ni,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r;uk([s,i],"conv3dBackpropFilterV2");const u=us(s.shape),c=us(i.shape),h=Gu(s.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,y=new Po(h.filterShape,"float32"),x=y.values,[w,v,k,I]=y.strides,$=n.data.get(i.dataId).values,[C,N,S,E]=c,A=n.data.get(s.dataId).values,[T,R,F,_]=u,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((D-t)/d)),n=Math.min(h.outDepth,(h.inDepth+D-t)/d),r=t*w;for(let s=0;s<g;++s){const i=Math.max(0,Math.ceil((O-s)/p)),a=Math.min(h.outHeight,(h.inHeight+O-s)/p),o=s*v+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*T,b=m*C;for(let m=e;m<n;++m){const e=(t+m*d-D)*R+h,n=m*N+b;for(let t=i;t<a;++t){const i=(s+t*p-O)*F+e,a=t*S+n;for(let t=l;t<u;++t){const e=t*E+a;g+=A[(r+t*f-M)*_+i+o]*$[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},ZI={kernelName:ri,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r;uk([s],"conv3dBackpropInputV2");const u=us(s.shape),c=us(i.shape),h=Gu(l,i.shape,o,1,a),d=new Po(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,y=n.data.get(s.dataId).values,[x,w,v,k]=u,I=n.data.get(i.dataId).values,[$,C,N,S]=c,{batchSize:E,filterDepth:A,filterHeight:T,filterWidth:R,inChannels:F,inDepth:_,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=A-1-h.padInfo.front,G=T-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let t=0;t<E;++t)for(let e=0;e<F;++e)for(let n=0;n<_;++n){const r=n-U,s=Math.max(0,Math.ceil(r/B)),i=Math.min(L,(A+r)/B);for(let a=0;a<D;++a){const o=a-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(T+o)/W);for(let c=0;c<M;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),E=Math.min(P,(R+h)/V);let F=0;for(let n=s;n<i;++n){const s=n*B-r;for(let r=l;r<u;++r){const i=r*W-o;for(let a=d;a<E;++a){const o=x*t+w*n+v*r+k*a,l=$*(A-1-s)+C*(T-1-i)+N*(R-1-(a*V-h))+S*e;for(let t=0;t<O;++t)F+=y[o+t]*I[l+t]}}}p[f*t+m*n+g*a+b*c+e]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},JI=dk(si,(t=>Math.cos(t))),QI={kernelName:si,backendName:"cpu",kernelFunc:JI},t$=dk(ii,(t=>Math.cosh(t))),e$={kernelName:ii,backendName:"cpu",kernelFunc:t$},n$={kernelName:oi,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=i.shape[0],[m,g]=o,b=Zl([f,m,g,p],"float32"),y=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,v=us(s.shape),k=us(b.shape);for(let t=0;t<f;t++){const e=4*t,n=y[e],r=y[e+1],s=y[e+2],i=y[e+3],a=x[t];if(a>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(i-r)*(d-1)/(g-1):0;for(let e=0;e<m;e++){const c=m>1?n*(h-1)+e*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+e*k[1]+t*k[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(d-1)+l*f:.5*(r+i)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+e*k[1]+t*k[0];b.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let i=r+h*v[2]+n*v[1]+a*v[0];const u=w[i];i=r+m*v[2]+n*v[1]+a*v[0];const c=w[i];i=r+h*v[2]+s*v[1]+a*v[0];const d=w[i];i=r+m*v[2]+s*v[1]+a*v[0];const p=u+(c-u)*y,f=d+(w[i]-d)*y;i=r+l*k[2]+e*k[1]+t*k[0],b.values[i]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+e*k[1]+t*k[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*v[2]+l*v[1]+a*v[0],i=r+n*k[2]+e*k[1]+t*k[0];b.values[i]=w[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},r$={kernelName:ai,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;uk(s,"cumsum");const l=th([i],s.shape.length);let u=s;null!=l&&(u=eI({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=nh(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Jo(u.dtype,"int32"),d=ps(Gr(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?0:p[n];else{const r=m(t,e-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const t=eI({inputs:{x:g},backend:n,attrs:{perm:eh(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},s$={kernelName:li,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const t=TI(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,t)}if(2===s.shape.length){const t=RI(n.bufferSync(s),n.bufferSync(i),a,o);return n.makeTensorInfo(t.shape,i.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},i$={kernelName:ui,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:a}=r;Br("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`)),Br(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*i,d=u*i,p=c/(i*i),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let t=0;t<o;++t)for(let e=0;e<h;++e){const n=Math.floor(e/i),r=e%i;for(let e=0;e<d;++e){const s=Math.floor(e/i),a=(r*i+e%i)*p;for(let e=0;e<p;++e){const r=e+a+c*(s+u*(n+l*t));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function a$(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;uk([s,i],"depthwiseConv2DNative");const c=us(s.shape),h=us(i.shape);let d=l;null==d&&(d=[1,1]),Br(Zu(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=Uu(s.shape,i.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=p,x=y.left,w=y.top,v=p.outChannels/p.inChannels,k=new Po(p.outShape,s.dtype),I=n.data.get(s.dataId).values,$=n.data.get(i.dataId).values,C=k.values;for(let t=0;t<p.batchSize;++t){const e=t*c[0],n=t*k.strides[0];for(let t=0;t<p.outHeight;++t){const r=n+t*k.strides[1],s=t*p.strideHeight-x;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=p.inHeight)continue;const i=t*h[0],a=e+n*c[1];for(let t=0;t<p.outWidth;++t){const e=r+t*k.strides[2],n=t*p.strideWidth-w;for(let t=0;t<m;++t){const r=n+t*b;if(r<0||r>=p.inWidth)continue;const s=i+t*h[1],o=a+r*p.inChannels;let l=e,u=s;for(let t=0;t<p.inChannels;++t){const e=I[o+t];for(let t=0;t<v;++t)C[l+t]+=e*$[u+t];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const o$={kernelName:ci,backendName:"cpu",kernelFunc:a$},l$={kernelName:hi,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;uk([s,i],"depthwiseConv2dNativeBackpropFilter");const h=Uu(s.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Po(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new Po(s.shape,s.dtype,w),k=n.data.get(i.dataId).values,I=new Po(i.shape,i.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((y-t)/d)),n=Math.min(h.outHeight,(h.inHeight+y-t)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((b-r)/p)),i=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/x),l=a%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*d-y;for(let t=s;t<i;++t){const n=r+t*p-b;u+=v.get(l,e,n,o)*I.get(l,c,t,a)}}g.set(u,t,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},u$={kernelName:di,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;uk([s,i],"depthwiseConv2DNativeBackpropInput");const h=us(s.shape),d=us(i.shape),p=Uu(c,i.shape,a,o,l,u,!0),f=new Po(p.inShape,"float32"),m=f.values,[g,b,y]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,I=n.data.get(i.dataId).values,[$,C,N]=d,{batchSize:S,filterHeight:E,filterWidth:A,inChannels:T,inHeight:R,inWidth:F,outChannels:_,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=p,z=E-1-p.padInfo.top,P=A-1-p.padInfo.left,B=_/T;for(let t=0;t<S;++t)for(let e=0;e<T;++e)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),i=Math.min(D,(E+r)/O);for(let a=0;a<F;++a){const o=a-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(A+o)/L);let c=0;for(let n=s;n<i;++n){const s=n*O-r;for(let r=l;r<u;++r){const i=w*t+v*n+k*r,a=$*(E-1-s)+C*(A-1-(r*L-o))+N*e;for(let t=0;t<B;++t)c+=x[i+(e*B+t)]*I[a+t]}}m[g*t+b*n+y*a+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},c$={kernelName:pi,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=Gr(r.shape),i=n.data.get(r.dataId).values,a=Zl([s,s],r.dtype),o=a.values;for(let t=0;t<i.length;t++)o[t*s+t]=i[t];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},h$={kernelName:fi,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:$,dilationWidth:C,outShape:N}=Bu(r.shape,s.shape,i,a,"NHWC",o),S=Gr(N),E=N.length,A=ts(r.dtype,S);for(let t=0;t<p;++t)for(let e=0;e<b;++e){const n=e*w-x.top;for(let i=0;i<y;++i){const a=i*v-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const i=n+e*$;if(i>=0&&i<f)for(let n=0;n<I;++n){const p=a+n*C;if(p>=0&&p<m){const a=gs([t,i,p,o],c,us(r.shape)),f=gs([e,n,o],d,us(s.shape)),m=u[a]+h[f];m>l&&(l=m)}}}A[gs([t,e,i,o],E,us(N))]=l}}}return{dataId:l.write(So(A,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},d$={kernelName:gi,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=hs(r.shape,u.data.get(r.dataId).values),h=hs(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:C}=Bu(r.shape,s.shape,a,o,"NHWC",l);Br(i.rank===C.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${C.length}, but got ${i.rank}`));const N=hs(C,u.data.get(i.dataId).values),S=fs(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<g;++e){const n=e*x-y.top;for(let r=0;r<b;++r){const s=r*w-y.left;for(let i=0;i<m;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<v;++e){const r=n+e*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*$;if(u>=0&&u<f){const s=c[t][r][u][i]+h[e][n][i];s>a&&(a=s,o=e,l=n)}}}S[o][l][i]+=N[t][e][r][i]}}}return{dataId:u.write(So(S,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},p$={kernelName:mi,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=hs(r.shape,u.data.get(r.dataId).values),h=hs(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:C}=Bu(r.shape,s.shape,a,o,"NHWC",l);Br(i.rank===C.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${C.length}, but got ${i.rank}`));const N=hs(C,u.data.get(i.dataId).values),S=fs(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<g;++e){const n=e*x-y.top;for(let r=0;r<b;++r){const s=r*w-y.left;for(let i=0;i<m;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let e=0;e<v;++e){const r=n+e*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*$;if(u>=0&&u<f){const s=c[t][r][u][i]+h[e][n][i];s>a&&(a=s,o=r,l=u)}}}S[t][o][l][i]+=N[t][e][r][i]}}}return{dataId:u.write(So(S,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},f$={kernelName:xi,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e;uk([r,s],"eluGrad");const i=new Float32Array(Gr(s.shape)),a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let t=0;t<a.length;++t){const e=a[t];i[t]=e>=1?o[t]:o[t]*(e+1)}return n.makeTensorInfo(s.shape,"float32",i)}},m$=wk(((t,e)=>t===e?1:0)),g$=Ok(vi,m$,null,"bool"),b$={kernelName:vi,backendName:"cpu",kernelFunc:g$},y$=cp,x$=hp,w$=dp,v$=pp,k$=fp,I$=mp,$$=dk(wi,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+y$*n);return e*(1-((((I$*r+k$)*r+v$)*r+w$)*r+x$)*r*Math.exp(-n*n))})),C$={kernelName:wi,backendName:"cpu",kernelFunc:$$},N$=_I((t=>Math.exp(t))),S$=pk(ki,N$),E$={kernelName:ki,backendName:"cpu",kernelFunc:S$};function A$(t){const{inputs:e,backend:n,attrs:r}=t,{input:s}=e,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(Br(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),Vk({inputs:{x:s},backend:n,attrs:{shape:o}})}const T$={kernelName:Ii,backendName:"cpu",kernelFunc:A$},R$=_I((t=>Math.expm1(t))),F$=pk($i,R$),_$={kernelName:$i,backendName:"cpu",kernelFunc:F$},D$=wk(((t,e)=>t*e)),M$=Lk(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),O$=Ok(ha,D$,M$),L$={kernelName:ha,backendName:"cpu",kernelFunc:O$},z$=wk(((t,e)=>t/e)),P$=Ok(bi,z$),B$={kernelName:bi,backendName:"cpu",kernelFunc:P$},W$=wk(((t,e)=>t-e)),V$=Lk(((t,e,n,r)=>({real:t-n,imag:e-r}))),U$=Ok(Qa,W$,V$),G$={kernelName:Qa,backendName:"cpu",kernelFunc:U$};function j$(t,e,n){const r=t.shape,s=r[0],i=r[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],c=Gr(u),h=Qr("float32",c),d=Qr("float32",c);for(let t=0;t<s;t++){const r=SI({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,i]}}),s=SI({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,i]}}),a=Ak({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=H$(a,e,n),p=yp(u,c);for(let e=0;e<i;e++){const n=kp(p,e);h[t*i+e]=n.real,d[t*i+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=Ak({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function H$(t,e,n){const r=Gr(t.shape),s=n.data.get(t.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=q$(i,a,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",s.real),e=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",No(r,"float32")),a=gk({inputs:{x:i},backend:n}),l=B$.kernelFunc({inputs:{a:t,b:i},backend:n}),u=B$.kernelFunc({inputs:{a:e,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}var o;return xp(function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let i=0,a=0;for(let r=0;r<e;r++){const o=Cp(s*r,e,n),l=kp(t,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),Ip(r,i,a,s)}return r}(yp(i,a),r,e))}function q$(t,e,n,r,s){if(1===n)return{real:t,imag:e};const i=yp(t,e),a=n/2,o=wp(i),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=Ak({inputs:{real:h,imag:d},backend:s}),f=vp(i),m=f.real,g=f.imag,b=[m.length],y=s.makeTensorInfo(b,"float32",m),x=s.makeTensorInfo(b,"float32",g),w=Ak({inputs:{real:y,imag:x},backend:s}),v=q$(l,u,a,r,s),k=v.real,I=v.imag,$=[k.length],C=s.makeTensorInfo($,"float32",k),N=s.makeTensorInfo($,"float32",I),S=Ak({inputs:{real:C,imag:N},backend:s}),E=q$(m,g,a,r,s),A=E.real,T=E.imag,R=[A.length],F=s.makeTensorInfo(R,"float32",A),_=s.makeTensorInfo(R,"float32",T),D=Ak({inputs:{real:F,imag:_},backend:s}),M=$p(n,r),O=[M.real.length],L=s.makeTensorInfo(O,"float32",M.real),z=s.makeTensorInfo(O,"float32",M.imag),P=Ak({inputs:{real:L,imag:z},backend:s}),B=O$({inputs:{a:P,b:D},backend:s}),W=Bk({inputs:{a:S,b:B},backend:s}),V=U$({inputs:{a:S,b:B},backend:s}),U=Fk({inputs:{input:W},backend:s}),G=Fk({inputs:{input:V},backend:s}),j=WI({inputs:{input:W},backend:s}),H=WI({inputs:{input:V},backend:s}),q=UI({inputs:[U,G],backend:s,attrs:{axis:0}}),K=UI({inputs:[j,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const K$={kernelName:Ci,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=Gr(r.shape),i=r.shape[r.shape.length-1],a=Vk({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=j$(a,!1,n),l=Vk({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function X$(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:i}=n,a=i||as(s),o=ts(a,Gr(r));return function(t,e,n){t.fill(e)}(o,s),e.makeTensorInfo(r,a,o)}const Y$={kernelName:Ni,backendName:"cpu",kernelFunc:X$},Z$={kernelName:Si,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,i=Qr(r.dtype,Gr(r.shape)),[a,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=[a,t,r,o][2],d=Math.round(l-h),p=e+n+s+o;let f=c[p];d>=0&&d<l&&(f=c[e+n+d*u+o]),i[p]=f}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},J$=_I((t=>Math.floor(t))),Q$=pk(Ei,J$),tC={kernelName:Ei,backendName:"cpu",kernelFunc:Q$},eC=wk(((t,e)=>Math.floor(t/e))),nC=Ok(Ai,eC,null,"int32"),rC={kernelName:Ai,backendName:"cpu",kernelFunc:nC},sC={kernelName:go,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=jI({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;m=Bk({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=Ek(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}},iC={kernelName:bo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=a$({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;m=Bk({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=Ek(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}},aC={kernelName:Fi,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=Gr(r.shape),a=s.shape,o=a[a.length-1],[l,u,c,h]=sp(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=Zl([u,c],r.dtype),p=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=[];let n=0;for(let r=0;r<o;r++){const s=p[t*o+r];n+=s*h[r],e.push(s)}if(n<0||n>=i/c)throw new Error(`Invalid indices: ${e} does not index into ${r.shape}`);for(let e=0;e<c;e++)d.values[t*c+e]=f[n*c+e]}return n.makeTensorInfo(l,d.dtype,d.values)}};function oC(t,e,n){const r=Zl(n,t.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),i=s[0],a=s[2],o=e.locToIndex([i,a]);s[2]=e.values[o];const l=t.locToIndex(s);r.values[n]=t.values[l]}return r}const lC={kernelName:Ri,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:a,batchDims:o}=r;uk([s,i],"gatherV2");let l=o;null==o&&(l=0);const u=Gr(i.shape),c=Ap(s,i,Zr(a,s.shape)[0],l),h=Vk({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=Vk({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(d),m=oC(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},uC=wk(((t,e)=>t>e?1:0)),cC=Ok(_i,uC,null,"bool"),hC={kernelName:_i,backendName:"cpu",kernelFunc:cC},dC=wk(((t,e)=>t>=e?1:0)),pC=Ok(Di,dC,null,"bool"),fC={kernelName:Di,backendName:"cpu",kernelFunc:pC},mC={kernelName:Oi,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=Gr(r.shape),i=r.shape[r.shape.length-1],a=Vk({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=j$(a,!0,n),l=Vk({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},gC=dk(zi,(t=>Number.isFinite(t)?1:0),"bool"),bC={kernelName:zi,backendName:"cpu",kernelFunc:gC},yC=dk(Pi,(t=>Math.abs(t)===1/0?1:0),"bool"),xC={kernelName:Pi,backendName:"cpu",kernelFunc:yC},wC=dk(Bi,(t=>Number.isNaN(t)?1:0),"bool"),vC={kernelName:Bi,backendName:"cpu",kernelFunc:wC},kC=wk(((t,e)=>t<e?1:0)),IC=Ok(Vi,kC,null,"bool"),$C={kernelName:Vi,backendName:"cpu",kernelFunc:IC},CC=wk(((t,e)=>t<=e?1:0)),NC=Ok(Ui,CC,null,"bool"),SC={kernelName:Ui,backendName:"cpu",kernelFunc:NC};function EC(t,e,n){const r=(e-t)/(n-1),s=ps(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return s}const AC={kernelName:Gi,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,a=EC(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}},TC=_I((t=>Math.log(t))),RC=pk(ji,TC),FC={kernelName:ji,backendName:"cpu",kernelFunc:RC},_C=dk(Hi,(t=>Math.log1p(t))),DC={kernelName:Hi,backendName:"cpu",kernelFunc:_C},MC=wk(((t,e)=>t&&e)),OC=Ok(qi,MC,null,"bool"),LC={kernelName:qi,backendName:"cpu",kernelFunc:OC},zC=dk(Ki,(t=>t?0:1),"bool"),PC={kernelName:Ki,backendName:"cpu",kernelFunc:zC},BC=wk(((t,e)=>t||e)),WC=Ok(Xi,BC,null,"bool"),VC={kernelName:Xi,backendName:"cpu",kernelFunc:WC},UC={kernelName:Yi,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r;uk(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=Gr(s.shape),p=new Float32Array(d);function f(t){const e=t%u;let n=t-e+Math.max(0,e-i);const r=t-e+Math.min(e+i,c);let s=0;for(;n<=r;n++){const t=h[n];s+=t*t}return s}for(let t=0;t<d;t++){const e=f(t),n=h[t]*Math.pow(a+o*e,-l);p[t]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},GC={kernelName:Zi,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r;uk(a,"LRNGrad");const h=Gr(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),b=h;for(let t=0;t<b;t++){const e=t%d,n=t-e+Math.max(0,e-o),r=t-e+Math.min(d,e+o+1);let s=0;for(let t=n;t<r;t++)s+=Math.pow(f[t],2);s=u*s+l;for(let e=n;e<r;e++){let n=-2*u*c*f[e]*m[t]/s;t===e&&(n+=Math.pow(s,-c)),n*=p[t],g[e]+=n}}return n.makeTensorInfo(a.shape,s.dtype,g)}};function jC(t,e,n,r){const s=Qr(r,Gr(n));for(let n=0;n<s.length;++n){const r=n*e;let i=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>i&&(i=e)}s[n]=i}return s}function HC(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=n;let l=s.shape;const u=l.length,c=Zr(i,l);let h=c;const d=th(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[d[e]];p=tI(p,l,s.dtype,d,t),h=nh(h.length,u),l=t}uk(s,"max"),Qc("max",h,u);const[f,m]=Zc(l,h),g=jC(p,Gr(m),f,s.dtype),b=o.write(g,f,s.dtype);let y=f;return a&&(y=Jc(f,c)),{dataId:b,shape:y,dtype:s.dtype}}const qC={kernelName:Ji,backendName:"cpu",kernelFunc:HC},KC=wk(((t,e)=>Math.max(t,e))),XC=Ok(Qi,KC),YC={kernelName:Qi,backendName:"cpu",kernelFunc:XC},ZC={kernelName:ta,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;uk(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;Br(Zu(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Wu(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&jr(u.inShape,u.outShape))c=gk({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=us(s.shape),r=yI(t,s.shape,s.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},JC={kernelName:na,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;uk(s,"maxPool3d");const c=Vu(s.shape,i,a,1,o,l,u),h=wI(n.data.get(s.dataId).values,s.shape,s.dtype,us(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},QC={kernelName:ra,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;uk([s,i],"maxPool3DGrad");const c=Vu(i.shape,a,o,1,l,u),h=function(t,e){const n=Zl(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let b=0;b<e.outDepth;++b){const y=b*r-d;let x=y;for(;x<0;)x+=a;const w=Math.min(e.inDepth,u+y);for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const v=Math.min(e.inHeight,c+u);for(let s=0;s<e.outWidth;++s){const p=s*i-f;let k=p;for(;k<0;)k+=l;const I=Math.min(e.inWidth,h+p);let $=Number.NEGATIVE_INFINITY,C=-1;for(let e=x;e<w;e+=a){const n=e-y;for(let r=d;r<v;r+=o){const s=r-u;for(let i=k;i<I;i+=l){const a=i-p,o=t.get(m,e,r,i,g);o>=$&&($=o,C=n*c*h+s*c+a)}}}n.set(C,m,b,r,s,g)}}}return n}(n.bufferSync(i),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=y-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,$=Zl(i.shape,"float32"),C=n.bufferSync(s);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const i=n-v,a=r-I,o=s-k;let l=0;for(let n=0;n<y;n+=m){const r=(i+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const i=(a+s)/p;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let a=0;a<w;a+=b){const u=(o+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*x*w-1-h.get(t,r,i,u,e)===n*x*w+s*w+a?1:0;0!==d&&(l+=C.get(t,r,i,u,e)*d)}}}$.set(l,t,n,r,s,e)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},tN={kernelName:ea,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:a}=e,o=i;uk([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Wu(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Zl(d.outShape,o.dtype,xI(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Zl(o.shape,"float32"),$=n.data.get(s.dataId).values,C=Zl(s.shape,"float32",$);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,i=r-v;let a=0;for(let n=0;n<x;n+=b){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=y){const o=(i+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*w-1-f.get(t,r,o,e)===n*w+s?1:0;0!==l&&(a+=C.get(t,r,o,e)*l)}}I.set(a,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},eN={kernelName:sa,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;uk(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Wu(r.shape,s,i,[1,1],a),[h,d]=function(t,e,n,r,s){const i=yI(t,0,n,us(e),s,"max"),a=xI(t,e,n,s,!0,r);return[i.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function nN(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;let o;uk(s,"sum"),o="bool"===s.dtype?Dk({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):gk({inputs:{x:s},backend:n});const l=o.shape.length,u=Zr(i,o.shape),c=th(u,l);let h=u,d=o;null!=c&&(d=eI({inputs:{x:o},backend:n,attrs:{perm:c}}),h=nh(h.length,l)),Qc("sum",h,d.shape.length);const[p,f]=Zc(d.shape,h);let m=Rk(n,p,Jo(d.dtype,"int32"));const g=Gr(f),b=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let t=0;t<b.length;++t){const e=t*g;let n=0;for(let t=0;t<g;++t)n+=y[e+t];b[t]=n}if(a){const t=m;m=Vk({inputs:{x:m},backend:n,attrs:{shape:Jc(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const rN={kernelName:qa,backendName:"cpu",kernelFunc:nN},sN={kernelName:ia,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=Zr(i,s.shape),l=Gr(Zc(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=Dk({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=P$({inputs:{a:h,b:c},backend:n});u.push(d);const p=nN({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:a}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},iN={kernelName:aa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;uk(s,"min");const o=Zr(i,s.shape);let l=o;const u=th(l,s.shape.length);let c=s;null!=u&&(c=eI({inputs:{x:s},backend:n,attrs:{perm:u}}),l=nh(l.length,s.shape.length)),Qc("min",l,c.shape.length);const[h,d]=Zc(c.shape,l),p=Gr(d),f=ps(Gr(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];r<n&&(n=r)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=Vk({inputs:{x:g},backend:n,attrs:{shape:Jc(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},aN=wk(((t,e)=>Math.min(t,e))),oN=Ok(oa,aN),lN={kernelName:oa,backendName:"cpu",kernelFunc:oN},uN={kernelName:la,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,mode:a}=r;uk(s,"mirrorPad");const o=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=i.map(((t,e)=>t[0]+s.shape[e])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=us(s.shape),f=Gr(o),m=o.length,g=us(o),b=Qr(s.dtype,f);for(let t=0;t<f;t++){let e=bs(t,m,g);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-c:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+c);e=e.map(((t,e)=>t-l[e]));const n=gs(e,d,p);b[t]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},cN=wk(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),hN=Ok(ua,cN),dN={kernelName:ua,backendName:"cpu",kernelFunc:hN};var pN=n(617);function fN(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,a=s.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=Zr([o],s.shape),u=HC({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Jc(u.shape,l),h=Vk({inputs:{x:u},backend:n,attrs:{shape:c}}),d=U$({inputs:{a:s,b:h},backend:n}),p=S$({inputs:{x:d},backend:n}),f=nN({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=Vk({inputs:{x:f},backend:n,attrs:{shape:c}}),g=P$({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const mN={kernelName:Ya,backendName:"cpu",kernelFunc:fN},gN={kernelName:ca,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r;uk(s,"multinomial");const l=o?s:fN({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],p=ps(Gr(d),"int32");for(let t=0;t<u;++t){const e=t*c,n=new Float32Array(c-1);n[0]=h[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+h[e+t];const r=pN.alea(a.toString()),s=t*i;for(let t=0;t<i;++t){const e=r();p[s+t]=n.length;for(let r=0;r<n.length;r++)if(e<n[r]){p[s+t]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function bN(t,e,n){const r=No(-1,n);return D$([],e,r,t,n)}const yN={kernelName:da,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;uk(r,"neg");const s=n.data.get(r.dataId).values,[i,a]=bN(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}},xN=pd,wN={kernelName:fa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;uk(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=xN(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},vN=fd,kN={kernelName:ma,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;uk(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=vN(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},IN=md,$N={kernelName:ga,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;uk(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=IN(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},CN=wk(((t,e)=>t!==e?1:0)),NN=Ok(pa,CN,null,"bool"),SN={kernelName:pa,backendName:"cpu",kernelFunc:NN},EN={kernelName:ya,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:i,onValue:a,offValue:o}=r;uk(s,"oneHot");const l=Gr(s.shape),u=new Float32Array(l*i);u.fill(o);const c=n.data.get(s.dataId).values;for(let t=0;t<l;++t)c[t]>=0&&c[t]<i&&(u[t*i+c[t]]=a);return n.makeTensorInfo([...s.shape,i],"int32",u)}};function AN(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=Fk({inputs:{input:r},backend:n}),e=AN({inputs:{x:t},backend:n}),s=WI({inputs:{input:r},backend:n}),i=AN({inputs:{x:s},backend:n}),a=Ak({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return X$({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const TN={kernelName:ho,backendName:"cpu",kernelFunc:AN},RN={kernelName:ba,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=Fk({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=WI({inputs:{input:s},backend:r}),a=AN({inputs:{x:i},backend:r}),o=Ak({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return X$({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function FN(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return A$({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{Wr(i,t.shape,"All tensors passed to stack must have matching shapes"),Br(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=UI({inputs:e.map((t=>{const e=A$({inputs:{input:t},backend:n,attrs:{dim:s}});return o.push(e),e})),backend:n,attrs:{axis:s}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const _N={kernelName:xa,backendName:"cpu",kernelFunc:FN},DN={kernelName:wa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:a}=r;uk(s,"pad");const o=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(s.dataId).values,c=Gr(s.shape),h=s.shape.length,d=us(s.shape),p=Gr(o),f=o.length,m=us(o),g=Qr(s.dtype,p);0!==a&&g.fill(a);for(let t=0;t<c;t++)g[gs(bs(t,h,d).map(((t,e)=>t+l[e])),f,m)]=u[t];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},MN=wk(((t,e)=>Math.pow(t,e))),ON=Ok(va,MN),LN={kernelName:va,backendName:"cpu",kernelFunc:ON};function zN(t,e,n,r){const[s,i]=Zc(t,r),a=Jo(e,"int32"),o=ps(Gr(s),a),l=Gr(i);for(let t=0;t<o.length;++t){const e=t*l;let r=1;for(let t=0;t<l;++t)r*=n[e+t];o[t]=r}return{outVals:o,outShape:s,outDtype:a}}const PN={kernelName:Ia,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;uk(s,"prod");const o=s.shape.length,l=Zr(i,s.shape),u=th(l,o);let c=l,h=s;const d=[];null!=u&&(h=eI({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=nh(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=zN(h.shape,h.dtype,p,c);let b=m;return a&&(b=Jc(m,l)),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(b,g,f)}};function BN(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return ps(0,r);const s=ps(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return s}const WN={kernelName:$a,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,dtype:i,step:a}=n,o=BN(r,s,a,i);return e.makeTensorInfo([o.length],i,o)}},VN=dk(Na,(t=>1/t)),UN={kernelName:Na,backendName:"cpu",kernelFunc:VN},GN={kernelName:Ra,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;uk(s,"resizeBilinear");const l=us(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(Gr([h,u,c,f])),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],y=[i&&u>1?u-1:u,i&&c>1?c-1:c];let x=0;const w=b[0]/y[0],v=b[1]/y[1];for(let t=0;t<h;t++)for(let e=0;e<u;e++){let n;n=a?w*(e+.5)-.5:w*e;const r=Math.max(0,Math.floor(n)),s=n-r,i=Math.min(d-1,Math.ceil(n)),o=t*l[0]+r*l[1],u=t*l[0]+i*l[1];for(let t=0;t<c;t++){let e;e=a?v*(t+.5)-.5:v*t;const n=Math.max(0,Math.floor(e)),r=e-n,i=Math.min(p-1,Math.ceil(e)),c=o+n*l[2],h=u+n*l[2],d=o+i*l[2],b=u+i*l[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],i=e+(m[d+t]-e)*r,a=i+(n+(m[b+t]-n)*r-i)*s;g[x++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},jN={kernelName:Fa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r;uk([i,s],"resizeBilinearGrad");const o=us(s.shape),[l,u,c,h]=s.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=m[0]/g[0],y=m[1]/g[1],x=n.data.get(i.dataId).values;let w=0;for(let t=0;t<l;t++){const e=t*o[0];for(let t=0;t<d;t++){const n=t*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),i=e+r*o[1],a=e+s*o[1],l=n-r,d=1-l;for(let t=0;t<p;t++){const e=t*y,n=Math.floor(e),r=Math.min(Math.ceil(e),c-1),s=e-n,u=1-s,p=i+n*o[2],m=i+r*o[2],g=a+n*o[2],b=a+r*o[2],v=d*u,k=d*s,I=l*u,$=l*s;for(let t=0;t<h;t++){const e=x[w++];f[p+t]+=e*v,f[m+t]+=e*k,f[g+t]+=e*I,f[b+t]+=e*$}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},HN={kernelName:Aa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;uk(s,"resizeNearestNeighbor");const l=us(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],y=[i&&u>1?u-1:u,i&&c>1?c-1:c],x=b[0]/y[0],w=b[1]/y[1];let v=0;for(let t=0;t<h;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=a?x*(t+.5):x*t;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=e+r*l[1];for(let t=0;t<c;t++){const e=a?w*(t+.5):w*t;let n=Math.min(p-1,i?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const r=s+n*l[2];for(let t=0;t<f;t++){const e=m[r+t];g[v++]=e}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},qN={kernelName:Ta,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r;uk([i,s],"resizeNearestNeighborGrad");const o=us(s.shape),l=us(i.shape),[u,c,h,d]=s.shape,[,p,f]=i.shape,m=new Float32Array(u*c*h*d),g=n.data.get(i.dataId).values,b=[a&&p>1?c-1:c,a&&f>1?h-1:h],y=[a&&p>1?p-1:p,a&&f>1?f-1:f],x=b[0]/y[0],w=b[1]/y[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,$=2*Math.ceil(k)+2;for(let t=0;t<u;t++){const e=t*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*v),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const i=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-$/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const u=i+s;if(u<0||u>=p)continue;const d=e+u*l[1],m=u*x;if(t===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let t=0;t<$;t++){const e=t+b;if(e<0||e>=f)continue;const s=d+e*l[2],i=e*w;r===Math.min(h-1,a?Math.round(i):Math.floor(i))&&(o+=g[s+n])}}m[i+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},KN={kernelName:Da,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r;uk(s,"reverse");const a=s.shape.length,o=Zr(i,s.shape);if(0===a)return gk({inputs:{x:s},backend:n});const l=new Po(s.shape,s.dtype),u=n.bufferSync(s);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();o.forEach((t=>n[t]=s.shape[t]-1-n[t])),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},XN={kernelName:fo,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=Qr(r.dtype,Gr(r.shape)),[u,c,h,d]=r.shape,[p,f]=Jd(a,c,h),m=Math.sin(s),g=Math.cos(s),b=o.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const o=[u,t,r,a],y=o[2],x=o[1];let w=(y-p)*g-(x-f)*m,v=(y-p)*m+(x-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),w>=0&&w<h&&v>=0&&v<c&&(k=b[e+v*(h*d)+w*d+a]),l[e+n+s+a]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},YN=dk(Ma,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),ZN={kernelName:Ma,backendName:"cpu",kernelFunc:YN},JN=_I((t=>1/Math.sqrt(t))),QN=pk(Oa,JN),tS={kernelName:Oa,backendName:"cpu",kernelFunc:QN};function eS(t,e,n,r,s,i,a,o,l,u){const c=[r/s,s],h=t.values,d=e.values;if(0===r)return Zl(n,e.dtype);const p=Zl(c,e.dtype);p.values.fill(l);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<a;e++){const n=h[t*a+e];i.push(n),l+=n*o[e]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[t*s+n]:p.values[l*s+n]=0===e.rank?d[0]:d[t*s+n]}return p}const nS={kernelName:La,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=op(0,s,a),d=eS(n.bufferSync(s),n.bufferSync(i),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}},rS={kernelName:za,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e;uk([r,s,i],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=Jo(s.dtype,i.dtype),h=ps(Gr(s.shape),c);let d=0;const p=0===a||a>1||1===s.shape.length?1:Gr(s.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<p;e++)1===o[t]?h[d++]=l[t]:h[d++]=u[t];return n.makeTensorInfo(s.shape,c,h)}},sS=lp,iS=up,aS=dk(Pa,(t=>t>=0?iS*t:sS*(Math.exp(t)-1))),oS={kernelName:Pa,backendName:"cpu",kernelFunc:aS},lS=dk(Ga,(t=>1/(1+Math.exp(-t)))),uS={kernelName:Ga,backendName:"cpu",kernelFunc:lS},cS=dk(Ua,(t=>t<0?-1:t>0?1:0)),hS={kernelName:Ua,backendName:"cpu",kernelFunc:cS},dS=dk(Wa,(t=>Math.sin(t))),pS={kernelName:Wa,backendName:"cpu",kernelFunc:dS},fS=dk(Va,(t=>Math.sinh(t))),mS={kernelName:Va,backendName:"cpu",kernelFunc:fS},gS=Math.log(1.1920928955078125e-7)+2,bS=dk(ja,(t=>{const e=t>-gS,n=t<gS,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),yS={kernelName:ja,backendName:"cpu",kernelFunc:bS},xS={kernelName:Ka,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:a}=r;uk([s],"spaceToBatchND");const o=Gr(i),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<s.shape.length;++t)l.push([0,0]);const u=DN.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Qd(u.shape,i,o,!1),h=tp(c.length,i.length,!1),d=ep(u.shape,i,o,!1),p=Vk({inputs:{x:u},backend:n,attrs:{shape:c}}),f=eI({inputs:{x:p},backend:n,attrs:{perm:h}}),m=Vk({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},wS={kernelName:to,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=op(0,s,o),p=eS(n.bufferSync(s),n.bufferSync(i),o,d,c,u,l,h,n.data.get(a.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},vS={kernelName:Xa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=Zr(a,s.shape)[0],l=Np(s,i,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((t=>{const e=[...c];e[o]=t;const r=SI({inputs:{x:s},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,r}))}},kS=dk(Ha,(t=>Math.sqrt(t))),IS={kernelName:Ha,backendName:"cpu",kernelFunc:kS},$S={kernelName:Ja,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;uk(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];i[t]=e*e}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},CS=wk(((t,e)=>{const n=t-e;return n*n})),NS=Ok(Za,CS),SS={kernelName:Za,backendName:"cpu",kernelFunc:NS},ES=dk(po,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),AS={kernelName:po,backendName:"cpu",kernelFunc:ES};function TS(t,e,n,r){const s=Zl(t,e.dtype);for(let t=0;t<s.size;t++){const i=s.indexToLoc(t),a=new Array(i.length);for(let t=0;t<a.length;t++)a[t]=i[t]*n[t]+r[t];s.set(e.get(...a),...i)}return s}const RS={kernelName:eo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;uk(s,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:b,outShape:y}=ku(s.shape,i,a,o,l,u,c,h,d),x=Vk({inputs:{x:s},backend:n,attrs:{shape:b}});let w;if(p){const t=SI({inputs:{x},backend:n,attrs:{begin:f,size:g}});w=Vk({inputs:{x:t},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(t)}else if(y.some((t=>0===t)))w=n.makeTensorInfo(y,s.dtype,[]);else{const t=TS(y,n.bufferSync(x),m,f);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const v=Vk({inputs:{x:w},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),v}},FS=dk(no,(t=>Math.tan(t))),_S={kernelName:no,backendName:"cpu",kernelFunc:FS},DS=dk(ro,(t=>Math.tanh(t)));function MS(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Zl(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const i=t.locToIndex(s);r.values[e]=t.values[i]}return r}function OS(t,e,n,r,s){const i=e[e.length-1],[a,o]=[t.length/i,i],l=Qr(n,a*r),u=Qr("int32",a*r);for(let e=0;e<a;e++){const n=e*o,s=t.subarray(n,n+o),i=[];for(let t=0;t<s.length;t++)i.push({value:s[t],index:t});i.sort(((t,e)=>e.value-t.value));const a=e*r,c=l.subarray(a,a+r),h=u.subarray(a,a+r);for(let t=0;t<r;t++)c[t]=i[t].value,h[t]=i[t].index}const c=e.slice();return c[c.length-1]=r,[Zl(c,n,l),Zl(c,"int32",u)]}function LS(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return zr(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return zr(0,n,e-1)}(t,e);case"nearest":return function(t,e){return zr(0,t,e-1)}(t,e);case"constant":default:return function(t,e){return t}(t)}}function zS(t,e,n,r,s,i,a,o,l,u,c){return 0<=o&&o<e&&0<=l&&l<n?t[a*r+o*s+l*i+u]:c}function PS(t,e,n,r,s,i,a,o,l,u,c){return zS(t,e,n,r,s,i,a,Math.round(o),Math.round(l),u,c)}function BS(t,e,n,r,s,i,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*zS(t,e,n,r,s,i,a,h,d,u,c)+(l-d)*zS(t,e,n,r,s,i,a,h,f,u,c))+(o-h)*((f-l)*zS(t,e,n,r,s,i,a,p,d,u,c)+(l-d)*zS(t,e,n,r,s,i,a,p,f,u,c))}function WS(t,e,n,r){const s=Zr(e,n)[0],i=[1,n[0],1];for(let t=0;t<s;t++)i[0]*=n[t];i[1]=n[s];for(let t=s+1;t<n.length;t++)i[2]*=n[t];const a={},o=new Int32Array(n[s]),l=new Po(i,r,t),u=[],c=1===i[0]&&1===i[2];for(let e=0;e<n[s];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)t.push(l.get(n,e,r));n=t.join(",")}if(void 0!==a[n])o[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,o[e]=t,u.push(e)}}const h=i.slice();h[1]=Object.keys(a).length;const d=new Po(h,r);u.forEach(((t,e)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,t,r),n,e,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const VS=[Hk,Kk,Yk,Jk,Wk,Qk,rI,sI,iI,aI,lI,cI,dI,mI,bI,vI,kI,II,$I,jk,CI,AI,FI,Mk,OI,zI,Tk,PI,GI,qI,KI,HI,YI,ZI,XI,QI,e$,n$,r$,s$,i$,o$,l$,u$,c$,h$,p$,d$,B$,mk,f$,b$,C$,E$,T$,_$,K$,Y$,Z$,tC,rC,sC,iC,aC,lC,hC,fC,bk,mC,VI,bC,xC,vC,xk,$C,SC,AC,FC,DC,LC,PC,VC,UC,GC,YC,ZC,JC,QC,tN,eN,qC,sN,iN,lN,uN,dN,gN,L$,yN,wN,kN,$N,SN,EN,RN,_N,DN,LN,Ik,PN,WN,_k,UN,Ck,Sk,Uk,GN,jN,HN,qN,KN,XN,ZN,tS,nS,rS,oS,uS,hS,pS,mS,EI,mN,yS,xS,wS,vS,IS,$S,SS,AS,RS,G$,rN,_S,{kernelName:ro,backendName:"cpu",kernelFunc:DS},{kernelName:so,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;uk(s,"tile");const a=MS(n.bufferSync(s),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:io,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:a}=r;uk(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=OS(o,s.shape,s.dtype,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},nI,{kernelName:ao,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],b=us(s.shape),y=b[0],x=b[1],w=b[2],v=Qr(s.dtype,Gr(g));v.fill(l);const k=r.data.get(s.dataId).values,I=r.data.get(i.dataId).values;for(let t=0;t<c;++t){const e=1===i.shape[0]?I:I.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let i;const u=e[6]*r+e[7]*n+1;if(0===u)continue;const c=(e[0]*r+e[1]*n+e[2])/u,p=(e[3]*r+e[4]*n+e[5])/u,f=LS(c,d,o),m=LS(p,h,o);switch(a){case"nearest":i=PS(k,h,d,y,x,w,t,m,f,s,l);break;case"bilinear":i=BS(k,h,d,y,x,w,t,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}v[t*y+n*x+r*w+s]=i}return r.makeTensorInfo(g,s.dtype,v)}return{dataId:r.write(v,g,s.dtype),shape:s.shape,dtype:s.dtype}}},{kernelName:lo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;uk(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=WS(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:uo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],l=new Array(a-1);let u=0;for(let t=0;t<a;t++)t!==i&&(l[u++]=s.shape[t]);const c=new Array(a).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(o);for(let t=0;t<d.length;t++){c[i]=t;const e=SI({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[t]=Vk({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}},{kernelName:co,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:a}=r;uk(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-i.shape.length;let c=i;for(let t=0;t<u;++t){const e=A$({inputs:{input:c},backend:n,attrs:{dim:t+1}});c=e,l.push(e)}for(let t=0;t<a;++t){const e=No(t,"int32"),r=n.makeTensorInfo([],"int32",e),i=g$({inputs:{a:r,b:c},backend:n}),a=Dk({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=O$({inputs:{a,b:s},backend:n}),h=nN({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(i),l.push(a),l.push(u),l.push(h)}const h=FN({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},TN];for(const t of VS)Io(t);const US={},GS={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function jS(t){if(!(t in US)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete US[t]}),!1),1===t?e.getContext("webgl",GS)||e.getContext("experimental-webgl",GS):e.getContext("webgl2",GS)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;US[t]=e}const e=US[t];return e.isContextLost()?(delete US[t],jS(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),US[t])}var HS,qS,KS;function XS(t,e){return[e,t]}function YS(t){const e=Gr(t);return qr(Math.ceil(e/4))}function ZS(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function JS(t,e){const n=t;let r,s,i,a,o,l,u,c,h,d;return 2===ws().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=t.RGBA,s=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT),l=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function QS(t,e){const n=e();return ws().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function tE(t){return!!(ws().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function eE(t,e){return uE(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(HS||(HS={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(qS||(qS={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(KS||(KS={}));const nE=/ERROR: [0-9]+:([0-9]+):/g;function rE(t,e){if(QS(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function sE(t,e,n,r,s,i,a){const o=t.getAttribLocation(e,n);return-1!==o&&(QS(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),QS(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,i,a))),QS(t,(()=>t.enableVertexAttribArray(o))),!0)}function iE(t,e,n,r){QS(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),QS(t,(()=>t.activeTexture(t.TEXTURE0+n))),QS(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),QS(t,(()=>t.uniform1i(n,r)))}function aE(t,e,n){QS(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),QS(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function oE(t,e){QS(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),QS(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function lE(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function uE(t,e,n){const r=QS(t,(()=>e()));if(null==r)throw new Error(n);return r}function cE(t,e=2){return Gr(t.slice(0,t.length-e))}function hE(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function dE(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[cE(t),...hE(t)]),e}function pE(t){return t%2==0}function fE(t,e){if(jr(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(pE(n)&&pE(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&pE(t[0])&&pE(e[0])}let mE,gE;function bE(t,e){return null!=t.getExtension(e)}function yE(t){try{if(null!=jS(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function xE(t){const e=JS(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function wE(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&Br("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const vE=ws();function kE(){let t,e,n,r,s,i,a,o,l,u;return 2===ws().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function IE(t,e,n="index"){const r=us(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function $E(t){const e=us(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}vE.registerFlag("HAS_WEBGL",(()=>vE.getNumber("WEBGL_VERSION")>0)),vE.registerFlag("WEBGL_VERSION",(()=>yE(2)?2:yE(1)?1:0)),vE.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),vE.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===vE.get("WEBGL_VERSION"))),vE.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),vE.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),vE.registerFlag("WEBGL_PACK",(()=>vE.getBool("HAS_WEBGL"))),vE.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>vE.getBool("WEBGL_PACK"))),vE.registerFlag("WEBGL_PACK_CLIP",(()=>vE.getBool("WEBGL_PACK"))),vE.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),vE.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>vE.getBool("WEBGL_PACK"))),vE.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>vE.getBool("WEBGL_PACK"))),vE.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>vE.getBool("WEBGL_PACK"))),vE.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>vE.getBool("WEBGL_PACK"))),vE.registerFlag("WEBGL_PACK_REDUCE",(()=>vE.getBool("WEBGL_PACK"))),vE.registerFlag("WEBGL_LAZILY_UNPACK",(()=>vE.getBool("WEBGL_PACK"))),vE.registerFlag("WEBGL_CONV_IM2COL",(()=>vE.getBool("WEBGL_PACK"))),vE.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==mE){const e=jS(t);mE=e.getParameter(e.MAX_TEXTURE_SIZE)}return mE}(vE.getNumber("WEBGL_VERSION")))),vE.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==gE){const e=jS(t);gE=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,gE)}(vE.getNumber("WEBGL_VERSION")))),vE.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=vE.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=jS(t);return e=bE(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:bE(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),vE.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>vE.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!cl())),vE.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=jS(t);if(1===t){if(!bE(e,"OES_texture_float"))return!1}else if(!bE(e,"EXT_color_buffer_float"))return!1;return xE(e)}(vE.getNumber("WEBGL_VERSION")))),vE.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!vE.getBool("WEBGL_FORCE_F16_TEXTURES")&&vE.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),vE.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=jS(t);if(1!==t){if(bE(e,"EXT_color_buffer_float"))return xE(e);const t="EXT_color_buffer_half_float";if(bE(e,t)){const n=e.getExtension(t);return function(t,e){const n=JS(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),i}(e,n)}return!1}return!!bE(e,"OES_texture_float")&&!!bE(e,"WEBGL_color_buffer_float")&&xE(e)}(vE.getNumber("WEBGL_VERSION")))),vE.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=vE.getNumber("WEBGL_VERSION"))&&null!=jS(t).fenceSync;var t})),vE.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>vE.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),vE.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),vE.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>cl()&&vE.getBool("IS_CHROME")?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}));const CE="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class NE{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=HS.DENSE;const e=YS(t),n=kE();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${IE(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class SE{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=HS.DENSE;const e=YS(t),n=kE();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${IE(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class EE{constructor(t){this.variableNames=["A"],this.outTexUsage=qS.DOWNLOAD;const e=kE();this.outputShape=t,this.userCode=`\n      ${CE}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class AE{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=qS.DOWNLOAD;const e=kE();this.outputShape=t,this.userCode=`\n      ${CE}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class TE{constructor(t,e,n=!1){this.variableNames=["A"];const r=kE(),[s,i]=e;this.outputShape=t;let a="result";n&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${$E(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class RE{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=kE(),[s,i]=e;this.outputShape=t;let a="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${$E(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${a}\n\n        ${r.output} = ${o};\n      }\n    `}}function FE(t,e,n,r,s,i){!function(t,e){const n=ws().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return uE(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return QS(t,(()=>t.bindTexture(o,a))),QS(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),QS(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),QS(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),QS(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),QS(t,(()=>t.texImage2D(o,0,r,e,n,0,s,i,null))),QS(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),a}function _E(t){return t.internalFormatFloat}function DE(t){return t.internalFormatHalfFloat}function ME(t){return t.downloadTextureFormat}function OE(t){return t.internalFormatPackedFloat}function LE(t){return t.internalFormatPackedHalfFloat}class zE{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=ws().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){US[t]=e}(e,t)):this.gl=jS(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===ws().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=eE(this.gl,t),bE(this.gl,e))this.textureHalfFloatExtension=eE(this.gl,e);else if(ws().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),bE(this.gl,r))this.colorBufferHalfFloatExtension=eE(this.gl,r);else if(ws().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",bE(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!bE(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=uE(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return QS(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),QS(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=uE(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return QS(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),QS(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return uE(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=JS(this.gl,this.textureHalfFloatExtension)}get debug(){return ws().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;QS(t,(()=>t.finish())),QS(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),QS(t,(()=>t.deleteFramebuffer(this.framebuffer))),QS(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),QS(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),QS(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=XS(e,n);return FE(t,s,i,_E(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=XS(e,n);return FE(t,s,i,DE(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=XS(e,n);return FE(t,s,i,ME(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){QS(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?QS(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):QS(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),QS(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,i){let a,o,l;QS(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*r*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(s),QS(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,a))),QS(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=ZS(e,n);return FE(t,s,i,LE(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=ZS(e,n);return FE(t,s,i,OE(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(oE(this.gl,this.framebuffer),this.outputTexture=null),QS(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,i]=XS(e,n),a=new Uint8Array(e*n*4);return QS(t,(()=>t.readPixels(0,0,s,i,r.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return function(t,e,n,r,s,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=ZS(t,e);return n*r*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();QS(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const i=16*e*n;return QS(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),QS(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),QS(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(ws().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return QS(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=uE(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(QS(t,(()=>t.shaderSource(n,e))),QS(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=nE.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,a=s.map(((t,e)=>Kr((e+1).toString(),i)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${Kr(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),r=function(t){const e=kE();return function(t,e){const n=uE(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(QS(t,(()=>t.shaderSource(n,e))),QS(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),s=function(t){return uE(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return QS(e,(()=>e.attachShader(s,r))),QS(e,(()=>e.attachShader(s,n))),function(t,e){if(QS(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&rE(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return QS(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),sE(t,e,"clipSpacePos",n,3,20,0)&&sE(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&QS(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&rE(this.gl,this.program),QS(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return uE(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),QS(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),iE(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=ZS(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&rE(this.gl,this.program),lE(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),QS(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),QS(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=eE(this.gl,2===ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Xr((()=>this.disposed||this.isQueryAvailable(t,ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||Xr((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),aE(this.gl,t,this.framebuffer),this.debug&&lE(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(aE(this.gl,this.outputTexture,this.framebuffer),this.debug&&lE(this.gl)):oE(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;aE(r,t,this.framebuffer),this.debug&&lE(r),this.outputTexture=t,QS(r,(()=>r.viewport(0,0,e,n))),QS(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),QS(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:PE}=r;function BE(t,e,n,r){const s=[];t.forEach((t=>{const e=Gr(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))}));const i=s.join("\n"),a=t.map((t=>function(t,e,n=!1){let r="";r+=n?VE(t):WE(t);const s=t.shapeInfo.logicalShape,i=e.logicalShape;return s.length<=i.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=PE(t.shapeInfo.logicalShape,e.logicalShape),l=XE(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+u]}`)).join(", ");let p="return outputValue;";const f=1===Gr(t.shapeInfo.logicalShape),m=1===Gr(e.logicalShape);if(1!==i||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&jr(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=XE(l),c=PE(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${p[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e)),r}(t,e,r))).join("\n"),o=e.texShape,l=kE(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${UE}\n    ${GE}\n    ${jE}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(jr(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let i=s,a="",o="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],a=`\n      int b${e} = index / ${i};\n      index -= b${e} * ${i};\n    `+a,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return jr(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=IE(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=IE(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=IE(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=IE(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=HE),[d,u,h,i,c,a,n].join("\n")}function WE(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[i,a]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${a}, ${qE(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${KE(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const a=qE(e);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&jr(e,s)){const t=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:a}=Jr(e),o=i;if(o.length<e.length){const e=["row","col"];return`\n      ${WE(YE(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${ZE(e,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${KE(t)}\n      }\n    `;const l=s[0],u=s[1],c=qE(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],i=e[2],{newShape:a,keptDims:o}=Jr(e),l=a;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${WE(YE(t,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${ZE(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${KE(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],d=t.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===i&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${qE(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],i=e[2]*s,a=e[1]*i,{newShape:o,keptDims:l}=Jr(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${WE(YE(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${ZE(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${s}, 1)));\n        ${KE(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],d=c[1];if(d===a&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${qE(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=Jr(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${WE(YE(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ZE(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${KE(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${qE(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=Jr(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${WE(YE(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ZE(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${KE(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${qE(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function VE(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${kE().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=kE();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=s[0],a=s[1],o=kE();if(null!=s&&jr(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${VE(YE(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${ZE(s,n)});\n        }\n      `}const a=i[0],o=i[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${kE().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=a[0],l=a[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],d=`b${t} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${kE().texture2D}(${r}, uv);\n    }\n  `}(t)}}const UE="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",GE="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",jE="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",HE="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function qE(t){return`offset${t}`}function KE(t){const e=t.name,n=Gr(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function XE(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function YE(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function ZE(t,e){return e.map((e=>t[e])).join(", ")}function JE(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!jr(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const a=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!jr(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}const{addImpl:QE,bincountImpl:tA,bincountReduceImpl:eA,ceilImpl:nA,concatImpl:rA,expImpl:sA,expm1Impl:iA,floorImpl:aA,gatherV2Impl:oA,greaterImpl:lA,lessImpl:uA,linSpaceImpl:cA,logImpl:hA,maxImpl:dA,maximumImpl:pA,minimumImpl:fA,multiplyImpl:mA,negImpl:gA,prodImpl:bA,rangeImpl:yA,rsqrtImpl:xA,simpleAbsImpl:wA,sliceImpl:vA,stridedSliceImpl:kA,subImpl:IA,tileImpl:$A,topKImpl:CA,transposeImpl:NA,uniqueImpl:SA}=s;function EA(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function AA(t,e){return 1===e?[t]:EA(t,e)}class TA{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=AA("rc",e),r=XE(e),s=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),i=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),a=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)i=`${e[e.length-1-n]},`+i;n.push(i)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}}class RA{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${IE(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${$E(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class FA{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=DA(e,n),s=MA(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=_A(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let a;return r===KS.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===KS.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===KS.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===KS.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===KS.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=DA(n,r),i=MA(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=_A(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=ws().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function _A(t,e,n,r,s){const i=function(t,e){switch(t){case KS.PACKED_2X2_FLOAT32:return OE(e);case KS.PACKED_2X2_FLOAT16:return LE(e);case KS.UNPACKED_FLOAT32:return _E(e);case KS.UNPACKED_FLOAT16:return DE(e);case KS.PACKED_4X1_UNSIGNED_BYTE:return ME(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let a;if(s){const[e,n]=ZS(t[0],t[1]);a=e*n}else{const[e,n]=XS(t[0],t[1]);a=e*n}return a*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,i)}function DA(t,e){if(t===qS.UPLOAD)return KS.PACKED_2X2_FLOAT32;if(t===qS.RENDER||null==t)return function(t){return ws().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?KS.PACKED_2X2_FLOAT32:KS.UNPACKED_FLOAT32:t?KS.PACKED_2X2_FLOAT16:KS.UNPACKED_FLOAT16}(e);if(t===qS.DOWNLOAD||t===qS.PIXELS)return KS.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function MA(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class OA{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const LA="return abs(x);",zA="return x;";class PA{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class BA{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=AA("rc",e),r=XE(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const WA=Fp,VA={};class UA extends Mr{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!ws().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=jS(ws().getNumber("WEBGL_VERSION"));this.binaryCache=((e=ws().getNumber("WEBGL_VERSION"))in VA||(VA[e]={}),VA[e]),this.gpgpu=new zE(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new FA(this.gpgpu),this.numMBBeforeWarning=null==ws().global.screen?1024:ws().global.screen.height*ws().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Dr(this,Nu())}nextDataId(){return UA.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((ws().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ws().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:qS.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,s){if(ws().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:qS.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new PA(a,zA):new OA(a,zA);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Eo()),c="complex64"===r?yp(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Eo()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=e;if(null!=s){let e;e=o?new PA(r,zA):new OA(r,zA);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!ws().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ws().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&ws().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...YS(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=yp(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=Gr(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Nu().removeDataId(t,this),this.pendingDeletes--),h}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>To(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Zl(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!tE(n)){if(ws().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=Gr(e);if(ws().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...YS(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=ws().getBool("WEBGL_PACK")&&!0===r,a=i?dE(e):e,o=i?new AE(a):new EE(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=Ur(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=Ur(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Eo(),endMs:null}}endTimer(t){return ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Eo(),t)}async getQueryTime(t){if(ws().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return ws().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Nu().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return ws().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&Gr(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){gp("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return WA(t.shape,e)}packedUnaryOp(t,e,n){const r=new PA(t.shape,e),s=this.compileAndRun(r,[t],n);return Nu().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=wA(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(ws().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,LA,t.dtype);const e=new OA(t.shape,LA),n=this.compileAndRun(e,[t]);return Nu().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&ss(n[0])){const s=n.map((t=>Ao(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Nu().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new BA(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new TA(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[cE(t.shape),...hE(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[cE(e),...hE(e)],i=new RA(s,n),a=this.runWebGLProgram(i,[r],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,i=dE(r);let a;return a=n?new SE(i):new NE(i),{dtype:s,shape:r,dataId:this.runWebGLProgram(a,[{shape:i,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const i=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(i.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===HS.DENSE){const e=YS(t.outputShape);a.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===Gr(i.shape))return a.values=Qr(i.dtype,0),i;const o=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&Gr(e.shape)<=ws().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!fE(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const u={shape:i.shape,texData:a,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let i=t.constructor.name;return i+="_"+r+"_"+s,i}(t,l,u),h=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=e.userCode,i=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),a=i.map((t=>t.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=BE(i,o,s,e.packedInputs),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===ws().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;d[r]=t.getUniformLocation(u,r,s),d[`offset${r}`]=t.getUniformLocation(u,`offset${r}`,s)}return{program:e,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,l,u))),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),function(t,e,n,r,s){JE(e.inShapeInfos,n),JE([e.outShapeInfo],[r]);const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i,a[0],a[1]):t.setOutputMatrixTexture(i,a[0],a[1]),t.setProgram(e.webGLProgram),1===ws().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],a=e.uniformLocations[`offset${s}`];if(null!=i)if(n.isUniform)if(Gr(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,r)})),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),d&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)}));const f=ws().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const t=Eo();t-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!ws().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===s){const t=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),t}return i}compileAndRun(t,e,n,r,s=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ws().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Eu((()=>{if(!ws().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=ws().getBool("DEBUG");ws().set("DEBUG",!1);const e=this.abs(_u(1e-8)).dataSync()[0];if(ws().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=Eo());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=ws().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?Pr(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=Jr(t);t=e.newShape}let r=Gr(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=cE(t);let n=2,s=2;return t.length&&([n,s]=hE(t)),r=e*(n/2)*(s/2),qr(r).map((t=>2*t))}return qr(r)}(n,o),e.texShape=c),null!=s){const t=dE(n);let i,a=c[1],h=c[0];const d=s instanceof Uint8Array;o?([a,h]=ZS(c[0],c[1]),i=new RE(t,[h,a],d)):i=new TE(t,[h,a],d);const p=this.makeTensorInfo([h,a],r);this.texData.get(p.dataId).usage=d?qS.PIXELS:qS.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),a,h,s);const f=!0,m=this.runWebGLProgram(i,[p],r,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),e.values=null,l&&(this.uploadWaitMs+=Eo()-u)}else{const t=this.acquireTexture(c,a,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*rs(e)}}UA.nextDataId=0,hl()&&Ru("webgl",(()=>new UA),2);class GA{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Ic(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class jA{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ic(e,n);const s=this.outputShape.length;let i="";if(r)if(0===s||1===Gr(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${XE(s)} coords = getOutputCoords();\n        `,1===s)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=AA("coords",s);i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function HA(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const qA={kernelName:Mi,backendName:"webgl",kernelFunc:HA};function KA(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=HA({inputs:{x:r},backend:n}),l=HA({inputs:{x:s},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const XA={kernelName:Xs,backendName:"webgl",kernelFunc:KA},YA="return (a < 0.) ? b * a : a;",ZA="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",JA={kernelName:Wi,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r,a=n.makeTensorInfo([],"float32",No(i,"float32")),o=ws().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jA(ZA,s.shape,a.shape):new GA(YA,s.shape,a.shape),l=n.runWebGLProgram(o,[s,a],s.dtype);return n.disposeIntermediateTensorInfo(a),l}},QA="return (a < 0.) ? b * a : a;",tT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",eT={kernelName:ka,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,i=ws().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jA(tT,r.shape,s.shape):new GA(QA,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}};function nT({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const t=o.texData.get(a.dataId),e=n(t.values,l);return o.makeTensorInfo(a.shape,l,e)}let u;return u=ws().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new PA(a.shape,e):new OA(a.shape,t),o.runWebGLProgram(u,[a],l)}}function rT({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new GA(t,l.shape,u.shape);return c.runWebGLProgram(a,[s,i],Jo(n.dtype,r.dtype))})),i=KA({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||Jo(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=s){const t=c.texData.get(l.dataId),e=c.texData.get(u.dataId),[n,r]=s(l.shape,u.shape,t.values,e.values,h),i=c.makeTensorInfo(r,h);return c.texData.get(i.dataId).values=n,i}let d;return d=ws().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new jA(e,l.shape,u.shape,n):new GA(t,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function sT(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?tT:QA;if("leakyrelu"===t)return e?ZA:YA;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class iT{constructor(t,e,n,r=!1,s=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class aT{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ic(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const oT="return a * b;";function lT(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,i=Jo(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),i=new aT("return areal * breal - aimag * bimag;",r.shape,s.shape),a=new aT("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=KA({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[a,o]=mA(r.shape,s.shape,t.values,e.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=ws().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jA(oT,r.shape,s.shape):new GA(oT,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}const uT={kernelName:ha,backendName:"webgl",kernelFunc:lT};function cT(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,a=n,o=Gr(s.shape),l=Yr(i,o),u=Gr(l);Br(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(s.dataId);return!c.isPacked||fE(s.shape,l)||null!==c.texture&&fE(c.shape,l)?(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(t,e,n){const r=[cE(t.shape),...hE(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[cE(e),...hE(e)],a=new RA(i,r),o=n.runWebGLProgram(a,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(s,l,a)}const hT={kernelName:Ea,backendName:"webgl",kernelFunc:cT};class dT{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${Hr(t)?t.toPrecision(2):t}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class pT{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function fT(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=Zd(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let i=t;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,h;c="mean"===n?0===a?new dT({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new dT({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new pT({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=i,i=r.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return i}class mT{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=XE(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class gT{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=XE(this.rank),s=EA("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=s[t];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function bT(t,e,n){const r=ws().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gT(t.shape,e):new mT(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function yT(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;return function(t,e,n,r){const s=e,i=t.shape.length,a=Zr(s,t.shape);let o=a;const l=th(o,i),u=null!=l;let c=t;u&&(c=bT(t,l,r),o=nh(o.length,i)),Qc("sum",o,i);const[h,d]=Zc(c.shape,o);let p=h;n&&(p=Jc(h,a));const f=Gr(d),m=cT({inputs:{x:c},attrs:{shape:[Gr(t.shape)/f,f]},backend:r}),g=fT(m,Qo(t.dtype),"sum",r),b=cT({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),b}(s,i,a,n)}const xT={kernelName:qa,backendName:"webgl",kernelFunc:yT};function wT(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:i}=r,a=n,o=s.shape.length,l=new Array(o);for(let t=0;t<l.length;t++)l[t]=s.shape[i[t]];let u;if(a.shouldExecuteOnCPU([s])){const t=a.texData.get(s.dataId).values,e=NA(t,s.shape,s.dtype,i,l);u=a.makeTensorInfo(l,s.dtype),a.texData.get(u.dataId).values=e}else u=bT(s,i,a);return u}const vT={kernelName:oo,backendName:"webgl",kernelFunc:wT};function kT({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=r?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),b=Gr(m),y=Gr(g);Br(u>=2&&c>=2&&(b===y||1===b||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(b>y?t.shape.slice(0,-2):e.shape.slice(0,-2)).concat([p,f]);Br(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[b,h,p]:[b,p,h],v=r?[y,f,d]:[y,d,f],k=cT({inputs:{x:t},backend:s,attrs:{shape:w}}),I=cT({inputs:{x:e},backend:s,attrs:{shape:v}}),$=[k,I],C=Math.max(b,y),N=n?k.shape[1]:k.shape[2],S=null!=i,E=null!=a,A="leakyrelu"===l,T=null!=l?sT(l,!0):null;let R;if((1===p||1===f)&&N>1e3&&!1===(S||E||A||null!=T)){let t=k,e=I;n&&(t=wT({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),$.push(t)),r&&(e=wT({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),$.push(e));const i=1===f;let a=t;1!==f&&(a=cT({inputs:{x:t},backend:s,attrs:{shape:[C,N,1]}}),$.push(a));const o=1===f?2:1;let l=e;i&&(l=cT({inputs:{x:e},backend:s,attrs:{shape:[C,1,N]}}),$.push(l));const u=lT({inputs:{a,b:l},backend:s});R=yT({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),$.push(u)}else{const l=Jo(t.dtype,e.dtype),u=new iT(w,v,[C,p,f],n,r,S,T,E,A),c=[k,I];if(null!=i&&c.push(i),E&&c.push(a),A){const t=s.makeTensorInfo([],"float32",No(o,"float32"));c.push(t),$.push(t)}R=s.runWebGLProgram(u,c,l)}const F=cT({inputs:{x:R},backend:s,attrs:{shape:x}});$.push(R);for(const t of $)s.disposeIntermediateTensorInfo(t);return F}const IT={kernelName:mo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return kT({a:s,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},$T="return abs(x);",CT={kernelName:Cs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=wA(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let s;return s=ws().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new PA(r.shape,$T):new OA(r.shape,$T),n.runWebGLProgram(s,[r],r.dtype)}},NT=nT({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ST={kernelName:Ns,backendName:"webgl",kernelFunc:NT},ET=nT({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),AT={kernelName:Ss,backendName:"webgl",kernelFunc:ET},TT="return a + b;",RT=rT({opSnippet:TT,packedOpSnippet:TT,supportsComplex:!0,cpuKernelImpl:QE}),FT={kernelName:Es,backendName:"webgl",kernelFunc:RT};class _T{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class DT{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const MT={kernelName:As,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,s=n;if(1===s.length)return HA({inputs:{x:s[0]},backend:r});if(s.length>ws().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:r}),i=t({inputs:s.slice(e),backend:r});return t({inputs:[n,i],backend:r})}const i=s.map((t=>t.dtype)).reduce(((t,e)=>Jo(t,e))),a=s.map((t=>t.shape)),o=ws().getBool("WEBGL_PACK")?new DT(s[0].shape,a):new _T(s[0].shape,a);return r.runWebGLProgram(o,s,i)}},OT={kernelName:Ts,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=Zr(i,s.shape);let u=l;const c=th(u,o);let h=s;null!=c&&(h=wT({inputs:{x:s},backend:n,attrs:{perm:c}}),u=nh(u.length,o)),Qc("all",u,o);const[d,p]=Zc(h.shape,u),f=cT({inputs:{x:h},backend:n,attrs:{shape:[-1,Gr(p)]}}),m=fT(f,f.dtype,"all",n);let g;return g=cT(a?{inputs:{x:m},backend:n,attrs:{shape:Jc(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},LT={kernelName:Rs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=Zr(i,s.shape);let u=l;const c=th(u,o);let h=s;null!=c&&(h=wT({inputs:{x:s},backend:n,attrs:{perm:c}}),u=nh(u.length,o)),Qc("any",u,o);const[d,p]=Zc(h.shape,u),f=cT({inputs:{x:h},backend:n,attrs:{shape:[-1,Gr(p)]}}),m=fT(f,f.dtype,"any",n);let g;return g=cT(a?{inputs:{x:m},backend:n,attrs:{shape:Jc(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class zT{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class PT{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Br(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=XE(o),u=AA("coords",o);let c,h;if(1===i){h=o+1;const t=XE(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((t=>"int "+t)),m=AA("sourceLocR",h-1).concat("inIdx.r"),g=AA("sourceLocG",h-1).concat("inIdx.g"),b=AA("sourceLocB",h-1).concat("inIdx.b"),y=AA("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function BT(t,e,n,r=null){let s=e.shape[0],i=e.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const a=Zd(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},l=new zT(o,n,null==r),u=[e];null!=r&&u.push(r);const c=t.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=BT(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function WT(t,e,n,r=null){const s=null!=r?r.shape:e.shape,i=Zd(s[s.length-1]),a=new PT(s,i,n,null==r),o=null==r?[e]:[e,r],l=t.runWebGLProgram(a,o,"int32");if(l.shape.length===e.shape.length){const r=WT(t,e,n,l);return t.disposeIntermediateTensorInfo(l),r}return l}function VT(t,e,n,r){const s=[n];if(Qc("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!ws().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[i,a]=Zc(e.shape,s),o=Gr(a),l=cT({inputs:{x:e},backend:t,attrs:{shape:[-1,o]}});n.push(l);const u=BT(t,l,r);n.push(u);const c=cT({inputs:{x:u},backend:t,attrs:{shape:i}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),c}return WT(t,e,r)}const UT={kernelName:Fs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let a=Zr(i,s.shape);const o=th(a,s.shape.length);let l=s;const u=[];null!=o&&(l=wT({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=nh(a.length,l.shape.length)),Qc("argMax",[a[0]],l.shape.length);const c=VT(n,l,a[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},GT={kernelName:_s,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let a=Zr(i,s.shape);const o=th(a,s.shape.length);let l=s;const u=[];null!=o&&(l=wT({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=nh(a.length,l.shape.length)),Qc("argMin",[a[0]],l.shape.length);const c=VT(n,l,a[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},jT=nT({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),HT={kernelName:Ds,backendName:"webgl",kernelFunc:jT},qT=nT({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),KT={kernelName:Ms,backendName:"webgl",kernelFunc:qT},XT=nT({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),YT={kernelName:Os,backendName:"webgl",kernelFunc:XT},ZT=rT({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),JT={kernelName:zs,backendName:"webgl",kernelFunc:ZT},QT=nT({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),tR={kernelName:Ls,backendName:"webgl",kernelFunc:QT};class eR{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / count");const x=4*Math.floor(i/4),w=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class nR{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),k=i%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const rR={kernelName:Ps,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;wE(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;Br(Zu(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Wu(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&jr(u.inShape,u.outShape))return HA({inputs:{x:s},backend:n});const c=new eR(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},sR={kernelName:Ws,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Vu(s.shape,i,a,[1,1,1],o,l,u),h=new nR(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class iR{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aR{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const oR={kernelName:Vs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Vu(a.shape,o,l,[1,1,1],u,c),d=new aR(h);return n.runWebGLProgram(d,[s],a.dtype)}},lR={kernelName:Bs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i;wE([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Wu(a.shape,o,l,1,u),h=new iR(c);return n.runWebGLProgram(h,[s],a.dtype)}},uR={kernelName:Us,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;return kT({a:s,b:i,transposeA:a,transposeB:o,backend:n})}};class cR{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ic(t,e),Ic(t,n);let a="0.0";null!=r&&(Ic(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Ic(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class hR{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ic(t,e),Ic(t,n);let a="vec4(0.0)";null!=r&&(Ic(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Ic(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const dR={kernelName:Ti,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=t;Br(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Br(null==a||s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Br(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,i];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=ws().getBool("WEBGL_PACK_NORMALIZATION")?new hR(r.shape,s.shape,i.shape,c,h,l):new cR(r.shape,s.shape,i.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)}};class pR{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=XE(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return fR.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${fR[e]} = start[${e}] + coords.${fR[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const fR=["x","y","z","w","u","v"];class mR{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=XE(this.rank),n=AA("coords",this.rank),r=AA("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function gR(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:a}=r,[o,l]=vu(s,i,a);if(ou(s,o,l),0===Gr(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=vA(t.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,e)}const{isPacked:u}=n.texData.get(s.dataId),c=xu(s.shape,o,l);if(u||!c){const t=ws().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mR(l):new pR(l),e=t.getCustomSetupFunc(o);return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),function(t,e,n,r){const s=r.texData.get(t.dataId),i=r.makeTensorInfo(n,t.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=t.dtype;let o=wu(e,us(t.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||t.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),i}(s,o,l,n)}const bR={kernelName:Ba,backendName:"webgl",kernelFunc:gR},yR={kernelName:Gs,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:a}=r;Br(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=Qd(s.shape,i,o),u=tp(l.length,i.length),c=ep(s.shape,i,o),h=np(a,i.length),d=rp(c,a,i.length),p=[],f=cT({inputs:{x:s},backend:n,attrs:{shape:l}}),m=wT({inputs:{x:f},backend:n,attrs:{perm:u}}),g=cT({inputs:{x:m},backend:n,attrs:{shape:c}}),b=gR({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},xR={kernelName:js,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a}=r,o=n.readSync(s.dataId),l=n.readSync(i.dataId),u=tA(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}},wR=rT({opSnippet:"return float(a != b);",dtype:"bool"}),vR={kernelName:pa,backendName:"webgl",kernelFunc:wR};function kR(t){const{inputs:e,backend:n}=t,{input:r}=e;return HA({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const IR={kernelName:Ca,backendName:"webgl",kernelFunc:kR},$R={kernelName:Hs,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:i}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===i.dtype)return HA({inputs:{x:i},backend:r});const e=lh(i.shape),n=t({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=KA({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const e=kR({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(e),n}if(!es(i.dtype,a)){const t=HA({inputs:{x:i},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a)return function(t,e){const n=new OA(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===a){const t=r.makeTensorInfo([],"bool",Qr("bool",1)),e=wR({inputs:{a:i,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},CR="return ceil(x);",NR=nT({opSnippet:CR,packedOpSnippet:CR,cpuKernelImpl:nA}),SR={kernelName:qs,backendName:"webgl",kernelFunc:NR};class ER{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class AR{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const TR={kernelName:Ks,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:i,clipValueMax:a}=r;let o;o=ws().getBool("WEBGL_PACK_CLIP")?new AR(s.shape):new ER(s.shape);const l=o.getCustomSetupFunc(i,a);return n.runWebGLProgram(o,[s],s.dtype,l)}};class RR{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function FR(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const _R={kernelName:Ys,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),i=new RR(r.shape),a=[FR(r,s.complexTensorInfos.real),FR(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class DR{constructor(t){this.outputShape=[],this.outputShape=Xd(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class MR{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Xd(t,e);const n=this.outputShape,r=n.length,s=XE(r),i=AA("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${OR(a,l,e)}),\n            vec2(${OR(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${OR(a,l,p)}),\n          vec2(${OR(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function OR(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function LR(t){const{inputs:e,backend:n}=t,{input:r}=e;return HA({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const zR={kernelName:Li,backendName:"webgl",kernelFunc:LR};function PR(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>kR({inputs:{input:t},backend:n}))),s=t.map((t=>LR({inputs:{input:t},backend:n}))),i=PR(r,e,n),a=PR(s,e,n),o=KA({inputs:{real:i,imag:a},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}if("string"===r){const{tensors2D:s,outShape:i}=BR(t,e,n),a=s.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),o=1===s[0].shape[0],l=rA(a,i,r,o),u=Xd(t.map((t=>t.shape)),e),c=n.makeTensorInfo(u,r,l);return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}if(t.length>ws().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=PR(t.slice(0,r),e,n),i=PR(t.slice(r),e,n),a=PR([s,i],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}if(ws().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new MR(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const{tensors2D:s,outShape:i}=BR(t,e,n),a=new DR(s.map((t=>t.shape))),o=n.runWebGLProgram(a,s,r);s.forEach((t=>n.disposeIntermediateTensorInfo(t)));const l=cT({inputs:{x:o},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(o),l}function BR(t,e,n){const r=Xd(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>cT({inputs:{x:t},attrs:{shape:[-1,Gr(t.shape.slice(e))]},backend:n}))),outShape:r}}function WR(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=Zr(s,e[0].shape)[0],a=Xd(e.map((t=>t.shape)),i);if(0===Gr(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>Gr(t.shape)>0));return 1===o.length?HA({inputs:{x:o[0]},backend:n}):(Kd(o.map((t=>t.shape)),i),PR(o,i,n))}const VR={kernelName:Zs,backendName:"webgl",kernelFunc:WR};class UR{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,a=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class GR{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jR{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:i,strideHeight:a,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=kE(),g="channelsLast"===h,b=g?0:1,y=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${a} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function HR({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.shape,u=r.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===d)&&c>1e3,b=l[2]%2!=0&&!!u.isPacked;if(!g&&ws().getBool("WEBGL_LAZILY_UNPACK")&&ws().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&b){const c=p?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,Br(fE(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const g=cT({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const b=kT({a:h,b:g,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),y=r.texData.get(b.dataId);Br(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,y.shape=n.outShape,f=HA({inputs:{x:b},backend:r}),f.shape=n.outShape,m.push(b)}else{const u=cT({inputs:{x:t},backend:r,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=cT({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=kT({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});f=cT({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const t of m)r.disposeIntermediateTensorInfo(t);return f}function qR({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,b=[m,g],y=[],x=cT({inputs:{x:t},backend:r,attrs:{shape:t.shape.slice(1)}}),w=cT({inputs:{x:e},backend:r,attrs:{shape:[1,m,Gr(e.shape)/m]}});y.push(x),y.push(w);const v=new jR(b,x.shape,n),k=r.runWebGLProgram(v,[x],"float32"),I=cT({inputs:{x:k},backend:r,attrs:{shape:[1,b[0],b[1]]}});y.push(k),y.push(I);const $=null!=s,C=null!=i,N="leakyrelu"===o,S=o?sT(o,!0):null,E=new iT(I.shape,w.shape,[1,g,n.outChannels],!0,!1,$,S,C,N),A=[I,w];if(s&&A.push(s),C&&A.push(i),N){const t=r.makeTensorInfo([],"float32",No(a,"float32"));A.push(t),y.push(t)}const T=r.runWebGLProgram(E,A,"float32"),R=cT({inputs:{x:T},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});y.push(T);for(const t of y)r.disposeIntermediateTensorInfo(t);return R}const KR={kernelName:Js,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Ju(l),d=Uu(s.shape,i.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(ws().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=qR({x:s,filter:i,convInfo:d,backend:n});else{const t=new UR(d);p=n.runWebGLProgram(t,[s,i],"float32")}else p=HR({x:s,filter:i,convInfo:d,backend:n});const f=cT({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class XR{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YR{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZR{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class JR{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const QR={kernelName:Qs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Ju(l),d=Uu(s.shape,c,a,1,o,u,!1,h),p=new XR(d);return n.runWebGLProgram(p,[s,i],"float32")}},tF={kernelName:ti,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Ju(u),d=Uu(a,i.shape,o,1,l,c,!1,h),p=new YR(d);return n.runWebGLProgram(p,[s,i],"float32")}},eF={kernelName:ei,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=Gu(s.shape,i.shape,a,l,o),c=new GR(u);return n.runWebGLProgram(c,[s,i],"float32")}},nF={kernelName:ni,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r,u=Gu(s.shape,l,a,1,o),c=new ZR(u);return n.runWebGLProgram(c,[s,i],"float32")}},rF={kernelName:ri,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r,u=Gu(l,i.shape,o,1,a),c=new JR(u);return n.runWebGLProgram(c,[s,i],"float32")}},sF=nT({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),iF={kernelName:si,backendName:"webgl",kernelFunc:sF},aF=nT({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),oF={kernelName:ii,backendName:"webgl",kernelFunc:aF};class lF{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const uF={kernelName:oi,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,c=new lF(s.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[s,i,a],"float32")}};class cF{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${hF(r,"coords")})`,i=t[t.length-1];let a="",o="";e?(a=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${i}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${XE(r)} coords = getOutputCoords();\n        int end = ${dF(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${dF(r,"coords")} = idx;\n          val += getX(${hF(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function hF(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function dF(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}const pF={kernelName:ai,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r,l=s.shape.length,u=th([i],l);let c=s;null!=u&&(c=wT({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=nh(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${i}`);const d=c.shape[h];let p=HA({inputs:{x:c},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){const e=new cF(c.shape,!1,o),r=e.getCustomSetupFunc(t),s=p;p=n.runWebGLProgram(e,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(a){const t=new cF(c.shape,a,o),e=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=u){const t=wT({inputs:{x:p},backend:n,attrs:{perm:eh(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),t}return p}},fF={kernelName:li,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(i.dataId),r=tA(t,e,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(i),r=eA(t,e,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class mF{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const gF={kernelName:ui,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:a}=r;Br(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const o=s.shape[0],l="NHWC"===a?s.shape[1]:s.shape[2],u="NHWC"===a?s.shape[2]:s.shape[3],c="NHWC"===a?s.shape[3]:s.shape[1],h=l*i,d=u*i,p=c/(i*i),f=new mF("NHWC"===a?[o,h,d,p]:[o,p,h,d],i,a);return n.runWebGLProgram(f,[s],s.dtype)}};class bF{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.inHeight,a=t.inWidth,o=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let g="",b="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${i}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class yF{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const i=t.inHeight,a=t.inWidth,o=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<p;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<p;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*d};\n        `,1===c){if(n<f&&(g+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${i} && xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=l%2==0?Pr(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(g+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${i} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${i}) {\n            `,l%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<p;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let b="",y="";n&&(b=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${y}\n        setOutput(result);\n      }\n    `}}const xF={kernelName:ci,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),Br(Zu(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=Uu(s.shape,i.shape,a,c,o,u,!0);let d;return d=ws().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new yF(h):new bF(h),n.runWebGLProgram(d,[s,i],"float32")}};class wF{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vF{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const kF={kernelName:hi,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Uu(s.shape,c,a,o,l,u,!0),d=new wF(h);return n.runWebGLProgram(d,[s,i],"float32")}},IF={kernelName:di,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Uu(c,i.shape,a,o,l,u,!0),d=new vF(h);return n.runWebGLProgram(d,[s,i],"float32")}};class $F{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const CF={kernelName:pi,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],i=Gr(r.shape),a=cT({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new $F(i),l=n.runWebGLProgram(o,[a],a.dtype),u=cT({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class NF{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const SF={kernelName:fi,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=Bu(s.shape,i.shape,a,o,"NHWC",l);let c;const h=new NF(u);c=n.runWebGLProgram(h,[s,i],"float32");const d=cT({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},EF=nT({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),AF={kernelName:yi,backendName:"webgl",kernelFunc:EF},TF={kernelName:xi,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,i=ws().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jA("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new GA("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},RF=rT({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),FF={kernelName:vi,backendName:"webgl",kernelFunc:RF},_F=nT({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${cp};\n  float a1 = ${hp};\n  float a2 = ${dp};\n  float a3 = ${pp};\n  float a4 = ${fp};\n  float a5 = ${mp};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),DF={kernelName:wi,backendName:"webgl",kernelFunc:_F},MF="return exp(x);",OF=nT({opSnippet:MF,packedOpSnippet:MF,cpuKernelImpl:sA}),LF={kernelName:ki,backendName:"webgl",kernelFunc:OF};function zF(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(Br(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+s+1),o.splice(l,0,1),cT({inputs:{x:i},backend:r,attrs:{shape:o}})}const PF={kernelName:Ii,backendName:"webgl",kernelFunc:zF},BF="return exp(x) - 1.0;",WF=nT({opSnippet:BF,packedOpSnippet:BF,cpuKernelImpl:iA}),VF={kernelName:$i,backendName:"webgl",kernelFunc:WF};class UF{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function GF(t,e,n){const r=n.texData.get(t.dataId),s=Gr(t.shape),i=t.shape[t.shape.length-1],a=cT({inputs:{x:t},backend:n,attrs:{shape:[s/i,i]}}),o=a.shape,l=new UF("real",o,e),u=new UF("imag",o,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=KA({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=cT({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const jF={kernelName:Ci,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return GF(r,!1,n)}};class HF{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function qF(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||as(s),"string"===i){const t=ts(i,Gr(r));return t.fill(s),e.makeTensorInfo(r,i,t)}{const t=new HF(r,s),n=t.getCustomSetupFunc(s);return e.runWebGLProgram(t,[],i,n)}}const KF={kernelName:Ni,backendName:"webgl",kernelFunc:qF};class XF{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const YF={kernelName:Si,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new XF(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},ZF="return floor(x);",JF=nT({opSnippet:ZF,packedOpSnippet:ZF,cpuKernelImpl:aA}),QF={kernelName:Ei,backendName:"webgl",kernelFunc:JF},t_=rT({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),e_={kernelName:Ai,backendName:"webgl",kernelFunc:t_};class n_{constructor(t){this.variableNames=["A"];const e=kE(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class r_{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=kE(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const s_={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,i];(o||a)&&(null==i_&&(i_=document.createElement("canvas").getContext("2d")),i_.canvas.width=l,i_.canvas.height=u,i_.drawImage(s,0,0,l,u),s=i_.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=qS.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=ws().getBool("WEBGL_PACK")?new r_(h):new n_(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let i_;const a_={kernelName:go,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Ju(c),g=Uu(s.shape,i.shape,l,h,u,d,!1,m);let b;const y=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(ws().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=qR({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const t=null!=a,e=null!=o,r="leakyrelu"===p,l=p?sT(p,!1):null,u=new UR(g,t,l,e,r),c=[s,i];if(a&&c.push(a),o&&c.push(o),r){const t=n.makeTensorInfo([],"float32",No(f,"float32"));c.push(t),y.push(t)}b=n.runWebGLProgram(u,c,"float32")}else b=HR({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=cT({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},o_={kernelName:bo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),Br(Zu(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Uu(s.shape,i.shape,l,m,u,h,!0),b=ws().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=d?sT(d,b):null,x=[s,i],w=null!=a,v=null!=o,k="leakyrelu"===d;if(w&&x.push(a),v&&x.push(o),k){const t=n.makeTensorInfo([],"float32",No(p,"float32"));x.push(t),f.push(t)}let I;I=b?new yF(g,w,y,v,k):new bF(g,w,y,v,k);const $=n.runWebGLProgram(I,x,"float32");return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),$}};class l_{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=XE(e.length),s=XE(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const u_={kernelName:Fi,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=s.shape,a=i[i.length-1],[o,l,u,c]=sp(r,s),h=cT({inputs:{x:s},backend:n,attrs:{shape:[l,a]}}),d=cT({inputs:{x:r},backend:n,attrs:{shape:[Gr(r.shape)/u,u]}}),p=new l_(a,c,[l,u]),f=n.runWebGLProgram(p,[d,h],d.dtype),m=cT({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class c_{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=XE(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[e]}`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const h_={kernelName:Ri,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:a,batchDims:o}=r,l=Ap(s,i,Zr(a,s.shape)[0],o),u=Gr(i.shape),c=[],h=cT({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=cT({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const t=n.bufferSync(d),e=n.bufferSync(h),r=oA(e,t,p);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new c_(h.shape,p),m=n.runWebGLProgram(f,[h,d],h.dtype);c.push(m);const g=cT({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},d_=rT({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:lA,dtype:"bool"}),p_={kernelName:_i,backendName:"webgl",kernelFunc:d_},f_=rT({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),m_={kernelName:Di,backendName:"webgl",kernelFunc:f_},g_={kernelName:Oi,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return GF(r,!0,n)}},b_=nT({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),y_={kernelName:zi,backendName:"webgl",kernelFunc:b_},x_=nT({opSnippet:"return float(isinf(x));",dtype:"bool"}),w_={kernelName:Pi,backendName:"webgl",kernelFunc:x_},v_=nT({opSnippet:"return float(isnan(x));",dtype:"bool"}),k_={kernelName:Bi,backendName:"webgl",kernelFunc:v_},I_=rT({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:uA,dtype:"bool"}),$_={kernelName:Vi,backendName:"webgl",kernelFunc:I_},C_=rT({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),N_={kernelName:Ui,backendName:"webgl",kernelFunc:C_},S_={kernelName:Gi,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,a=cA(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}},E_=nT({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:hA}),A_={kernelName:ji,backendName:"webgl",kernelFunc:E_},T_=nT({opSnippet:"return log(1.0 + x);"}),R_={kernelName:Hi,backendName:"webgl",kernelFunc:T_},F_=rT({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),__={kernelName:qi,backendName:"webgl",kernelFunc:F_},D_=nT({opSnippet:"return float(!(x >= 1.0));"}),M_={kernelName:Ki,backendName:"webgl",kernelFunc:D_},O_=rT({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),L_={kernelName:Xi,backendName:"webgl",kernelFunc:O_};class z_{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class P_{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const B_={kernelName:Yi,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r,u=ws().getBool("WEBGL_PACK_NORMALIZATION")?new P_(s.shape,i,a,o,l):new z_(s.shape,i,a,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class W_{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const V_={kernelName:Zi,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new W_(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,i,a],s.dtype)}};function U_(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,l=Zr(i,s.shape);let u=l;const c=th(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const t=n.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=s.shape[c[t]];const r=NA(t,s.shape,s.dtype,c,e);p=n.makeTensorInfo(e,s.dtype),n.texData.get(p.dataId).values=r}else p=bT(s,c,n);u=nh(u.length,o)}Qc("max",u,o);const[f,m]=Zc(p.shape,u);let g,b=f;if(a&&(b=Jc(f,l)),d){const t=n.texData.get(p.dataId).values,e=dA(t,Gr(m),b,s.dtype);g=n.makeTensorInfo(b,s.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const s=Gr(e),i=cT({inputs:{x:t},attrs:{shape:[Gr(t.shape)/s,s]},backend:r}),a=fT(i,t.dtype,"max",r),o=cT({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(p,m,b,n);return h&&n.disposeIntermediateTensorInfo(p),g}const G_={kernelName:Ji,backendName:"webgl",kernelFunc:U_},j_=rT({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:pA}),H_={kernelName:Qi,backendName:"webgl",kernelFunc:j_},q_={kernelName:ta,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;wE(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;Br(Zu(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Wu(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&jr(u.inShape,u.outShape))return HA({inputs:{x:s},backend:n});const c=new eR(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},K_={kernelName:na,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Vu(s.shape,i,a,[1,1,1],o,u,l),h=new nR(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class X_{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,o=i-1-t.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Y_{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Z_={kernelName:ra,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Vu(a.shape,o,l,[1,1,1],u,c),d=new nR(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new Y_(h),m=n.runWebGLProgram(f,[s,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},J_={kernelName:ea,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:a}=e,o=i;wE([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Wu(o.shape,l,u,1,c,h),p=new eR(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new X_(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Q_={kernelName:sa,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Br(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];Br(Zu(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Wu(r.shape,s,i,u,a),[h,d]=function(t,e,n,r){let s=new eR(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new eR(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]}(r,o,c,l);return[h,d]}},tD={kernelName:ia,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:i}=e,a=n,o=r.shape.length,l=Zr(i,r.shape);let u=l;const c=th(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const t=a.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=NA(t,r.shape,r.dtype,c,e);f=a.makeTensorInfo(e,r.dtype),a.texData.get(f.dataId).values=n}else f=bT(r,c,a);p.push(f),u=nh(u.length,o)}Qc("sum",u,o);const[m,g]=Zc(f.shape,u);let b=m;s&&(b=Jc(m,l));const y=function(t,e,n,r){const s=Gr(e),i=cT({inputs:{x:t},attrs:{shape:[Gr(t.shape)/s,s]},backend:r}),a=fT(i,"float32","mean",r),o=cT({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(f,g,b,a);for(const t of p)a.disposeIntermediateTensorInfo(t);return y}},eD={kernelName:aa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=Zr(i,s.shape);let u=l;const c=th(u,o);let h=s;null!=c&&(h=wT({inputs:{x:s},backend:n,attrs:{perm:c}}),u=nh(u.length,s.shape.length)),Qc("min",u,o);const[d,p]=Zc(h.shape,u),f=cT({inputs:{x:h},backend:n,attrs:{shape:[-1,Gr(p)]}}),m=fT(f,f.dtype,"min",n);let g;return g=cT(a?{inputs:{x:m},backend:n,attrs:{shape:Jc(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},nD=rT({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:fA}),rD={kernelName:oa,backendName:"webgl",kernelFunc:nD};class sD{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=XE(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class iD{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=XE(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=AA("rc",r),l=AA("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const aD={kernelName:la,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:i}=n,a=ws().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iD(r.shape,s,i):new sD(r.shape,s,i);return e.runWebGLProgram(a,[r],r.dtype)}},oD=rT({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),lD={kernelName:ua,backendName:"webgl",kernelFunc:oD};class uD{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const cD=rT({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),hD={kernelName:bi,backendName:"webgl",kernelFunc:cD},dD="return a - b;",pD=rT({opSnippet:dD,packedOpSnippet:dD,supportsComplex:!0,cpuKernelImpl:IA}),fD={kernelName:Qa,backendName:"webgl",kernelFunc:pD};function mD(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,a=Zr([i],s.shape),o=U_({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=Jc(o.shape,a),u=cT({inputs:{x:o},backend:n,attrs:{shape:l}}),c=pD({inputs:{a:s,b:u},backend:n}),h=OF({inputs:{x:c},backend:n}),d=yT({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=cT({inputs:{x:d},backend:n,attrs:{shape:l}}),f=cD({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const gD={kernelName:Ya,backendName:"webgl",kernelFunc:mD},bD={kernelName:ca,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r,l=o?s:mD({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new uD(u,c,i),d=h.getCustomSetupFunc(a),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},yD="return -x;",xD={kernelName:da,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,s]=gA(t.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,e)}let s;return s=ws().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new PA(r.shape,yD):new OA(r.shape,yD),n.runWebGLProgram(s,[r],r.dtype)}},wD=pd,vD={kernelName:fa,backendName:"webgl",kernelFunc:function(t){gp("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=wD(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},kD=fd,ID={kernelName:ma,backendName:"webgl",kernelFunc:function(t){gp("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=kD(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},$D=md,CD={kernelName:ga,backendName:"webgl",kernelFunc:function(t){gp("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=$D(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class ND{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const SD={kernelName:ya,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:i,onValue:a,offValue:o}=r,l=Gr(s.shape),u=new ND(l,i,a,o),c=cT({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=cT({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(h),d}};function ED(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=kR({inputs:{input:r},backend:n}),e=ED({inputs:{x:t},backend:n}),s=LR({inputs:{input:r},backend:n}),i=ED({inputs:{x:s},backend:n}),a=KA({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return qF({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const AD={kernelName:ho,backendName:"webgl",kernelFunc:ED},TD={kernelName:ba,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=kR({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=LR({inputs:{input:s},backend:r}),a=ED({inputs:{x:i},backend:r}),o=KA({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return qF({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},RD={kernelName:xa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return zF({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{Wr(i,t.shape,"All tensors passed to stack must have matching shapes"),Br(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=WR({inputs:e.map((t=>{const e=zF({inputs:{input:t},backend:n,attrs:{dim:s}});return o.push(e),e})),backend:n,attrs:{axis:s}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class FD{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=XE(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n      uniform float value;\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class _D{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=XE(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=AA("rc",r),l=AA("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n      uniform float value;\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}const DD=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:a}=r,o=ws().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _D(s.shape,i,a):new FD(s.shape,i,a),l=o.getCustomSetupFunc(a);return n.runWebGLProgram(o,[s],s.dtype,l)},MD={kernelName:wa,backendName:"webgl",kernelFunc:DD},OD=rT({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),LD={kernelName:va,backendName:"webgl",kernelFunc:OD},zD={kernelName:Ia,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=[],u=Zr(i,s.shape);let c=u;const h=th(c,o);let d,p=s;if(null!=h&&(p=wT({inputs:{x:s},backend:n,attrs:{perm:h}}),c=nh(c.length,o),l.push(p)),Qc("prod",c,o),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:r,outDtype:s}=bA(p.shape,p.dtype,t,c);d=n.makeTensorInfo(r,s,e)}else{const[t,e]=Zc(p.shape,c),r=Gr(e),i=cT({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=fT(i,Qo(s.dtype),"prod",n);d=cT({inputs:{x:a},backend:n,attrs:{shape:t}}),l.push(i),l.push(a)}if(a){l.push(d);const t=Jc(d.shape,u);d=cT({inputs:{x:d},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},PD=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:i,dtype:a}=n,o=yA(r,s,i,a);return e.makeTensorInfo([o.length],a,o)},BD={kernelName:$a,backendName:"webgl",kernelFunc:PD},WD=nT({opSnippet:"return 1.0 / x;"}),VD={kernelName:Na,backendName:"webgl",kernelFunc:WD},UD=nT({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),GD={kernelName:Sa,backendName:"webgl",kernelFunc:UD},jD=nT({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),HD={kernelName:_a,backendName:"webgl",kernelFunc:jD};class qD{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class KD{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const XD={kernelName:Ra,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=ws().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new KD(s.shape,l,u,i,a):new qD(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],"float32")}};class YD{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,a]=t,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const ZD={kernelName:Fa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r,o=new YD(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class JD{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const QD={kernelName:Aa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=new JD(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],s.dtype)}};class tM{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,a]=t,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const eM={kernelName:Ta,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r,o=new tM(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class nM{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=XE(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class rM{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=AA("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=XE(n);function o(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const sM={kernelName:Da,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r,a=s.shape.length,o=Zr(i,s.shape);if(0===a)return HA({inputs:{x:s},backend:n});const l=ws().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rM(s.shape,o):new nM(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class iM{constructor(t,e){this.variableNames=["Image"],this.outputShape=[];const n=t[1],r=t[2];this.outputShape=t;let s="";s="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(t,e,n,r){return(s,i)=>{null==this.paramsLoc&&(this.paramsLoc=s.getUniformLocationNoThrow(i,"params")),s.gl.uniform4f(this.paramsLoc,t,e,n,r)}}}const aM={kernelName:fo,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=new iM(r.shape,i),[u,c]=Jd(a,r.shape[1],r.shape[2]),h=l.getCustomSetupFunc(u,c,Math.sin(s),Math.cos(s));return o.runWebGLProgram(l,[r],r.dtype,h)}},oM=nT({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),lM={kernelName:Ma,backendName:"webgl",kernelFunc:oM},uM=nT({opSnippet:"return inversesqrt(x);",cpuKernelImpl:xA}),cM={kernelName:Oa,backendName:"webgl",kernelFunc:uM};class hM{constructor(t,e,n,r,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=XE(s.length),l=XE(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const dM={kernelName:La,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=op(0,s,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,s.dtype);const p=cT({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=cT({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new hM(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),y=cT({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}};class pM{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<e.length;r++)a.push(`${n[r]}`),r<t&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=XE(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const fM={kernelName:za,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e,a=new pM(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,i],Jo(s.dtype,i.dtype))}},mM=nT({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${lp};\n  float scale = ${up};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),gM={kernelName:Pa,backendName:"webgl",kernelFunc:mM},bM=nT({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),yM={kernelName:Ga,backendName:"webgl",kernelFunc:bM},xM=nT({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),wM={kernelName:Ua,backendName:"webgl",kernelFunc:xM},vM=nT({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),kM={kernelName:Wa,backendName:"webgl",kernelFunc:vM},IM=nT({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),$M={kernelName:Va,backendName:"webgl",kernelFunc:IM},CM=nT({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),NM={kernelName:ja,backendName:"webgl",kernelFunc:CM},SM={kernelName:Ka,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:a}=r;Br(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<s.shape.length;++t)l.push([0,0]);const u=[],c=DD({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Qd(c.shape,i,o,!1),d=tp(h.length,i.length,!1),p=ep(c.shape,i,o,!1),f=cT({inputs:{x:c},backend:n,attrs:{shape:h}}),m=wT({inputs:{x:f},backend:n,attrs:{perm:d}}),g=cT({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},EM={kernelName:to,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=op(0,s,o),d=new hM(u,l,s.shape.length,i.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[i,s,a],i.dtype),f=cT({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},AM={kernelName:Xa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=Zr(a,s.shape)[0],l=Np(s,i,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((t=>{const e=[...h];e[o]=t;const r=gR({inputs:{x:s},backend:n,attrs:{begin:c,size:e}});return c[o]+=t,r}))}},TM=nT({opSnippet:"return sqrt(x);"}),RM={kernelName:Ha,backendName:"webgl",kernelFunc:TM},FM={kernelName:Ja,backendName:"webgl",kernelFunc:nT({opSnippet:"return x * x;"})},_M="return (a - b) * (a - b);",DM=rT({opSnippet:_M,packedOpSnippet:_M}),MM={kernelName:Za,backendName:"webgl",kernelFunc:DM},OM={kernelName:po,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,i=new OA(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class LM{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=XE(n.length),i=XE(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const zM={kernelName:eo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:b,outShape:y}=ku(s.shape,i,a,o,l,u,c,h,d),x=cT({inputs:{x:s},backend:n,attrs:{shape:b}});let w;if(p){const t=gR({inputs:{x},backend:n,attrs:{begin:f,size:g}});w=cT({inputs:{x:t},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(t)}else if(y.some((t=>0===t)))w=n.makeTensorInfo(y,s.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const t=n.texData.get(x.dataId).values,e=Zl(x.shape,x.dtype,t),r=kA(y,e,m,f);w=n.makeTensorInfo(y,x.dtype,r.values)}else{const t=new LM(f,m,y);w=n.runWebGLProgram(t,[x],x.dtype)}const v=cT({inputs:{x:w},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),v}},PM=nT({opSnippet:"return tan(x);"}),BM={kernelName:no,backendName:"webgl",kernelFunc:PM},WM=nT({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),VM={kernelName:ro,backendName:"webgl",kernelFunc:WM};class UM{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=XE(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function GM(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;if("string"===s.dtype){const t=n.readSync(s.dataId).map((t=>To(t))),e=Zl(s.shape,s.dtype,t),r=$A(e,i);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const a=new UM(s.shape,i);return n.runWebGLProgram(a,[s],s.dtype)}const jM={kernelName:so,backendName:"webgl",kernelFunc:GM},HM={kernelName:io,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:a}=r,o=n.readSync(s.dataId),[l,u]=CA(o,s.shape,s.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class qM{constructor(t,e,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const KM={kernelName:ao,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=new qM(h,d,a,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,i],"float32")}},XM={kernelName:lo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;wE(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=SA(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},YM={kernelName:uo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let c=0;for(let t=0;t<o;t++)t!==i&&(u[c++]=a.shape[t]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let t=0;t<f.length;t++){d[i]=t;const e=gR({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=cT({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=r,h.push(e)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class ZM{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const JM=[B_,V_,IT,CT,ST,AT,FT,MT,OT,LT,UT,GT,HT,KT,JT,YT,tR,sR,rR,oR,lR,uR,dR,yR,xR,$R,SR,TR,_R,XA,VR,QR,tF,KR,nF,rF,eF,iF,oF,uF,pF,fF,gF,kF,IF,xF,CF,SF,AF,TF,FF,DF,LF,PF,VF,jF,KF,YF,QF,e_,s_,a_,o_,u_,h_,p_,m_,qA,g_,zR,y_,w_,k_,JA,$_,N_,S_,R_,A_,__,M_,L_,G_,K_,q_,Z_,J_,Q_,H_,tD,eD,rD,aD,lD,bD,uT,xD,vD,ID,CD,vR,SD,TD,RD,MD,LD,eT,zD,BD,IR,hD,VD,HD,GD,hT,XD,ZD,QD,eM,sM,aM,lM,cM,dM,fM,gM,yM,wM,kM,$M,bR,gD,NM,SM,EM,AM,RM,FM,MM,OM,zM,fD,xT,BM,VM,jM,HM,KM,vT,XM,YM,{kernelName:co,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const c=th([u],o);let h=s;null!=c&&(h=wT({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=nh(1,o)[0]);const d=Ep(h.shape,u,a),p=Gr([h.shape[u]]),f=cT({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Qo(s.dtype),g=(t,e,r,s,i)=>{const a=t.shape[0],o=t.shape[1],u=Sp(o,i),c=new ZM({windowSize:u,inSize:o,batchSize:a,numSegments:i},e),h=n.compileAndRun(c,[t,r],s);if(l.push(h),h.shape[1]===i)return h;const d=PD({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=GM({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,e,p,s,i)},b=cT({inputs:{x:g(f,"unsortedSegmentSum",i,m,a)},backend:n,attrs:{shape:d}});let y=b;if(null!=c){l.push(b);const t=eh(c);y=wT({inputs:{x:y},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},AD];for(const t of JM)Io(t);function QM(t){for(var e=t.length,n=0,r=0;e>0;)r=Math.floor(Math.random()*e),n=t[--e],t[e]=t[r],t[r]=n}function tO(t,e){var n=[];function r(t,e){return rO(t,e)<2.5?1:-1}function s(e,s){for(var i=0;i<t/2;i++){var a=eO(e,s),o=eO(0,2*Math.PI),l=a*Math.cos(o),u=a*Math.sin(o),c=r({x:l,y:u},{x:0,y:0});n.push(sO(l,u,c,0,!1))}}return s(0,5*(.5+e)),s(5*(.7+e),5),n}function eO(t,e){return Math.random()*(e-t)+t}function nO(t,e){var n,r,s;void 0===t&&(t=0),void 0===e&&(e=1);do{n=2*Math.random()-1,r=2*Math.random()-1,s=Math.pow(n,2)+Math.pow(r,2)}while(s>1);var i=Math.sqrt(-2*Math.log(s)/s)*n;return t+Math.sqrt(e)*i}function rO(t,e){var n=t.x-e.x,r=t.y-e.y;return Math.sqrt(Math.pow(n,2)+Math.pow(r,2))}function sO(t,e,n,r,s){return{x:t,y:e,label:n,cluster:r,IsCentroid:s}}var iO,aO=function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,s,i=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(t){s={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(s)throw s.error}}return a},oO={circle:tO,xor:function(t,e){var n=[];function r(t){return t.x*t.y>=0?1:-1}for(var s=0;s<t;s++){var i=eO(-5,5);i+=i>0?.35:-.35;var a=eO(-5,5);a+=a>0?.35:-.35;var o=r({x:i+eO(-5,5)*e,y:a+eO(-5,5)*e});n.push(sO(i,a,o,0,!1))}return n},gauss:function(t,e){var n=[],r=Cr().domain([0,.5]).range([.5,4])(e);function s(e,s,i){for(var a=0;a<t/2;a++){var o=nO(e,r),l=nO(s,r);n.push(sO(o,l,i,0,!1))}}return s(0,2,1),s(-3,-2,-1),s(4,-2,-1),n},spiral:function(t,e){var n=[],r=t/2;function s(t,s){for(var i=0;i<r;i++){var a=i/r*5,o=1.75*i/r*2*Math.PI+t,l=a*Math.sin(o)+eO(-1,1)*e,u=a*Math.cos(o)+eO(-1,1)*e;n.push(sO(l,u,s,0,!1))}}return s(0,1),s(Math.PI,-1),n},moon:function(t,e){var n=[];function r(t,e){return rO(t,e)<1.9?1:-1}var s=Math.floor(t/2),i=t-s;return function(t,e){for(var i=0;i<s;i++){var a=eO(-3.8,e),o=eO(1,Math.PI+1.9),l=a*Math.sin(o)-1.2,u=a*Math.cos(o)-.5,c=r({x:l,y:u},{x:0,y:0});n.push(sO(l,u,c,0,!1))}}(0,-3.8*(.8-e)),function(t,e){for(var s=0;s<i;s++){var a=eO(3.8,e),o=eO(1.1,Math.PI+2.1),l=a*Math.sin(o)+1.5,u=a*Math.cos(o)-1.5,c=r({x:l,y:u},{x:0,y:0});n.push(sO(l,u,c,0,!1))}}(0,3.8*(.8-e)),n},aniso:function(t,e){var n=[],r=Cr().domain([0,.5]).range([.5,4])(e);function s(e,s,i,a){for(var o=[],l=0;l<t/2;l++){var u=Math.sin(Math.PI)+nO(e,r),c=Math.cos(Math.PI)+nO(s,r);o.push([u,c])}Vc(o,a).arraySync().forEach((function(t){var e=t[0],r=t[1];n.push(sO(e,r,i,0,!1))}))}return s(0,4,1,[[.7,-.7],[-.6,1]]),s(-6,-2,-3,[[.7,-.7],[-.6,1]]),s(-1,-3,-4,[[.7,-.7],[-.6,1]]),n}};function lO(t,e){for(var n in t)if(t[n]===e)return n}!function(t){t[t.STRING=0]="STRING",t[t.NUMBER=1]="NUMBER",t[t.ARRAY_NUMBER=2]="ARRAY_NUMBER",t[t.ARRAY_STRING=3]="ARRAY_STRING",t[t.BOOLEAN=4]="BOOLEAN",t[t.OBJECT=5]="OBJECT"}(iO||(iO={}));var uO=function(){function t(){this.showTestData=!1,this.noise=0,this.discretize=!1,this.dataset=tO,this.percSamples=80,this.clusters=2}return t.deserializeState=function(){var e,n,r={};try{for(var s=function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}(window.location.hash.slice(1).split("&")),i=s.next();!i.done;i=s.next()){var a=i.value,o=aO(a.split("="),2),l=o[0],u=o[1];r[l]=u}}catch(t){e={error:t}}finally{try{i&&!i.done&&(n=s.return)&&n.call(s)}finally{if(e)throw e.error}}var c=new t;function h(t){return t in r&&null!=r[t]&&""!==r[t].trim()}function d(t){return""===t.trim()?[]:t.split(",")}return t.PROPS.forEach((function(t){var e=t.name,n=t.type,s=t.keyMap;switch(n){case iO.OBJECT:if(null==s)throw Error("A key-value map must be provided for state variables of type Object");h(e)&&r[e]in s&&(c[e]=s[r[e]]);break;case iO.NUMBER:h(e)&&(c[e]=+r[e]);break;case iO.STRING:h(e)&&(c[e]=r[e]);break;case iO.BOOLEAN:h(e)&&(c[e]="false"!==r[e]);break;case iO.ARRAY_NUMBER:e in r&&(c[e]=d(r[e]).map(Number));break;case iO.ARRAY_STRING:e in r&&(c[e]=d(r[e]));break;default:throw Error("Encountered an unknown type for a state variable")}})),null==c.seed&&(c.seed=Math.random().toFixed(5)),Tr(c.seed),c},t.prototype.serialize=function(){var e=this,n=[];t.PROPS.forEach((function(t){var r=t.name,s=t.type,i=t.keyMap,a=e[r];null!=a&&(s===iO.OBJECT?a=lO(i,a):s!==iO.ARRAY_NUMBER&&s!==iO.ARRAY_STRING||(a=a.join(",")),n.push(r+"="+a))})),window.location.hash=n.join("&")},t.PROPS=[{name:"dataset",type:iO.OBJECT,keyMap:oO},{name:"noise",type:iO.NUMBER},{name:"seed",type:iO.STRING},{name:"discretize",type:iO.BOOLEAN},{name:"clusters",type:iO.NUMBER}],t}(),cO=Cr().domain([0,.5,1]).range(["#f59322","#e8eaeb","#0877bd","#AB3144","#2DB83F","#29A3C1","#A74FC0"]).clamp(!0),hO=l(0,1+1e-9,1/30).map((function(t){return cO(t)}));function dO(t,e){return t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t+1))+t}function pO(t,e){let n=0;for(let r=0;r<t.length;r++)n+=(t[r]-e[r])*(t[r]-e[r]);return n}Nr().domain([-1,1]).range(hO);const fO={distanceFunction:pO};function mO(t,e,n=fO){const r=n.distanceFunction||fO.distanceFunction,s=n.similarityFunction||fO.similarityFunction;let i=-1;if("function"==typeof s){let n=Number.MIN_VALUE;for(let r=0;r<t.length;r++){const a=s(e,t[r]);a>n&&(n=a,i=r)}}else{if("function"!=typeof r)throw new Error("A similarity or distance function it's required");{let n=Number.MAX_VALUE;for(let s=0;s<t.length;s++){const a=r(e,t[s]);a<n&&(n=a,i=s)}}}return i}function gO(t,e,n,r){for(var s=0;s<t.length;s++)n[s]=mO(e,t[s],{distanceFunction:r});return n}function bO(t,e){const n=65535&(t>>>=0);return((t-n)*(e>>>=0)>>>0)+n*e>>>0}class yO{constructor(t=Date.now()){this.state=new Uint32Array(4),this.init(t),this.random=this.getFloat.bind(this)}getUint32(){return this.nextState(),this.state[3]+this.state[2]>>>0}getFloat(){return 5.960464477539063e-8*(this.getUint32()>>>8)}init(t){if(!Number.isInteger(t))throw new TypeError("seed must be an integer");this.state[0]=t,this.state[1]=0,this.state[2]=0,this.state[3]=0;for(let t=1;t<8;t++)this.state[3&t]^=t+bO(1812433253,this.state[t-1&3]^this.state[t-1&3]>>>30>>>0)>>>0;this.periodCertification();for(let t=0;t<8;t++)this.nextState()}periodCertification(){0===this.state[0]&&0===this.state[1]&&0===this.state[2]&&0===this.state[3]&&(this.state[0]=88,this.state[1]=83,this.state[2]=65,this.state[3]=68)}nextState(){let t=this.state[0];t^=t<<15,t^=t>>>18,t^=this.state[3]<<11,this.state[0]=this.state[1],this.state[1]=this.state[2],this.state[2]=this.state[3],this.state[3]=t}}function xO(t,e,n){const r=e();if(n){let t=0;for(;r>n[t];)t++;return t}return Math.floor(r*t)}class wO{constructor(t=Math.random){if("number"==typeof t){const e=new yO(t);this.randomGenerator=e.random}else this.randomGenerator=t}choice(t,e){return function(t,e={},n=Math.random){const{size:r=1,replace:s=!1,probabilities:i}=e;let a,o;if(a="number"==typeof t?function(t){const e=[];for(let n=0;n<t;n++)e.push(n);return e}(t):t.slice(),i){if(!s)throw new Error("choice with probabilities and no replacement is not implemented");if(i.length!==a.length)throw new Error("the length of probabilities option should be equal to the number of choices");o=[i[0]];for(let t=1;t<i.length;t++)o[t]=o[t-1]+i[t];if(Math.abs(1-o[o.length-1])>1e-8)throw new Error(`probabilities should sum to 1, but instead sums to ${o[o.length-1]}`)}if(!1===s&&r>a.length)throw new Error("size option is too large");const l=[];for(let t=0;t<r;t++){const t=xO(a.length,n,o);l.push(a[t]),s||a.splice(t,1)}return l}(t,e,this.randomGenerator)}random(){return this.randomGenerator()}randInt(t,e){return void 0===e&&(e=t,t=0),t+Math.floor(this.randomGenerator()*(e-t))}randomSample(t){const e=[];for(let n=0;n<t;n++)e.push(this.random());return e}}const vO=Object.prototype.toString;function kO(t){return vO.call(t).endsWith("Array]")}const IO=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!kO(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var n=e.fromIndex,r=void 0===n?0:n,s=e.toIndex,i=void 0===s?t.length:s;if(r<0||r>=t.length||!Number.isInteger(r))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=r||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var a=t[r],o=r+1;o<i;o++)t[o]>a&&(a=t[o]);return a},$O=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!kO(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var n=e.fromIndex,r=void 0===n?0:n,s=e.toIndex,i=void 0===s?t.length:s;if(r<0||r>=t.length||!Number.isInteger(r))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=r||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var a=t[r],o=r+1;o<i;o++)t[o]<a&&(a=t[o]);return a},CO=function(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!kO(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==n.output){if(!kO(n.output))throw new TypeError("output option must be an array if specified");e=n.output}else e=new Array(t.length);var r=$O(t),s=IO(t);if(r===s)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var i=n.min,a=void 0===i?n.autoMinMax?r:0:i,o=n.max,l=void 0===o?n.autoMinMax?s:1:o;if(a>=l)throw new RangeError("min option must be smaller than max option");for(var u=(l-a)/(s-r),c=0;c<t.length;c++)e[c]=(t[c]-r)*u+a;return e},NO=" ".repeat(2),SO=" ".repeat(4);function EO(t,e={}){const{maxRows:n=15,maxColumns:r=10,maxNumSize:s=8}=e;return`${t.constructor.name} {\n${NO}[\n${SO}${function(t,e,n,r){const{rows:s,columns:i}=t,a=Math.min(s,e),o=Math.min(i,n),l=[];for(let e=0;e<a;e++){let n=[];for(let s=0;s<o;s++)n.push(AO(t.get(e,s),r));l.push(`${n.join(" ")}`)}return o!==i&&(l[l.length-1]+=` ... ${i-n} more columns`),a!==s&&l.push(`... ${s-e} more rows`),l.join(`\n${SO}`)}(t,n,r,s)}\n${NO}]\n${NO}rows: ${t.rows}\n${NO}columns: ${t.columns}\n}`}function AO(t,e){const n=String(t);if(n.length<=e)return n.padEnd(e," ");const r=t.toPrecision(e-2);if(r.length<=e)return r;const s=t.toExponential(e-2),i=s.indexOf("e"),a=s.slice(i);return s.slice(0,e-a.length)+a}function TO(t,e,n){let r=n?t.rows:t.rows-1;if(e<0||e>r)throw new RangeError("Row index out of range")}function RO(t,e,n){let r=n?t.columns:t.columns-1;if(e<0||e>r)throw new RangeError("Column index out of range")}function FO(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function _O(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function DO(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for row indices");if(e.some((e=>e<0||e>=t.rows)))throw new RangeError("row indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function MO(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for column indices");if(e.some((e=>e<0||e>=t.columns)))throw new RangeError("column indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function OO(t,e,n,r,s){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(zO("startRow",e),zO("endRow",n),zO("startColumn",r),zO("endColumn",s),e>n||r>s||e<0||e>=t.rows||n<0||n>=t.rows||r<0||r>=t.columns||s<0||s>=t.columns)throw new RangeError("Submatrix indices are out of range")}function LO(t,e=0){let n=[];for(let r=0;r<t;r++)n.push(e);return n}function zO(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function PO(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class BO{static from1DArray(t,e,n){if(t*e!==n.length)throw new RangeError("data length does not match given dimensions");let r=new VO(t,e);for(let s=0;s<t;s++)for(let t=0;t<e;t++)r.set(s,t,n[s*e+t]);return r}static rowVector(t){let e=new VO(1,t.length);for(let n=0;n<t.length;n++)e.set(0,n,t[n]);return e}static columnVector(t){let e=new VO(t.length,1);for(let n=0;n<t.length;n++)e.set(n,0,t[n]);return e}static zeros(t,e){return new VO(t,e)}static ones(t,e){return new VO(t,e).fill(1)}static rand(t,e,n={}){if("object"!=typeof n)throw new TypeError("options must be an object");const{random:r=Math.random}=n;let s=new VO(t,e);for(let n=0;n<t;n++)for(let t=0;t<e;t++)s.set(n,t,r());return s}static randInt(t,e,n={}){if("object"!=typeof n)throw new TypeError("options must be an object");const{min:r=0,max:s=1e3,random:i=Math.random}=n;if(!Number.isInteger(r))throw new TypeError("min must be an integer");if(!Number.isInteger(s))throw new TypeError("max must be an integer");if(r>=s)throw new RangeError("min must be smaller than max");let a=s-r,o=new VO(t,e);for(let n=0;n<t;n++)for(let t=0;t<e;t++){let e=r+Math.round(i()*a);o.set(n,t,e)}return o}static eye(t,e,n){void 0===e&&(e=t),void 0===n&&(n=1);let r=Math.min(t,e),s=this.zeros(t,e);for(let t=0;t<r;t++)s.set(t,t,n);return s}static diag(t,e,n){let r=t.length;void 0===e&&(e=r),void 0===n&&(n=e);let s=Math.min(r,e,n),i=this.zeros(e,n);for(let e=0;e<s;e++)i.set(e,e,t[e]);return i}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let n=t.rows,r=t.columns,s=new VO(n,r);for(let i=0;i<n;i++)for(let n=0;n<r;n++)s.set(i,n,Math.min(t.get(i,n),e.get(i,n)));return s}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let n=t.rows,r=t.columns,s=new this(n,r);for(let i=0;i<n;i++)for(let n=0;n<r;n++)s.set(i,n,Math.max(t.get(i,n),e.get(i,n)));return s}static checkMatrix(t){return BO.isMatrix(t)?t:new VO(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)t.call(this,e,n);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)t.push(this.get(e,n));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let n=0;n<this.columns;n++)t[e].push(this.get(e,n))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,n=-1,r=!0,s=!1;for(;t<this.rows&&r;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>n?(s=!0,n=e):(r=!1,s=!0);t++}return r}isReducedEchelonForm(){let t=0,e=0,n=-1,r=!0,s=!1;for(;t<this.rows&&r;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>n?(s=!0,n=e):(r=!1,s=!0);for(let n=e+1;n<this.rows;n++)0!==this.get(t,n)&&(r=!1);t++}return r}echelonForm(){let t=this.clone(),e=0,n=0;for(;e<t.rows&&n<t.columns;){let r=e;for(let s=e;s<t.rows;s++)t.get(s,n)>t.get(r,n)&&(r=s);if(0===t.get(r,n))n++;else{t.swapRows(e,r);let s=t.get(e,n);for(let r=n;r<t.columns;r++)t.set(e,r,t.get(e,r)/s);for(let r=e+1;r<t.rows;r++){let s=t.get(r,n)/t.get(e,n);t.set(r,n,0);for(let i=n+1;i<t.columns;i++)t.set(r,i,t.get(r,i)-t.get(e,i)*s)}e++,n++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,n=t.rows,r=n-1;for(;r>=0;)if(0===t.maxRow(r))r--;else{let s=0,i=!1;for(;s<n&&!1===i;)1===t.get(r,s)?i=!0:s++;for(let n=0;n<r;n++){let i=t.get(n,s);for(let a=s;a<e;a++){let e=t.get(n,a)-i*t.get(r,a);t.set(n,a,e)}}r--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:n=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(n)||n<=0)throw new TypeError("columns must be a positive integer");let r=new VO(this.rows*e,this.columns*n);for(let t=0;t<e;t++)for(let e=0;e<n;e++)r.setSubMatrix(this,this.rows*t,this.columns*e);return r}fill(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,t);return this}neg(){return this.mulS(-1)}getRow(t){TO(this,t);let e=[];for(let n=0;n<this.columns;n++)e.push(this.get(t,n));return e}getRowVector(t){return VO.rowVector(this.getRow(t))}setRow(t,e){TO(this,t),e=FO(this,e);for(let n=0;n<this.columns;n++)this.set(t,n,e[n]);return this}swapRows(t,e){TO(this,t),TO(this,e);for(let n=0;n<this.columns;n++){let r=this.get(t,n);this.set(t,n,this.get(e,n)),this.set(e,n,r)}return this}getColumn(t){RO(this,t);let e=[];for(let n=0;n<this.rows;n++)e.push(this.get(n,t));return e}getColumnVector(t){return VO.columnVector(this.getColumn(t))}setColumn(t,e){RO(this,t),e=_O(this,e);for(let n=0;n<this.rows;n++)this.set(n,t,e[n]);return this}swapColumns(t,e){RO(this,t),RO(this,e);for(let n=0;n<this.rows;n++){let r=this.get(n,t);this.set(n,t,this.get(n,e)),this.set(n,e,r)}return this}addRowVector(t){t=FO(this,t);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)+t[n]);return this}subRowVector(t){t=FO(this,t);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)-t[n]);return this}mulRowVector(t){t=FO(this,t);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)*t[n]);return this}divRowVector(t){t=FO(this,t);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)/t[n]);return this}addColumnVector(t){t=_O(this,t);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)+t[e]);return this}subColumnVector(t){t=_O(this,t);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)-t[e]);return this}mulColumnVector(t){t=_O(this,t);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)*t[e]);return this}divColumnVector(t){t=_O(this,t);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)/t[e]);return this}mulRow(t,e){TO(this,t);for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)*e);return this}mulColumn(t,e){RO(this,t);for(let n=0;n<this.rows;n++)this.set(n,t,this.get(n,t)*e);return this}max(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.get(e,n)>t&&(t=this.get(e,n));return t}maxIndex(){PO(this);let t=this.get(0,0),e=[0,0];for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.get(n,r)>t&&(t=this.get(n,r),e[0]=n,e[1]=r);return e}min(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.get(e,n)<t&&(t=this.get(e,n));return t}minIndex(){PO(this);let t=this.get(0,0),e=[0,0];for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.get(n,r)<t&&(t=this.get(n,r),e[0]=n,e[1]=r);return e}maxRow(t){if(TO(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let n=1;n<this.columns;n++)this.get(t,n)>e&&(e=this.get(t,n));return e}maxRowIndex(t){TO(this,t),PO(this);let e=this.get(t,0),n=[t,0];for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r),n[1]=r);return n}minRow(t){if(TO(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let n=1;n<this.columns;n++)this.get(t,n)<e&&(e=this.get(t,n));return e}minRowIndex(t){TO(this,t),PO(this);let e=this.get(t,0),n=[t,0];for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r),n[1]=r);return n}maxColumn(t){if(RO(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let n=1;n<this.rows;n++)this.get(n,t)>e&&(e=this.get(n,t));return e}maxColumnIndex(t){RO(this,t),PO(this);let e=this.get(0,t),n=[0,t];for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t),n[0]=r);return n}minColumn(t){if(RO(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let n=1;n<this.rows;n++)this.get(n,t)<e&&(e=this.get(n,t));return e}minColumnIndex(t){RO(this,t),PO(this);let e=this.get(0,t),n=[0,t];for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t),n[0]=r);return n}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let n=0;n<t;n++)e.push(this.get(n,n));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e+=this.get(t,n)*this.get(t,n);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)t+=this.get(e,n),this.set(e,n,t);return this}dot(t){BO.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let n=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r];return n}mmul(t){t=VO.checkMatrix(t);let e=this.rows,n=this.columns,r=t.columns,s=new VO(e,r),i=new Float64Array(n);for(let a=0;a<r;a++){for(let e=0;e<n;e++)i[e]=t.get(e,a);for(let t=0;t<e;t++){let e=0;for(let r=0;r<n;r++)e+=this.get(t,r)*i[r];s.set(t,a,e)}}return s}strassen2x2(t){t=VO.checkMatrix(t);let e=new VO(2,2);const n=this.get(0,0),r=t.get(0,0),s=this.get(0,1),i=t.get(0,1),a=this.get(1,0),o=t.get(1,0),l=this.get(1,1),u=t.get(1,1),c=(n+l)*(r+u),h=(a+l)*r,d=n*(i-u),p=l*(o-r),f=(n+s)*u,m=c+p-f+(s-l)*(o+u),g=d+f,b=h+p,y=c-h+d+(a-n)*(r+i);return e.set(0,0,m),e.set(0,1,g),e.set(1,0,b),e.set(1,1,y),e}strassen3x3(t){t=VO.checkMatrix(t);let e=new VO(3,3);const n=this.get(0,0),r=this.get(0,1),s=this.get(0,2),i=this.get(1,0),a=this.get(1,1),o=this.get(1,2),l=this.get(2,0),u=this.get(2,1),c=this.get(2,2),h=t.get(0,0),d=t.get(0,1),p=t.get(0,2),f=t.get(1,0),m=t.get(1,1),g=t.get(1,2),b=t.get(2,0),y=t.get(2,1),x=t.get(2,2),w=(n-i)*(-d+m),v=(-n+i+a)*(h-d+m),k=(i+a)*(-h+d),I=n*h,$=(-n+l+u)*(h-p+g),C=(-n+l)*(p-g),N=(l+u)*(-h+p),S=(-s+u+c)*(m+b-y),E=(s-c)*(m-y),A=s*b,T=(u+c)*(-b+y),R=(-s+a+o)*(g+b-x),F=(s-o)*(g-x),_=(a+o)*(-b+x),D=I+A+r*f,M=(n+r+s-i-a-u-c)*m+v+k+I+S+A+T,O=I+$+N+(n+r+s-a-o-l-u)*g+A+R+_,L=w+a*(-h+d+f-m-g-b+x)+v+I+A+R+F,z=w+v+k+I+o*y,P=A+R+F+_+i*p,B=I+$+C+u*(-h+p+f-m-g-b+y)+S+E+A,W=S+E+A+T+l*d,V=I+$+C+N+c*x;return e.set(0,0,D),e.set(0,1,M),e.set(0,2,O),e.set(1,0,L),e.set(1,1,z),e.set(1,2,P),e.set(2,0,B),e.set(2,1,W),e.set(2,2,V),e}mmulStrassen(t){t=VO.checkMatrix(t);let e=this.clone(),n=e.rows,r=e.columns,s=t.rows,i=t.columns;function a(t,e,n){let r=t.rows,s=t.columns;if(r===e&&s===n)return t;{let r=BO.zeros(e,n);return r=r.setSubMatrix(t,0,0),r}}r!==s&&console.warn(`Multiplying ${n} x ${r} and ${s} x ${i} matrix: dimensions do not match.`);let o=Math.max(n,s),l=Math.max(r,i);return e=a(e,o,l),function t(e,n,r,s){if(r<=512||s<=512)return e.mmul(n);r%2==1&&s%2==1?(e=a(e,r+1,s+1),n=a(n,r+1,s+1)):r%2==1?(e=a(e,r+1,s),n=a(n,r+1,s)):s%2==1&&(e=a(e,r,s+1),n=a(n,r,s+1));let i=parseInt(e.rows/2,10),o=parseInt(e.columns/2,10),l=e.subMatrix(0,i-1,0,o-1),u=n.subMatrix(0,i-1,0,o-1),c=e.subMatrix(0,i-1,o,e.columns-1),h=n.subMatrix(0,i-1,o,n.columns-1),d=e.subMatrix(i,e.rows-1,0,o-1),p=n.subMatrix(i,n.rows-1,0,o-1),f=e.subMatrix(i,e.rows-1,o,e.columns-1),m=n.subMatrix(i,n.rows-1,o,n.columns-1),g=t(BO.add(l,f),BO.add(u,m),i,o),b=t(BO.add(d,f),u,i,o),y=t(l,BO.sub(h,m),i,o),x=t(f,BO.sub(p,u),i,o),w=t(BO.add(l,c),m,i,o),v=t(BO.sub(d,l),BO.add(u,h),i,o),k=t(BO.sub(c,f),BO.add(p,m),i,o),I=BO.add(g,x);I.sub(w),I.add(k);let $=BO.add(y,w),C=BO.add(b,x),N=BO.sub(g,b);N.add(y),N.add(v);let S=BO.zeros(2*I.rows,2*I.columns);return S=S.setSubMatrix(I,0,0),S=S.setSubMatrix($,I.rows,0),S=S.setSubMatrix(C,0,I.columns),S=S.setSubMatrix(N,I.rows,I.columns),S.subMatrix(0,r-1,0,s-1)}(e,t=a(t,o,l),o,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:n=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(n))throw new TypeError("max must be a number");if(e>=n)throw new RangeError("min must be smaller than max");let r=new VO(this.rows,this.columns);for(let t=0;t<this.rows;t++){const s=this.getRow(t);s.length>0&&CO(s,{min:e,max:n,output:s}),r.setRow(t,s)}return r}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:n=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(n))throw new TypeError("max must be a number");if(e>=n)throw new RangeError("min must be smaller than max");let r=new VO(this.rows,this.columns);for(let t=0;t<this.columns;t++){const s=this.getColumn(t);s.length&&CO(s,{min:e,max:n,output:s}),r.setColumn(t,s)}return r}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let n=0;n<t;n++){let t=this.get(e,n),r=this.get(e,this.columns-1-n);this.set(e,n,r),this.set(e,this.columns-1-n,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let n=0;n<t;n++){let t=this.get(n,e),r=this.get(this.rows-1-n,e);this.set(n,e,r),this.set(this.rows-1-n,e,t)}return this}kroneckerProduct(t){t=VO.checkMatrix(t);let e=this.rows,n=this.columns,r=t.rows,s=t.columns,i=new VO(e*r,n*s);for(let a=0;a<e;a++)for(let e=0;e<n;e++)for(let n=0;n<r;n++)for(let o=0;o<s;o++)i.set(r*a+n,s*e+o,this.get(a,e)*t.get(n,o));return i}transpose(){let t=new VO(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)t.set(n,e,this.get(e,n));return t}sortRows(t=WO){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=WO){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,n,r){OO(this,t,e,n,r);let s=new VO(e-t+1,r-n+1);for(let i=t;i<=e;i++)for(let e=n;e<=r;e++)s.set(i-t,e-n,this.get(i,e));return s}subMatrixRow(t,e,n){if(void 0===e&&(e=0),void 0===n&&(n=this.columns-1),e>n||e<0||e>=this.columns||n<0||n>=this.columns)throw new RangeError("Argument out of range");let r=new VO(t.length,n-e+1);for(let s=0;s<t.length;s++)for(let i=e;i<=n;i++){if(t[s]<0||t[s]>=this.rows)throw new RangeError(`Row index out of range: ${t[s]}`);r.set(s,i-e,this.get(t[s],i))}return r}subMatrixColumn(t,e,n){if(void 0===e&&(e=0),void 0===n&&(n=this.rows-1),e>n||e<0||e>=this.rows||n<0||n>=this.rows)throw new RangeError("Argument out of range");let r=new VO(n-e+1,t.length);for(let s=0;s<t.length;s++)for(let i=e;i<=n;i++){if(t[s]<0||t[s]>=this.columns)throw new RangeError(`Column index out of range: ${t[s]}`);r.set(i-e,s,this.get(i,t[s]))}return r}setSubMatrix(t,e,n){if((t=VO.checkMatrix(t)).isEmpty())return this;OO(this,e,e+t.rows-1,n,n+t.columns-1);for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)this.set(e+r,n+s,t.get(r,s));return this}selection(t,e){let n=function(t,e,n){return{row:DO(t,e),column:MO(t,n)}}(this,t,e),r=new VO(t.length,e.length);for(let t=0;t<n.row.length;t++){let e=n.row[t];for(let s=0;s<n.column.length;s++){let i=n.column[s];r.set(t,s,this.get(e,i))}}return r}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let n=0;n<t;n++)e+=this.get(n,n);return e}clone(){let t=new VO(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)t.set(e,n,this.get(e,n));return t}sum(t){switch(t){case"row":return function(t){let e=LO(t.rows);for(let n=0;n<t.rows;++n)for(let r=0;r<t.columns;++r)e[n]+=t.get(n,r);return e}(this);case"column":return function(t){let e=LO(t.columns);for(let n=0;n<t.rows;++n)for(let r=0;r<t.columns;++r)e[r]+=t.get(n,r);return e}(this);case void 0:return function(t){let e=0;for(let n=0;n<t.rows;n++)for(let r=0;r<t.columns;r++)e+=t.get(n,r);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=LO(t.rows,1);for(let n=0;n<t.rows;++n)for(let r=0;r<t.columns;++r)e[n]*=t.get(n,r);return e}(this);case"column":return function(t){let e=LO(t.columns,1);for(let n=0;n<t.rows;++n)for(let r=0;r<t.columns;++r)e[r]*=t.get(n,r);return e}(this);case void 0:return function(t){let e=1;for(let n=0;n<t.rows;n++)for(let r=0;r<t.columns;r++)e*=t.get(n,r);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:n=!0,mean:r=this.mean(t)}=e;if("boolean"!=typeof n)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!Array.isArray(r))throw new TypeError("mean must be an array");return function(t,e,n){const r=t.rows,s=t.columns,i=[];for(let a=0;a<r;a++){let r=0,o=0,l=0;for(let e=0;e<s;e++)l=t.get(a,e)-n[a],r+=l,o+=l*l;e?i.push((o-r*r/s)/(s-1)):i.push((o-r*r/s)/s)}return i}(this,n,r);case"column":if(!Array.isArray(r))throw new TypeError("mean must be an array");return function(t,e,n){const r=t.rows,s=t.columns,i=[];for(let a=0;a<s;a++){let s=0,o=0,l=0;for(let e=0;e<r;e++)l=t.get(e,a)-n[a],s+=l,o+=l*l;e?i.push((o-s*s/r)/(r-1)):i.push((o-s*s/r)/r)}return i}(this,n,r);case void 0:if("number"!=typeof r)throw new TypeError("mean must be a number");return function(t,e,n){const r=t.rows,s=t.columns,i=r*s;let a=0,o=0,l=0;for(let e=0;e<r;e++)for(let r=0;r<s;r++)l=t.get(e,r)-n,a+=l,o+=l*l;return e?(o-a*a/i)/(i-1):(o-a*a/i)/i}(this,n,r);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const n=this.variance(t,e);if(void 0===t)return Math.sqrt(n);for(let t=0;t<n.length;t++)n[t]=Math.sqrt(n[t]);return n}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:n=this.mean(t)}=e;switch(t){case"row":if(!Array.isArray(n))throw new TypeError("center must be an array");return function(t,e){for(let n=0;n<t.rows;n++)for(let r=0;r<t.columns;r++)t.set(n,r,t.get(n,r)-e[n])}(this,n),this;case"column":if(!Array.isArray(n))throw new TypeError("center must be an array");return function(t,e){for(let n=0;n<t.rows;n++)for(let r=0;r<t.columns;r++)t.set(n,r,t.get(n,r)-e[r])}(this,n),this;case void 0:if("number"!=typeof n)throw new TypeError("center must be a number");return function(t,e){for(let n=0;n<t.rows;n++)for(let r=0;r<t.columns;r++)t.set(n,r,t.get(n,r)-e)}(this,n),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let n=e.scale;switch(t){case"row":if(void 0===n)n=function(t){const e=[];for(let n=0;n<t.rows;n++){let r=0;for(let e=0;e<t.columns;e++)r+=Math.pow(t.get(n,e),2)/(t.columns-1);e.push(Math.sqrt(r))}return e}(this);else if(!Array.isArray(n))throw new TypeError("scale must be an array");return function(t,e){for(let n=0;n<t.rows;n++)for(let r=0;r<t.columns;r++)t.set(n,r,t.get(n,r)/e[n])}(this,n),this;case"column":if(void 0===n)n=function(t){const e=[];for(let n=0;n<t.columns;n++){let r=0;for(let e=0;e<t.rows;e++)r+=Math.pow(t.get(e,n),2)/(t.rows-1);e.push(Math.sqrt(r))}return e}(this);else if(!Array.isArray(n))throw new TypeError("scale must be an array");return function(t,e){for(let n=0;n<t.rows;n++)for(let r=0;r<t.columns;r++)t.set(n,r,t.get(n,r)/e[r])}(this,n),this;case void 0:if(void 0===n)n=function(t){const e=t.size-1;let n=0;for(let r=0;r<t.columns;r++)for(let s=0;s<t.rows;s++)n+=Math.pow(t.get(s,r),2)/e;return Math.sqrt(n)}(this);else if("number"!=typeof n)throw new TypeError("scale must be a number");return function(t,e){for(let n=0;n<t.rows;n++)for(let r=0;r<t.columns;r++)t.set(n,r,t.get(n,r)/e)}(this,n),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return EO(this,t)}}function WO(t,e){return t-e}BO.prototype.klass="Matrix","undefined"!=typeof Symbol&&(BO.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return EO(this)}),BO.random=BO.rand,BO.randomInt=BO.randInt,BO.diagonal=BO.diag,BO.prototype.diagonal=BO.prototype.diag,BO.identity=BO.eye,BO.prototype.negate=BO.prototype.neg,BO.prototype.tensorProduct=BO.prototype.kroneckerProduct;class VO extends BO{constructor(t,e){if(super(),VO.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let n=0;n<t;n++)this.data.push(new Float64Array(e))}else{if(!Array.isArray(t))throw new TypeError("First argument must be a positive number or an array");{const n=t;if("number"!=typeof(e=(t=n.length)?n[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let r=0;r<t;r++){if(n[r].length!==e)throw new RangeError("Inconsistent array dimensions");this.data.push(Float64Array.from(n[r]))}}}this.rows=t,this.columns=e}set(t,e,n){return this.data[t][e]=n,this}get(t,e){return this.data[t][e]}removeRow(t){return TO(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),TO(this,t,!0),e=Float64Array.from(FO(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){RO(this,t);for(let e=0;e<this.rows;e++){const n=new Float64Array(this.columns-1);for(let r=0;r<t;r++)n[r]=this.data[e][r];for(let r=t+1;r<this.columns;r++)n[r-1]=this.data[e][r];this.data[e]=n}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),RO(this,t,!0),e=_O(this,e);for(let n=0;n<this.rows;n++){const r=new Float64Array(this.columns+1);let s=0;for(;s<t;s++)r[s]=this.data[n][s];for(r[s++]=e[n];s<this.columns+1;s++)r[s]=this.data[n][s-1];this.data[n]=r}return this.columns+=1,this}}function UO(t,e){const n=new VO(t.rows,e.rows);for(let r=0;r<t.rows;r++)for(let s=0;s<e.rows;s++)n.set(r,s,pO(t.getRow(r),e.getRow(s)));return n}function GO(t){let e=[];for(let n=0;n<t;n++)e.push(n);return e}function jO(t){let e=[t[0]];for(let n=1;n<t.length;n++)e[n]=e[n-1]+t[n];return e}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)+t.get(e,n));return this},t.add=function(t,n){return new e(t).add(n)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)-t.get(e,n));return this},t.sub=function(t,n){return new e(t).sub(n)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)*t.get(e,n));return this},t.mul=function(t,n){return new e(t).mul(n)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)/t.get(e,n));return this},t.div=function(t,n){return new e(t).div(n)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)%t.get(e,n));return this},t.mod=function(t,n){return new e(t).mod(n)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)&t.get(e,n));return this},t.and=function(t,n){return new e(t).and(n)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)|t.get(e,n));return this},t.or=function(t,n){return new e(t).or(n)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)^t.get(e,n));return this},t.xor=function(t,n){return new e(t).xor(n)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)<<t.get(e,n));return this},t.leftShift=function(t,n){return new e(t).leftShift(n)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)>>t.get(e,n));return this},t.signPropagatingRightShift=function(t,n){return new e(t).signPropagatingRightShift(n)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)>>>t.get(e,n));return this},t.rightShift=function(t,n){return new e(t).rightShift(n)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,n){return new e(t).pow(n)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,Math.pow(this.get(e,n),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++)this.set(e,n,Math.pow(this.get(e,n),t.get(e,n)));return this}}(BO,VO);const HO=Symbol("distance");class qO{constructor(t,e,n,r,s){this.clusters=t,this.centroids=e,this.converged=n,this.iterations=r,this[HO]=s}nearest(t){const e=new Array(t.length);return gO(t,this.centroids.map((function(t){return t.centroid})),e,this[HO])}computeInformation(t){for(var e=this.centroids.map((function(t){return{centroid:t,error:0,size:0}})),n=0;n<t.length;n++)e[this.clusters[n]].error+=this[HO](t[n],this.centroids[this.clusters[n]]),e[this.clusters[n]].size++;for(var r=0;r<this.centroids.length;r++)e[r].size?e[r].error/=e[r].size:e[r].error=null;return new qO(this.clusters,e,this.converged,this.iterations,this[HO])}}const KO={maxIterations:100,tolerance:1e-6,withIterations:!1,initialization:"kmeans++",distanceFunction:pO};function XO(t,e,n,r,s,i){var a=function(t,e,n,r){const s=e[0].length;for(var i=new Array(r),a=new Array(r),o=0;o<r;o++){i[o]=new Array(s),a[o]=0;for(var l=0;l<s;l++)i[o][l]=0}for(var u=0;u<e.length;u++){a[n[u]]++;for(var c=0;c<s;c++)i[n[u]][c]+=e[u][c]}for(var h=0;h<r;h++)for(var d=0;d<s;d++)a[h]?i[h][d]/=a[h]:i[h][d]=t[h][d];return i}(t,e,n=gO(e,t,n,s.distanceFunction),r),o=function(t,e,n,r){for(var s=0;s<t.length;s++)if(n(t[s],e[s])>r)return!1;return!0}(a,t,s.distanceFunction,s.tolerance);return new qO(n,a,o,i,s.distanceFunction)}var YO,ZO,JO=n(492),QO=uO.deserializeState(),tL=[-6,6],eL=Cr().domain([-1,0,1]).range(["#808B96","#808B96","#808B96"]).clamp(!0),nL=new _r(300,50,tL,tL,Sr("#input-heatmap"),{showAxes:!0}),rL=new _r(300,50,tL,tL,Sr("#kmeans-heatmap"),{showAxes:!0}),sL=new _r(300,50,tL,tL,Sr("#dbscan-heatmap"),{showAxes:!0});function iL(t){void 0===t&&(t=!1),t||(QO.seed=Math.random().toFixed(5),QO.serialize()),Tr(QO.seed);var e=QO.dataset;QM(YO=e(600,QO.noise/100)),ZO=YO,uL()}function aL(t){void 0===t&&(t=!1),t?Sr("#clusterCount").property("value",QO.clusters):(oL(!1),nL.setColorScale(!1),rL.setColorScale(!1),sL.setColorScale(!1)),ZO=YO,QO.serialize(),uL(),lL(!0,null,null)}function oL(t){Sr("#input-heatmap canvas").style("opacity",t?.2:1),Sr("#input-heatmap svg").style("opacity",t?.2:1),Sr("#kmeans-heatmap canvas").style("opacity",t?.2:1),Sr("#kmeans-heatmap svg").style("opacity",t?.2:1),Sr("#dbscan-heatmap canvas").style("opacity",t?.2:1),Sr("#dbscan-heatmap svg").style("opacity",t?.2:1)}function lL(t,e,n){if(t)Er(".metrics table tr").remove();else{var r=Sr(".metrics table");r.selectAll("tr").remove(),r.select("thead").append("tr").append("th").attr("colspan","2").text("Metrics");var s=r.select("tbody").append("tr");s.append("td").text("Mean Square Error"),s.append("td").text(e);var i=r.select("tbody").append("tr");i.append("td").text("Iterations"),i.append("td").text(n)}}function uL(){nL.updatePoints(ZO),rL.updatePoints(ZO),sL.updatePoints(ZO)}Sr(".txt_epsilon").on("input",(function(t){var e=this;e.value=e.value.replace(/[^0-9.]/g,"").replace(/(\..*?)\..*/g,"$1");var n=parseFloat(e.value);isNaN(n)||n<.1||n>3?Sr(".txt_epsilon").style("border","1px solid red"):Sr(".txt_epsilon").style("border","1px solid rgb(118, 118, 118)")})),Sr(".txt_neighborPoints").on("input",(function(t){var e=this;e.value=e.value.replace(/[^0-9]/g,"").replace(/(\..*?)\..*/g,"$1");var n=parseInt(e.value);isNaN(n)||n<2||n>20?Sr(".txt_neighborPoints").style("border","1px solid red"):Sr(".txt_neighborPoints").style("border","1px solid rgb(118, 118, 118)")})),function(){var t=function(t,e){t.setAttribute("width",100),t.setAttribute("height",100);var n=t.getContext("2d");e(200,0).forEach((function(t){n.fillStyle=eL(t.label),n.fillRect(100*(t.x+6)/12,100*(6-t.y)/12,4,4)})),Sr(t.parentNode).style("display",null)};for(var e in Er(".dataset").style("display","none"),oO)t(document.querySelector("canvas[data-dataset="+e+"]"),oO[e])}(),function(){Sr("#start-button").on("click",(function(){if(function(){var t=Sr(".txt_epsilon").property("value"),e=parseFloat(t);return isNaN(e)||e<.1||e>3?(Sr(".txt_epsilon").style("border","1px solid red"),!1):(Sr(".txt_epsilon").style("border","1px solid rgb(118, 118, 118)"),!0)}()&&(t=Sr(".txt_neighborPoints").property("value"),e=parseInt(t),isNaN(e)||e<2||e>20?(Sr(".txt_neighborPoints").style("border","1px solid red"),0):(Sr(".txt_neighborPoints").style("border","1px solid rgb(118, 118, 118)"),1))){var t,e;oL(!0),null!=ZO&&ZO.length>0&&(ZO=ZO.filter((function(t){return 0==t.IsCentroid})));var n=function(t){if(null!=t&&null!=t){var e=[];return t.forEach((function(t){e.push([t.x,t.y])})),e}return null}(ZO),r=parseInt(QO.clusters.toString()),s=function(t,e,n){for(var r=[];r.length<n;){var s=dO(0,e);-1===r.indexOf(s)&&r.push(s)}return r}(0,ZO.length-1,QO.clusters),i=[];s.forEach((function(t){var e=ZO[t];i.push([e.x,e.y])}));var a,o=function(t,e,n){if(n=Object.assign({},KO,n),e<=0||e>t.length||!Number.isInteger(e))throw new Error("K should be a positive integer smaller than the number of points");var r;if(Array.isArray(n.initialization)){if(n.initialization.length!==e)throw new Error("The initial centers should have the same length as K");r=n.initialization}else switch(n.initialization){case"kmeans++":r=function(t,e,n={}){const r=(t=new VO(t)).rows,s=new wO(n.seed),i=[],a=n.localTrials||2+Math.floor(Math.log(e)),o=s.randInt(r);i.push(t.getRow(o));let l=new VO(1,t.rows);for(let e=0;e<t.rows;e++)l.set(0,e,pO(t.getRow(e),i[0]));let u=[jO(l.getRow(0))];const c=1/u[0][r-1];let h=VO.mul(l,c);for(let n=1;n<e;n++){const e=s.choice(r,{replace:!0,size:a,probabilities:h[0]}),o=UO(t.selection(e,GO(t.columns)),t);let c,d,p;for(let t=0;t<a;t++){const n=VO.min(l,[o.getRow(t)]),r=n.sum();(void 0===c||r<d)&&(c=e[t],d=r,p=n)}i[n]=t.getRow(c),l=p,u=[jO(l.getRow(0))],h=VO.mul(l,1/u[0][r-1])}return i}(t,e,n);break;case"random":r=function(t,e,n){return new wO(n).choice(t,{size:e})}(t,e,n.seed);break;case"mostDistant":r=function(t,e,n,r){const s=new wO(r);var i=new Array(e);if(i[0]=Math.floor(s.random()*t.length),e>1){for(var a={dist:-1,index:-1},o=0;o<t.length;++o)n[i[0]][o]>a.dist&&(a.dist=n[i[0]][o],a.index=o);if(i[1]=a.index,e>2)for(var l=2;l<e;++l){for(var u={dist:-1,index:-1},c=0;c<t.length;++c){for(var h={dist:Number.MAX_VALUE,index:-1},d=0;d<l;++d)n[d][c]<h.dist&&-1===i.indexOf(c)&&(h={dist:n[d][c],index:c});h.dist!==Number.MAX_VALUE&&h.dist>u.dist&&(u=Object.assign({},h))}i[l]=u.index}}return i.map((e=>t[e]))}(t,e,function(t,e){for(var n=new Array(t.length),r=0;r<t.length;++r)for(var s=r;s<t.length;++s){n[r]||(n[r]=new Array(t.length)),n[s]||(n[s]=new Array(t.length));const i=e(t[r],t[s]);n[r][s]=i,n[s][r]=i}return n}(t,n.distanceFunction),n.seed);break;default:throw new Error(`Unknown initialization method: "${n.initialization}"`)}0===n.maxIterations&&(n.maxIterations=Number.MAX_VALUE);var s=new Array(t.length);if(n.withIterations)return function*(t,e,n,r,s){for(var i,a=!1,o=0;!a&&o<s.maxIterations;)i=XO(t,e,n,r,s,++o),yield i.computeInformation(e),a=i.converged,t=i.centroids}(r,t,s,e,n);for(var i,a=!1,o=0;!a&&o<n.maxIterations;)a=(i=XO(r,t,s,e,n,++o)).converged,r=i.centroids;return i.computeInformation(t)}(n,r,{initialization:i});(a=o.clusters)&&ZO.length==a.length&&ZO.forEach((function(t,e){t.cluster=a[e]}));var l=0,u=o.iterations;o.centroids.forEach((function(t,e){ZO.push(sO(t.centroid[0],t.centroid[1],1,e,!0)),l+=t.error})),s.forEach((function(t){var e=ZO[t];ZO.push(sO(e.x,e.y,1,9,!1))})),lL(!1,l,u),rL.setColorScale(!0),rL.updatePoints(ZO),function(t){var e=new JO.DBSCAN,n=Sr(".txt_epsilon").property("value"),r=Sr(".txt_neighborPoints").property("value");console.log(n),console.log(r);var s=e.run(t,n,r),i=[],a=[];s.forEach((function(t,e){a=a.concat(t),t.forEach((function(t){var n=ZO[t];i.push(sO(n.x,n.y,n.label,e,!1))}))}));var o=t.filter((function(t,e){return!a.some((function(t){return t==e}))}));null!=o&&o.length>0&&o.forEach((function(t){i.push(sO(t[0],t[1],1,9,!1))})),QM(i),sL.setColorScale(!0),sL.updatePoints(i)}(function(t){var e=[];return t.forEach((function(t){e.push([t[0],t[1]])})),e}(n)),oL(!1)}})),Sr("#clusterCount").on("change",(function(){QO.clusters=this.value,QO.serialize()})),Sr("#data-regen-button").on("click",(function(){iL(),aL()}));var t=Er("canvas[data-dataset]");t.on("click",(function(){nL.setColorScale(!1),rL.setColorScale(!1),sL.setColorScale(!1);var e=oO[this.dataset.dataset];e!==QO.dataset&&(QO.dataset=e,t.classed("selected",!1),Sr(this).classed("selected",!0),iL(),aL())})),Sr("canvas[data-dataset="+lO(oO,QO.dataset)+"]").classed("selected",!0);var e=Sr("#noise").on("input",(function(){QO.noise=+this.value,Sr("label[for='noise'] .value").text(this.value),iL(),aL()})),n=parseInt(e.property("max"));QO.noise>n?QO.noise<=80?e.property("max",QO.noise):QO.noise=50:QO.noise<0&&(QO.noise=0),e.property("value",QO.noise),Sr("label[for='noise'] .value").text(QO.noise);var r=y(Cr().domain([-1,1]).range([0,144])).tickValues([-1,0,1]).tickFormat(Yn("d"));Sr("#colormap g.core").append("g").attr("class","x axis").attr("transform","translate(0,10)").call(r)}(),iL(!0),aL(!0)})()})();